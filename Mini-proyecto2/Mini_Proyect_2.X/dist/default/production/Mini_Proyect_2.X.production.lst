

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 22:47:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  008F                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  0105                     	;# 
   438  0107                     	;# 
   439  0108                     	;# 
   440  0109                     	;# 
   441  010C                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  010E                     	;# 
   445  010F                     	;# 
   446  0185                     	;# 
   447  0187                     	;# 
   448  0188                     	;# 
   449  0189                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452                           
   453                           	psect	strings
   454  0003                     __pstrings:
   455  0003                     stringtab:
   456  0003                     __stringtab:
   457  0003                     stringcode:	
   458                           ;	String table - string pointers are 1 byte each
   459                           
   460  0003                     stringdir:
   461  0003  3000               	movlw	high stringdir
   462  0004  008A               	movwf	10
   463  0005  0804               	movf	4,w
   464  0006  0A84               	incf	4,f
   465  0007  0782               	addwf	2,f
   466  0008                     __stringbase:
   467  0008  3400               	retlw	0
   468  0009                     __end_of__stringtab:
   469  0009                     _dpowers:
   470  0009  3401               	retlw	1
   471  000A  3400               	retlw	0
   472  000B  340A               	retlw	10
   473  000C  3400               	retlw	0
   474  000D  3464               	retlw	100
   475  000E  3400               	retlw	0
   476  000F  34E8               	retlw	232
   477  0010  3403               	retlw	3
   478  0011  3410               	retlw	16
   479  0012  3427               	retlw	39
   480  0013                     __end_of_dpowers:
   481  0018                     _RCSTA	set	24
   482  0013                     _SSPBUF	set	19
   483  0014                     _SSPCON	set	20
   484  001A                     _RCREG	set	26
   485  0018                     _RCSTAbits	set	24
   486  000C                     _PIR1bits	set	12
   487  0019                     _TXREG	set	25
   488  0009                     _PORTE	set	9
   489  0008                     _PORTD	set	8
   490  0007                     _PORTC	set	7
   491  0006                     _PORTB	set	6
   492  0005                     _PORTA	set	5
   493  0063                     _SSPIF	set	99
   494  005E                     _PEIE	set	94
   495  005F                     _GIE	set	95
   496  00C4                     _CREN	set	196
   497  008F                     _OSCCONbits	set	143
   498  0098                     _TXSTA	set	152
   499  008C                     _PIE1bits	set	140
   500  0098                     _TXSTAbits	set	152
   501  0099                     _SPBRG	set	153
   502  0091                     _SSPCON2bits	set	145
   503  0094                     _SSPSTAT	set	148
   504  0093                     _SSPADD	set	147
   505  0091                     _SSPCON2	set	145
   506  0089                     _TRISEbits	set	137
   507  0089                     _TRISE	set	137
   508  0088                     _TRISD	set	136
   509  0087                     _TRISCbits	set	135
   510  0087                     _TRISC	set	135
   511  0086                     _TRISB	set	134
   512  0085                     _TRISA	set	133
   513  043F                     _TRISC7	set	1087
   514  043E                     _TRISC6	set	1086
   515  0463                     _SSPIE	set	1123
   516  043C                     _TRISC4	set	1084
   517  043B                     _TRISC3	set	1083
   518  048B                     _RCEN	set	1163
   519  0189                     _ANSELH	set	393
   520  0188                     _ANSEL	set	392
   521  0013                     STR_1:
   522  0013  3425               	retlw	37	;'%'
   523  0014  3464               	retlw	100	;'d'
   524  0015  3420               	retlw	32	;' '
   525  0016  340D               	retlw	13
   526  0017  340A               	retlw	10
   527  0018  3400               	retlw	0
   528                           
   529                           	psect	cinit
   530  07F2                     start_initialization:	
   531                           ; #config settings
   532                           
   533  07F2                     __initialization:
   534                           
   535                           ; Clear objects allocated to BANK0
   536  07F2  1283               	bcf	3,5	;RP0=0, select bank0
   537  07F3  1303               	bcf	3,6	;RP1=0, select bank0
   538  07F4  01C4               	clrf	__pbssBANK0& (0+127)
   539  07F5  01C5               	clrf	(__pbssBANK0+1)& (0+127)
   540  07F6  01C6               	clrf	(__pbssBANK0+2)& (0+127)
   541  07F7  01C7               	clrf	(__pbssBANK0+3)& (0+127)
   542  07F8  01C8               	clrf	(__pbssBANK0+4)& (0+127)
   543  07F9  01C9               	clrf	(__pbssBANK0+5)& (0+127)
   544  07FA  01CA               	clrf	(__pbssBANK0+6)& (0+127)
   545  07FB  01CB               	clrf	(__pbssBANK0+7)& (0+127)
   546  07FC                     end_of_initialization:	
   547                           ;End of C runtime variable initialization code
   548                           
   549  07FC                     __end_of__initialization:
   550  07FC  0183               	clrf	3
   551  07FD  120A  118A  2DEE   	ljmp	_main	;jump to C main() function
   552                           
   553                           	psect	bssBANK0
   554  0044                     __pbssBANK0:
   555  0044                     _sensor:
   556  0044                     	ds	2
   557  0046                     _Int1:
   558  0046                     	ds	2
   559  0048                     _COMPARE:
   560  0048                     	ds	1
   561  0049                     _Estado:
   562  0049                     	ds	1
   563  004A                     _Byte2:
   564  004A                     	ds	1
   565  004B                     _Byte1:
   566  004B                     	ds	1
   567                           
   568                           	psect	cstackCOMMON
   569  0070                     __pcstackCOMMON:
   570  0070                     ?_setup:
   571  0070                     ?_USART_config:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ??_USART_config:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_I2C_M_Start:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ??_I2C_M_Start:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_I2C_M_Stop:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ??_I2C_M_Stop:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_USART_SendString:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_InitOSC:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ??_InitOSC:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_USART_lib_config:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ??_USART_lib_config:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_main:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_escribir_char:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ??_escribir_char:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_I2C_M_Wait:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ??_I2C_M_Wait:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_I2C_M_Read:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?___lwdiv:	
   623                           ; 2 bytes @ 0x0
   624                           
   625  0070                     ?___lldiv:	
   626                           ; 2 bytes @ 0x0
   627                           
   628  0070                     escribir_char@valor:	
   629                           ; 4 bytes @ 0x0
   630                           
   631  0070                     I2C_M_Read@a:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ___lwdiv@divisor:	
   635                           ; 2 bytes @ 0x0
   636                           
   637  0070                     ___lldiv@divisor:	
   638                           ; 2 bytes @ 0x0
   639                           
   640                           
   641                           ; 4 bytes @ 0x0
   642  0070                     	ds	1
   643  0071                     ??_USART_SendString:
   644                           
   645                           ; 1 bytes @ 0x1
   646  0071                     	ds	1
   647  0072                     ??_I2C_M_Read:
   648  0072                     USART_SendString@str:	
   649                           ; 1 bytes @ 0x2
   650                           
   651  0072                     InitOSC@frec:	
   652                           ; 1 bytes @ 0x2
   653                           
   654  0072                     ___lwdiv@dividend:	
   655                           ; 1 bytes @ 0x2
   656                           
   657                           
   658                           ; 2 bytes @ 0x2
   659  0072                     	ds	1
   660  0073                     ??_setup:
   661                           
   662                           ; 1 bytes @ 0x3
   663  0073                     	ds	1
   664  0074                     ??___lwdiv:
   665  0074                     I2C_M_Read@temp:	
   666                           ; 1 bytes @ 0x4
   667                           
   668  0074                     ___lldiv@dividend:	
   669                           ; 2 bytes @ 0x4
   670                           
   671                           
   672                           ; 4 bytes @ 0x4
   673  0074                     	ds	1
   674  0075                     ___lwdiv@quotient:
   675                           
   676                           ; 2 bytes @ 0x5
   677  0075                     	ds	2
   678  0077                     ___lwdiv@counter:
   679                           
   680                           ; 1 bytes @ 0x7
   681  0077                     	ds	1
   682  0078                     ??___lldiv:
   683  0078                     ?___lwmod:	
   684                           ; 1 bytes @ 0x8
   685                           
   686  0078                     ___lwmod@divisor:	
   687                           ; 2 bytes @ 0x8
   688                           
   689                           
   690                           ; 2 bytes @ 0x8
   691  0078                     	ds	1
   692  0079                     ___lldiv@quotient:
   693                           
   694                           ; 4 bytes @ 0x9
   695  0079                     	ds	1
   696  007A                     ___lwmod@dividend:
   697                           
   698                           ; 2 bytes @ 0xA
   699  007A                     	ds	2
   700  007C                     ??___lwmod:
   701                           
   702                           ; 1 bytes @ 0xC
   703  007C                     	ds	1
   704  007D                     ___lldiv@counter:
   705  007D                     ___lwmod@counter:	
   706                           ; 1 bytes @ 0xD
   707                           
   708                           
   709                           ; 1 bytes @ 0xD
   710  007D                     	ds	1
   711                           
   712                           	psect	cstackBANK0
   713  0020                     __pcstackBANK0:
   714  0020                     ?_I2C_Init:
   715  0020                     ?_sprintf:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0020                     sprintf@f:	
   719                           ; 2 bytes @ 0x0
   720                           
   721  0020                     I2C_Init@a:	
   722                           ; 1 bytes @ 0x0
   723                           
   724                           
   725                           ; 4 bytes @ 0x0
   726  0020                     	ds	3
   727  0023                     ??_sprintf:
   728                           
   729                           ; 1 bytes @ 0x3
   730  0023                     	ds	1
   731  0024                     ??_I2C_Init:
   732                           
   733                           ; 1 bytes @ 0x4
   734  0024                     	ds	2
   735  0026                     sprintf@ap:
   736                           
   737                           ; 1 bytes @ 0x6
   738  0026                     	ds	1
   739  0027                     sprintf@flag:
   740                           
   741                           ; 1 bytes @ 0x7
   742  0027                     	ds	1
   743  0028                     sprintf@prec:
   744                           
   745                           ; 1 bytes @ 0x8
   746  0028                     	ds	1
   747  0029                     sprintf@val:
   748                           
   749                           ; 2 bytes @ 0x9
   750  0029                     	ds	2
   751  002B                     sprintf@sp:
   752                           
   753                           ; 1 bytes @ 0xB
   754  002B                     	ds	1
   755  002C                     sprintf@c:
   756                           
   757                           ; 1 bytes @ 0xC
   758  002C                     	ds	1
   759  002D                     ??_main:
   760                           
   761                           ; 1 bytes @ 0xD
   762  002D                     	ds	3
   763  0030                     main@buffer:
   764                           
   765                           ; 20 bytes @ 0x10
   766  0030                     	ds	20
   767                           
   768                           	psect	maintext
   769  05EE                     __pmaintext:	
   770 ;;
   771 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   772 ;;
   773 ;; *************** function _main *****************
   774 ;; Defined at:
   775 ;;		line 48 in file "LM75_SensorTemo.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;		None
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  buffer         20   16[BANK0 ] unsigned char [20]
   780 ;;  Temp            2    0        int 
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   785 ;; Tracked objects:
   786 ;;		On entry : B00/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   790 ;;      Params:         0       0       0       0       0
   791 ;;      Locals:         0      20       0       0       0
   792 ;;      Temps:          0       3       0       0       0
   793 ;;      Totals:         0      23       0       0       0
   794 ;;Total ram usage:       23 bytes
   795 ;; Hardware stack levels required when called:    2
   796 ;; This function calls:
   797 ;;		_I2C_Init
   798 ;;		_I2C_M_Read
   799 ;;		_I2C_M_Start
   800 ;;		_I2C_M_Stop
   801 ;;		_USART_SendString
   802 ;;		_USART_config
   803 ;;		_setup
   804 ;;		_sprintf
   805 ;; This function is called by:
   806 ;;		Startup code after reset
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           
   811                           ;psect for function _main
   812  05EE                     _main:
   813  05EE                     l1405:	
   814                           ;incstack = 0
   815                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   816                           
   817                           
   818                           ;LM75_SensorTemo.c: 49:     setup();
   819  05EE  120A  118A  2508  120A  118A  	fcall	_setup
   820  05F3                     l1407:
   821                           
   822                           ;LM75_SensorTemo.c: 50:     I2C_Init(100000);
   823  05F3  3000               	movlw	0
   824  05F4  1283               	bcf	3,5	;RP0=0, select bank0
   825  05F5  1303               	bcf	3,6	;RP1=0, select bank0
   826  05F6  00A3               	movwf	I2C_Init@a+3
   827  05F7  3001               	movlw	1
   828  05F8  00A2               	movwf	I2C_Init@a+2
   829  05F9  3086               	movlw	134
   830  05FA  00A1               	movwf	I2C_Init@a+1
   831  05FB  30A0               	movlw	160
   832  05FC  00A0               	movwf	I2C_Init@a
   833  05FD  120A  118A  2538  120A  118A  	fcall	_I2C_Init
   834  0602                     l1409:
   835                           
   836                           ;LM75_SensorTemo.c: 51:     USART_config();
   837  0602  120A  118A  2476  120A  118A  	fcall	_USART_config
   838  0607                     l1411:
   839                           
   840                           ;LM75_SensorTemo.c: 58:       {;LM75_SensorTemo.c: 59:       I2C_M_Start();
   841  0607  120A  118A  247C  120A  118A  	fcall	_I2C_M_Start
   842  060C                     l1413:
   843                           
   844                           ;LM75_SensorTemo.c: 60:       sensor = I2C_M_Read (0);
   845  060C  3000               	movlw	0
   846  060D  00F0               	movwf	I2C_M_Read@a
   847  060E  00F1               	movwf	I2C_M_Read@a+1
   848  060F  120A  118A  24DA  120A  118A  	fcall	_I2C_M_Read
   849  0614  0871               	movf	?_I2C_M_Read+1,w
   850  0615  1283               	bcf	3,5	;RP0=0, select bank0
   851  0616  1303               	bcf	3,6	;RP1=0, select bank0
   852  0617  00C5               	movwf	_sensor+1
   853  0618  0870               	movf	?_I2C_M_Read,w
   854  0619  00C4               	movwf	_sensor
   855  061A                     l1415:
   856                           
   857                           ;LM75_SensorTemo.c: 61:       I2C_M_Stop();I2C_M_Read;
   858  061A  120A  118A  2485  120A  118A  	fcall	_I2C_M_Stop
   859  061F                     l1417:
   860                           
   861                           ;LM75_SensorTemo.c: 64:       _delay((unsigned long)((200)*(80000000/4000.0)));
   862  061F  3015               	movlw	21
   863  0620  1283               	bcf	3,5	;RP0=0, select bank0
   864  0621  1303               	bcf	3,6	;RP1=0, select bank0
   865  0622  00AF               	movwf	??_main+2
   866  0623  304B               	movlw	75
   867  0624  00AE               	movwf	??_main+1
   868  0625  30BD               	movlw	189
   869  0626  00AD               	movwf	??_main
   870  0627                     u687:
   871  0627  0BAD               	decfsz	??_main,f
   872  0628  2E27               	goto	u687
   873  0629  0BAE               	decfsz	??_main+1,f
   874  062A  2E27               	goto	u687
   875  062B  0BAF               	decfsz	??_main+2,f
   876  062C  2E27               	goto	u687
   877  062D  2E2E               	nop2
   878  062E                     l1419:
   879                           
   880                           ;LM75_SensorTemo.c: 70:       sprintf(buffer, "%d \r\n",sensor);
   881  062E  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   882  062F  1283               	bcf	3,5	;RP0=0, select bank0
   883  0630  1303               	bcf	3,6	;RP1=0, select bank0
   884  0631  00AD               	movwf	??_main
   885  0632  082D               	movf	??_main,w
   886  0633  00A0               	movwf	sprintf@f
   887  0634  0845               	movf	_sensor+1,w
   888  0635  00A2               	movwf	?_sprintf+2
   889  0636  0844               	movf	_sensor,w
   890  0637  00A1               	movwf	?_sprintf+1
   891  0638  3030               	movlw	(low (main@buffer| 0))& (0+255)
   892  0639  120A  118A  270A  120A  118A  	fcall	_sprintf
   893  063E                     l1421:
   894                           
   895                           ;LM75_SensorTemo.c: 71:       USART_SendString(buffer);
   896  063E  3030               	movlw	(low (main@buffer| 0))& (0+255)
   897  063F  120A  118A  24A5  120A  118A  	fcall	_USART_SendString
   898  0644  2E07               	goto	l1411
   899  0645  120A  118A  2800   	ljmp	start
   900  0648                     __end_of_main:
   901                           
   902                           	psect	text1
   903  070A                     __ptext1:	
   904 ;; *************** function _sprintf *****************
   905 ;; Defined at:
   906 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  sp              1    wreg     PTR unsigned char 
   909 ;;		 -> main@buffer(20), 
   910 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   911 ;;		 -> STR_1(6), 
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  sp              1   11[BANK0 ] PTR unsigned char 
   914 ;;		 -> main@buffer(20), 
   915 ;;  tmpval          4    0        struct .
   916 ;;  val             2    9[BANK0 ] unsigned int 
   917 ;;  cp              2    0        PTR const unsigned char 
   918 ;;  len             2    0        unsigned int 
   919 ;;  c               1   12[BANK0 ] unsigned char 
   920 ;;  prec            1    8[BANK0 ] char 
   921 ;;  flag            1    7[BANK0 ] unsigned char 
   922 ;;  ap              1    6[BANK0 ] PTR void [1]
   923 ;;		 -> ?_sprintf(2), 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  2    0[BANK0 ] int 
   926 ;; Registers used:
   927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         0       3       0       0       0
   934 ;;      Locals:         0       7       0       0       0
   935 ;;      Temps:          0       3       0       0       0
   936 ;;      Totals:         0      13       0       0       0
   937 ;;Total ram usage:       13 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    1
   940 ;; This function calls:
   941 ;;		___lwdiv
   942 ;;		___lwmod
   943 ;; This function is called by:
   944 ;;		_main
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           
   949                           ;psect for function _sprintf
   950  070A                     _sprintf:
   951                           
   952                           ;incstack = 0
   953                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   954                           ;sprintf@sp stored from wreg
   955  070A  1283               	bcf	3,5	;RP0=0, select bank0
   956  070B  1303               	bcf	3,6	;RP1=0, select bank0
   957  070C  00AB               	movwf	sprintf@sp
   958  070D                     l1335:
   959                           
   960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
   961  070D  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
   962  070E  00A3               	movwf	??_sprintf
   963  070F  0823               	movf	??_sprintf,w
   964  0710  00A6               	movwf	sprintf@ap
   965                           
   966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   967  0711  2FDB               	goto	l1387
   968  0712                     l1337:
   969                           
   970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
   971  0712  3025               	movlw	37
   972  0713  062C               	xorwf	sprintf@c,w
   973  0714  1903               	btfsc	3,2
   974  0715  2F17               	goto	u601
   975  0716  2F18               	goto	u600
   976  0717                     u601:
   977  0717  2F24               	goto	l1343
   978  0718                     u600:
   979  0718                     l1339:
   980                           
   981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
   982  0718  082C               	movf	sprintf@c,w
   983  0719  00A3               	movwf	??_sprintf
   984  071A  082B               	movf	sprintf@sp,w
   985  071B  0084               	movwf	4
   986  071C  0823               	movf	??_sprintf,w
   987  071D  1383               	bcf	3,7	;select IRP bank0
   988  071E  0080               	movwf	0
   989  071F                     l1341:
   990  071F  3001               	movlw	1
   991  0720  00A3               	movwf	??_sprintf
   992  0721  0823               	movf	??_sprintf,w
   993  0722  07AB               	addwf	sprintf@sp,f
   994                           
   995                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   996  0723  2FDB               	goto	l1387
   997  0724                     l1343:
   998                           
   999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1000  0724  01A7               	clrf	sprintf@flag
  1001  0725                     l1347:	
  1002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1003                           
  1004  0725  3001               	movlw	1
  1005  0726  07A0               	addwf	sprintf@f,f
  1006  0727  30FF               	movlw	-1
  1007  0728  0720               	addwf	sprintf@f,w
  1008  0729  0084               	movwf	4
  1009  072A  120A  118A  2003  120A  118A  	fcall	stringdir
  1010  072F  00AC               	movwf	sprintf@c
  1011  0730  00A3               	movwf	??_sprintf
  1012  0731  01A4               	clrf	??_sprintf+1
  1013                           
  1014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1015                           ; Switch size 1, requested type "simple"
  1016                           ; Number of cases is 1, Range of values is 0 to 0
  1017                           ; switch strategies available:
  1018                           ; Name         Instructions Cycles
  1019                           ; simple_byte            4     3 (average)
  1020                           ; direct_byte           11     8 (fixed)
  1021                           ; jumptable            260     6 (fixed)
  1022                           ;	Chosen strategy is simple_byte
  1023  0732  0824               	movf	??_sprintf+1,w
  1024  0733  3A00               	xorlw	0	; case 0
  1025  0734  1903               	skipnz
  1026  0735  2F37               	goto	l1471
  1027  0736  2FDB               	goto	l1387
  1028  0737                     l1471:
  1029                           
  1030                           ; Switch size 1, requested type "simple"
  1031                           ; Number of cases is 3, Range of values is 0 to 105
  1032                           ; switch strategies available:
  1033                           ; Name         Instructions Cycles
  1034                           ; simple_byte           10     6 (average)
  1035                           ; jumptable            260     6 (fixed)
  1036                           ;	Chosen strategy is simple_byte
  1037  0737  0823               	movf	??_sprintf,w
  1038  0738  3A00               	xorlw	0	; case 0
  1039  0739  1903               	skipnz
  1040  073A  2FED               	goto	l1389
  1041  073B  3A64               	xorlw	100	; case 100
  1042  073C  1903               	skipnz
  1043  073D  2F42               	goto	l1349
  1044  073E  3A0D               	xorlw	13	; case 105
  1045  073F  1903               	skipnz
  1046  0740  2F42               	goto	l1349
  1047  0741  2FDB               	goto	l1387
  1048  0742                     l1349:
  1049                           
  1050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1051  0742  0826               	movf	sprintf@ap,w
  1052  0743  0084               	movwf	4
  1053  0744  1383               	bcf	3,7	;select IRP bank0
  1054  0745  0800               	movf	0,w
  1055  0746  00A9               	movwf	sprintf@val
  1056  0747  0A84               	incf	4,f
  1057  0748  0800               	movf	0,w
  1058  0749  00AA               	movwf	sprintf@val+1
  1059  074A                     l1351:
  1060  074A  3002               	movlw	2
  1061  074B  00A3               	movwf	??_sprintf
  1062  074C  0823               	movf	??_sprintf,w
  1063  074D  07A6               	addwf	sprintf@ap,f
  1064  074E                     l1353:
  1065                           
  1066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1067  074E  1FAA               	btfss	sprintf@val+1,7
  1068  074F  2F51               	goto	u611
  1069  0750  2F52               	goto	u610
  1070  0751                     u611:
  1071  0751  2F5B               	goto	l1359
  1072  0752                     u610:
  1073  0752                     l1355:
  1074                           
  1075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1076  0752  3003               	movlw	3
  1077  0753  00A3               	movwf	??_sprintf
  1078  0754  0823               	movf	??_sprintf,w
  1079  0755  04A7               	iorwf	sprintf@flag,f
  1080  0756                     l1357:
  1081                           
  1082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1083  0756  09A9               	comf	sprintf@val,f
  1084  0757  09AA               	comf	sprintf@val+1,f
  1085  0758  0AA9               	incf	sprintf@val,f
  1086  0759  1903               	skipnz
  1087  075A  0AAA               	incf	sprintf@val+1,f
  1088  075B                     l1359:
  1089                           
  1090                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1091  075B  01AC               	clrf	sprintf@c
  1092  075C  0AAC               	incf	sprintf@c,f
  1093  075D                     l1365:
  1094                           
  1095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1096  075D  082C               	movf	sprintf@c,w
  1097  075E  00A3               	movwf	??_sprintf
  1098  075F  0723               	addwf	??_sprintf,w
  1099  0760  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1100  0761  0084               	movwf	4
  1101  0762  120A  118A  2003  120A  118A  	fcall	stringdir
  1102  0767  00A4               	movwf	??_sprintf+1
  1103  0768  120A  118A  2003  120A  118A  	fcall	stringdir
  1104  076D  00A5               	movwf	??_sprintf+2
  1105  076E  0825               	movf	??_sprintf+2,w
  1106  076F  022A               	subwf	sprintf@val+1,w
  1107  0770  1D03               	skipz
  1108  0771  2F74               	goto	u625
  1109  0772  0824               	movf	??_sprintf+1,w
  1110  0773  0229               	subwf	sprintf@val,w
  1111  0774                     u625:
  1112  0774  1803               	skipnc
  1113  0775  2F77               	goto	u621
  1114  0776  2F78               	goto	u620
  1115  0777                     u621:
  1116  0777  2F79               	goto	l1369
  1117  0778                     u620:
  1118  0778  2F83               	goto	l1371
  1119  0779                     l1369:
  1120  0779  3001               	movlw	1
  1121  077A  00A3               	movwf	??_sprintf
  1122  077B  0823               	movf	??_sprintf,w
  1123  077C  07AC               	addwf	sprintf@c,f
  1124  077D  3005               	movlw	5
  1125  077E  062C               	xorwf	sprintf@c,w
  1126  077F  1D03               	btfss	3,2
  1127  0780  2F82               	goto	u631
  1128  0781  2F83               	goto	u630
  1129  0782                     u631:
  1130  0782  2F5D               	goto	l1365
  1131  0783                     u630:
  1132  0783                     l1371:
  1133                           
  1134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1135  0783  0827               	movf	sprintf@flag,w
  1136  0784  3903               	andlw	3
  1137  0785  1903               	btfsc	3,2
  1138  0786  2F88               	goto	u641
  1139  0787  2F89               	goto	u640
  1140  0788                     u641:
  1141  0788  2F94               	goto	l1377
  1142  0789                     u640:
  1143  0789                     l1373:
  1144                           
  1145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1146  0789  302D               	movlw	45
  1147  078A  00A3               	movwf	??_sprintf
  1148  078B  082B               	movf	sprintf@sp,w
  1149  078C  0084               	movwf	4
  1150  078D  0823               	movf	??_sprintf,w
  1151  078E  1383               	bcf	3,7	;select IRP bank0
  1152  078F  0080               	movwf	0
  1153  0790                     l1375:
  1154  0790  3001               	movlw	1
  1155  0791  00A3               	movwf	??_sprintf
  1156  0792  0823               	movf	??_sprintf,w
  1157  0793  07AB               	addwf	sprintf@sp,f
  1158  0794                     l1377:
  1159                           
  1160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1161  0794  082C               	movf	sprintf@c,w
  1162  0795  00A3               	movwf	??_sprintf
  1163  0796  0823               	movf	??_sprintf,w
  1164  0797  00A8               	movwf	sprintf@prec
  1165                           
  1166                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1167  0798  2FD2               	goto	l1385
  1168  0799                     l1379:
  1169                           
  1170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1171  0799  300A               	movlw	10
  1172  079A  00F8               	movwf	___lwmod@divisor
  1173  079B  3000               	movlw	0
  1174  079C  00F9               	movwf	___lwmod@divisor+1
  1175  079D  0828               	movf	sprintf@prec,w
  1176  079E  00A3               	movwf	??_sprintf
  1177  079F  0723               	addwf	??_sprintf,w
  1178  07A0  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1179  07A1  0084               	movwf	4
  1180  07A2  120A  118A  2003  120A  118A  	fcall	stringdir
  1181  07A7  00F0               	movwf	___lwdiv@divisor
  1182  07A8  120A  118A  2003  120A  118A  	fcall	stringdir
  1183  07AD  00F1               	movwf	___lwdiv@divisor+1
  1184  07AE  082A               	movf	sprintf@val+1,w
  1185  07AF  00F3               	movwf	___lwdiv@dividend+1
  1186  07B0  0829               	movf	sprintf@val,w
  1187  07B1  00F2               	movwf	___lwdiv@dividend
  1188  07B2  120A  118A  25AA  120A  118A  	fcall	___lwdiv
  1189  07B7  0871               	movf	?___lwdiv+1,w
  1190  07B8  00FB               	movwf	___lwmod@dividend+1
  1191  07B9  0870               	movf	?___lwdiv,w
  1192  07BA  00FA               	movwf	___lwmod@dividend
  1193  07BB  120A  118A  2570  120A  118A  	fcall	___lwmod
  1194  07C0  0878               	movf	?___lwmod,w
  1195  07C1  3E30               	addlw	48
  1196  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1197  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1198  07C4  00A4               	movwf	??_sprintf+1
  1199  07C5  0824               	movf	??_sprintf+1,w
  1200  07C6  00AC               	movwf	sprintf@c
  1201  07C7                     l1381:
  1202                           
  1203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1204  07C7  082C               	movf	sprintf@c,w
  1205  07C8  00A3               	movwf	??_sprintf
  1206  07C9  082B               	movf	sprintf@sp,w
  1207  07CA  0084               	movwf	4
  1208  07CB  0823               	movf	??_sprintf,w
  1209  07CC  1383               	bcf	3,7	;select IRP bank0
  1210  07CD  0080               	movwf	0
  1211  07CE                     l1383:
  1212  07CE  3001               	movlw	1
  1213  07CF  00A3               	movwf	??_sprintf
  1214  07D0  0823               	movf	??_sprintf,w
  1215  07D1  07AB               	addwf	sprintf@sp,f
  1216  07D2                     l1385:
  1217                           
  1218                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1219  07D2  30FF               	movlw	255
  1220  07D3  00A3               	movwf	??_sprintf
  1221  07D4  0823               	movf	??_sprintf,w
  1222  07D5  07A8               	addwf	sprintf@prec,f
  1223  07D6  0A28               	incf	sprintf@prec,w
  1224  07D7  1D03               	btfss	3,2
  1225  07D8  2FDA               	goto	u651
  1226  07D9  2FDB               	goto	u650
  1227  07DA                     u651:
  1228  07DA  2F99               	goto	l1379
  1229  07DB                     u650:
  1230  07DB                     l1387:
  1231                           
  1232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1233  07DB  3001               	movlw	1
  1234  07DC  07A0               	addwf	sprintf@f,f
  1235  07DD  30FF               	movlw	-1
  1236  07DE  0720               	addwf	sprintf@f,w
  1237  07DF  0084               	movwf	4
  1238  07E0  120A  118A  2003  120A  118A  	fcall	stringdir
  1239  07E5  00A3               	movwf	??_sprintf
  1240  07E6  0823               	movf	??_sprintf,w
  1241  07E7  00AC               	movwf	sprintf@c
  1242  07E8  082C               	movf	sprintf@c,w
  1243  07E9  1D03               	btfss	3,2
  1244  07EA  2FEC               	goto	u661
  1245  07EB  2FED               	goto	u660
  1246  07EC                     u661:
  1247  07EC  2F12               	goto	l1337
  1248  07ED                     u660:
  1249  07ED                     l1389:
  1250                           
  1251                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1252  07ED  082B               	movf	sprintf@sp,w
  1253  07EE  0084               	movwf	4
  1254  07EF  1383               	bcf	3,7	;select IRP bank0
  1255  07F0  0180               	clrf	0
  1256  07F1                     l311:
  1257  07F1  0008               	return
  1258  07F2                     __end_of_sprintf:
  1259                           
  1260                           	psect	text2
  1261  0570                     __ptext2:	
  1262 ;; *************** function ___lwmod *****************
  1263 ;; Defined at:
  1264 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  divisor         2    8[COMMON] unsigned int 
  1267 ;;  dividend        2   10[COMMON] unsigned int 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  counter         1   13[COMMON] unsigned char 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  2    8[COMMON] unsigned int 
  1272 ;; Registers used:
  1273 ;;		wreg, status,2, status,0
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1279 ;;      Params:         4       0       0       0       0
  1280 ;;      Locals:         1       0       0       0       0
  1281 ;;      Temps:          1       0       0       0       0
  1282 ;;      Totals:         6       0       0       0       0
  1283 ;;Total ram usage:        6 bytes
  1284 ;; Hardware stack levels used:    1
  1285 ;; This function calls:
  1286 ;;		Nothing
  1287 ;; This function is called by:
  1288 ;;		_sprintf
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           
  1293                           ;psect for function ___lwmod
  1294  0570                     ___lwmod:
  1295  0570                     l1265:	
  1296                           ;incstack = 0
  1297                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1298                           
  1299  0570  0878               	movf	___lwmod@divisor,w
  1300  0571  0479               	iorwf	___lwmod@divisor+1,w
  1301  0572  1903               	btfsc	3,2
  1302  0573  2D75               	goto	u521
  1303  0574  2D76               	goto	u520
  1304  0575                     u521:
  1305  0575  2DA5               	goto	l1283
  1306  0576                     u520:
  1307  0576                     l1267:
  1308  0576  01FD               	clrf	___lwmod@counter
  1309  0577  0AFD               	incf	___lwmod@counter,f
  1310  0578  2D84               	goto	l1273
  1311  0579                     l1269:
  1312  0579  3001               	movlw	1
  1313  057A                     u535:
  1314  057A  1003               	clrc
  1315  057B  0DF8               	rlf	___lwmod@divisor,f
  1316  057C  0DF9               	rlf	___lwmod@divisor+1,f
  1317  057D  3EFF               	addlw	-1
  1318  057E  1D03               	skipz
  1319  057F  2D7A               	goto	u535
  1320  0580                     l1271:
  1321  0580  3001               	movlw	1
  1322  0581  00FC               	movwf	??___lwmod
  1323  0582  087C               	movf	??___lwmod,w
  1324  0583  07FD               	addwf	___lwmod@counter,f
  1325  0584                     l1273:
  1326  0584  1FF9               	btfss	___lwmod@divisor+1,7
  1327  0585  2D87               	goto	u541
  1328  0586  2D88               	goto	u540
  1329  0587                     u541:
  1330  0587  2D79               	goto	l1269
  1331  0588                     u540:
  1332  0588                     l1275:
  1333  0588  0879               	movf	___lwmod@divisor+1,w
  1334  0589  027B               	subwf	___lwmod@dividend+1,w
  1335  058A  1D03               	skipz
  1336  058B  2D8E               	goto	u555
  1337  058C  0878               	movf	___lwmod@divisor,w
  1338  058D  027A               	subwf	___lwmod@dividend,w
  1339  058E                     u555:
  1340  058E  1C03               	skipc
  1341  058F  2D91               	goto	u551
  1342  0590  2D92               	goto	u550
  1343  0591                     u551:
  1344  0591  2D98               	goto	l1279
  1345  0592                     u550:
  1346  0592                     l1277:
  1347  0592  0878               	movf	___lwmod@divisor,w
  1348  0593  02FA               	subwf	___lwmod@dividend,f
  1349  0594  0879               	movf	___lwmod@divisor+1,w
  1350  0595  1C03               	skipc
  1351  0596  03FB               	decf	___lwmod@dividend+1,f
  1352  0597  02FB               	subwf	___lwmod@dividend+1,f
  1353  0598                     l1279:
  1354  0598  3001               	movlw	1
  1355  0599                     u565:
  1356  0599  1003               	clrc
  1357  059A  0CF9               	rrf	___lwmod@divisor+1,f
  1358  059B  0CF8               	rrf	___lwmod@divisor,f
  1359  059C  3EFF               	addlw	-1
  1360  059D  1D03               	skipz
  1361  059E  2D99               	goto	u565
  1362  059F                     l1281:
  1363  059F  3001               	movlw	1
  1364  05A0  02FD               	subwf	___lwmod@counter,f
  1365  05A1  1D03               	btfss	3,2
  1366  05A2  2DA4               	goto	u571
  1367  05A3  2DA5               	goto	u570
  1368  05A4                     u571:
  1369  05A4  2D88               	goto	l1275
  1370  05A5                     u570:
  1371  05A5                     l1283:
  1372  05A5  087B               	movf	___lwmod@dividend+1,w
  1373  05A6  00F9               	movwf	?___lwmod+1
  1374  05A7  087A               	movf	___lwmod@dividend,w
  1375  05A8  00F8               	movwf	?___lwmod
  1376  05A9                     l597:
  1377  05A9  0008               	return
  1378  05AA                     __end_of___lwmod:
  1379                           
  1380                           	psect	text3
  1381  05AA                     __ptext3:	
  1382 ;; *************** function ___lwdiv *****************
  1383 ;; Defined at:
  1384 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;  divisor         2    0[COMMON] unsigned int 
  1387 ;;  dividend        2    2[COMMON] unsigned int 
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  quotient        2    5[COMMON] unsigned int 
  1390 ;;  counter         1    7[COMMON] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  2    0[COMMON] unsigned int 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2, status,0
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1400 ;;      Params:         4       0       0       0       0
  1401 ;;      Locals:         3       0       0       0       0
  1402 ;;      Temps:          1       0       0       0       0
  1403 ;;      Totals:         8       0       0       0       0
  1404 ;;Total ram usage:        8 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; This function calls:
  1407 ;;		Nothing
  1408 ;; This function is called by:
  1409 ;;		_sprintf
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           
  1414                           ;psect for function ___lwdiv
  1415  05AA                     ___lwdiv:
  1416  05AA                     l1239:	
  1417                           ;incstack = 0
  1418                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1419                           
  1420  05AA  01F5               	clrf	___lwdiv@quotient
  1421  05AB  01F6               	clrf	___lwdiv@quotient+1
  1422  05AC                     l1241:
  1423  05AC  0870               	movf	___lwdiv@divisor,w
  1424  05AD  0471               	iorwf	___lwdiv@divisor+1,w
  1425  05AE  1903               	btfsc	3,2
  1426  05AF  2DB1               	goto	u451
  1427  05B0  2DB2               	goto	u450
  1428  05B1                     u451:
  1429  05B1  2DE9               	goto	l1261
  1430  05B2                     u450:
  1431  05B2                     l1243:
  1432  05B2  01F7               	clrf	___lwdiv@counter
  1433  05B3  0AF7               	incf	___lwdiv@counter,f
  1434  05B4  2DC0               	goto	l1249
  1435  05B5                     l1245:
  1436  05B5  3001               	movlw	1
  1437  05B6                     u465:
  1438  05B6  1003               	clrc
  1439  05B7  0DF0               	rlf	___lwdiv@divisor,f
  1440  05B8  0DF1               	rlf	___lwdiv@divisor+1,f
  1441  05B9  3EFF               	addlw	-1
  1442  05BA  1D03               	skipz
  1443  05BB  2DB6               	goto	u465
  1444  05BC                     l1247:
  1445  05BC  3001               	movlw	1
  1446  05BD  00F4               	movwf	??___lwdiv
  1447  05BE  0874               	movf	??___lwdiv,w
  1448  05BF  07F7               	addwf	___lwdiv@counter,f
  1449  05C0                     l1249:
  1450  05C0  1FF1               	btfss	___lwdiv@divisor+1,7
  1451  05C1  2DC3               	goto	u471
  1452  05C2  2DC4               	goto	u470
  1453  05C3                     u471:
  1454  05C3  2DB5               	goto	l1245
  1455  05C4                     u470:
  1456  05C4                     l1251:
  1457  05C4  3001               	movlw	1
  1458  05C5                     u485:
  1459  05C5  1003               	clrc
  1460  05C6  0DF5               	rlf	___lwdiv@quotient,f
  1461  05C7  0DF6               	rlf	___lwdiv@quotient+1,f
  1462  05C8  3EFF               	addlw	-1
  1463  05C9  1D03               	skipz
  1464  05CA  2DC5               	goto	u485
  1465  05CB  0871               	movf	___lwdiv@divisor+1,w
  1466  05CC  0273               	subwf	___lwdiv@dividend+1,w
  1467  05CD  1D03               	skipz
  1468  05CE  2DD1               	goto	u495
  1469  05CF  0870               	movf	___lwdiv@divisor,w
  1470  05D0  0272               	subwf	___lwdiv@dividend,w
  1471  05D1                     u495:
  1472  05D1  1C03               	skipc
  1473  05D2  2DD4               	goto	u491
  1474  05D3  2DD5               	goto	u490
  1475  05D4                     u491:
  1476  05D4  2DDC               	goto	l1257
  1477  05D5                     u490:
  1478  05D5                     l1253:
  1479  05D5  0870               	movf	___lwdiv@divisor,w
  1480  05D6  02F2               	subwf	___lwdiv@dividend,f
  1481  05D7  0871               	movf	___lwdiv@divisor+1,w
  1482  05D8  1C03               	skipc
  1483  05D9  03F3               	decf	___lwdiv@dividend+1,f
  1484  05DA  02F3               	subwf	___lwdiv@dividend+1,f
  1485  05DB                     l1255:
  1486  05DB  1475               	bsf	___lwdiv@quotient,0
  1487  05DC                     l1257:
  1488  05DC  3001               	movlw	1
  1489  05DD                     u505:
  1490  05DD  1003               	clrc
  1491  05DE  0CF1               	rrf	___lwdiv@divisor+1,f
  1492  05DF  0CF0               	rrf	___lwdiv@divisor,f
  1493  05E0  3EFF               	addlw	-1
  1494  05E1  1D03               	skipz
  1495  05E2  2DDD               	goto	u505
  1496  05E3                     l1259:
  1497  05E3  3001               	movlw	1
  1498  05E4  02F7               	subwf	___lwdiv@counter,f
  1499  05E5  1D03               	btfss	3,2
  1500  05E6  2DE8               	goto	u511
  1501  05E7  2DE9               	goto	u510
  1502  05E8                     u511:
  1503  05E8  2DC4               	goto	l1251
  1504  05E9                     u510:
  1505  05E9                     l1261:
  1506  05E9  0876               	movf	___lwdiv@quotient+1,w
  1507  05EA  00F1               	movwf	?___lwdiv+1
  1508  05EB  0875               	movf	___lwdiv@quotient,w
  1509  05EC  00F0               	movwf	?___lwdiv
  1510  05ED                     l587:
  1511  05ED  0008               	return
  1512  05EE                     __end_of___lwdiv:
  1513                           
  1514                           	psect	text4
  1515  0508                     __ptext4:	
  1516 ;; *************** function _setup *****************
  1517 ;; Defined at:
  1518 ;;		line 76 in file "LM75_SensorTemo.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1532 ;;      Params:         0       0       0       0       0
  1533 ;;      Locals:         0       0       0       0       0
  1534 ;;      Temps:          0       0       0       0       0
  1535 ;;      Totals:         0       0       0       0       0
  1536 ;;Total ram usage:        0 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    1
  1539 ;; This function calls:
  1540 ;;		_InitOSC
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           
  1547                           ;psect for function _setup
  1548  0508                     _setup:
  1549  0508                     l1287:	
  1550                           ;incstack = 0
  1551                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1552                           
  1553                           
  1554                           ;LM75_SensorTemo.c: 79:     ANSEL = 0;
  1555  0508  1683               	bsf	3,5	;RP0=1, select bank3
  1556  0509  1703               	bsf	3,6	;RP1=1, select bank3
  1557  050A  0188               	clrf	8	;volatile
  1558                           
  1559                           ;LM75_SensorTemo.c: 80:     TRISA = 0;
  1560  050B  1683               	bsf	3,5	;RP0=1, select bank1
  1561  050C  1303               	bcf	3,6	;RP1=0, select bank1
  1562  050D  0185               	clrf	5	;volatile
  1563                           
  1564                           ;LM75_SensorTemo.c: 81:     PORTA = 0;
  1565  050E  1283               	bcf	3,5	;RP0=0, select bank0
  1566  050F  1303               	bcf	3,6	;RP1=0, select bank0
  1567  0510  0185               	clrf	5	;volatile
  1568                           
  1569                           ;LM75_SensorTemo.c: 82:     ANSELH = 0;
  1570  0511  1683               	bsf	3,5	;RP0=1, select bank3
  1571  0512  1703               	bsf	3,6	;RP1=1, select bank3
  1572  0513  0189               	clrf	9	;volatile
  1573                           
  1574                           ;LM75_SensorTemo.c: 83:     TRISB = 0;
  1575  0514  1683               	bsf	3,5	;RP0=1, select bank1
  1576  0515  1303               	bcf	3,6	;RP1=0, select bank1
  1577  0516  0186               	clrf	6	;volatile
  1578                           
  1579                           ;LM75_SensorTemo.c: 84:     PORTB = 0;
  1580  0517  1283               	bcf	3,5	;RP0=0, select bank0
  1581  0518  1303               	bcf	3,6	;RP1=0, select bank0
  1582  0519  0186               	clrf	6	;volatile
  1583                           
  1584                           ;LM75_SensorTemo.c: 85:     TRISC = 0;
  1585  051A  1683               	bsf	3,5	;RP0=1, select bank1
  1586  051B  1303               	bcf	3,6	;RP1=0, select bank1
  1587  051C  0187               	clrf	7	;volatile
  1588                           
  1589                           ;LM75_SensorTemo.c: 86:     PORTC = 0;
  1590  051D  1283               	bcf	3,5	;RP0=0, select bank0
  1591  051E  1303               	bcf	3,6	;RP1=0, select bank0
  1592  051F  0187               	clrf	7	;volatile
  1593  0520                     l1289:
  1594                           
  1595                           ;LM75_SensorTemo.c: 87:     TRISCbits.TRISC6 = 0;
  1596  0520  1683               	bsf	3,5	;RP0=1, select bank1
  1597  0521  1303               	bcf	3,6	;RP1=0, select bank1
  1598  0522  1307               	bcf	7,6	;volatile
  1599                           
  1600                           ;LM75_SensorTemo.c: 89:     TRISD = 0;
  1601  0523  0188               	clrf	8	;volatile
  1602                           
  1603                           ;LM75_SensorTemo.c: 90:     PORTD = 0;
  1604  0524  1283               	bcf	3,5	;RP0=0, select bank0
  1605  0525  1303               	bcf	3,6	;RP1=0, select bank0
  1606  0526  0188               	clrf	8	;volatile
  1607                           
  1608                           ;LM75_SensorTemo.c: 91:     TRISE = 0;
  1609  0527  1683               	bsf	3,5	;RP0=1, select bank1
  1610  0528  1303               	bcf	3,6	;RP1=0, select bank1
  1611  0529  0189               	clrf	9	;volatile
  1612                           
  1613                           ;LM75_SensorTemo.c: 92:     PORTE = 0;
  1614  052A  1283               	bcf	3,5	;RP0=0, select bank0
  1615  052B  1303               	bcf	3,6	;RP1=0, select bank0
  1616  052C  0189               	clrf	9	;volatile
  1617  052D                     l1291:
  1618                           
  1619                           ;LM75_SensorTemo.c: 93:     TRISEbits.TRISE0 = 0;
  1620  052D  1683               	bsf	3,5	;RP0=1, select bank1
  1621  052E  1303               	bcf	3,6	;RP1=0, select bank1
  1622  052F  1009               	bcf	9,0	;volatile
  1623  0530                     l1293:
  1624                           
  1625                           ;LM75_SensorTemo.c: 94:     TRISEbits.TRISE3 = 0;
  1626  0530  1189               	bcf	9,3	;volatile
  1627  0531                     l1295:
  1628                           
  1629                           ;LM75_SensorTemo.c: 95:     InitOSC(7);
  1630  0531  3007               	movlw	7
  1631  0532  120A  118A  2648  120A  118A  	fcall	_InitOSC
  1632  0537                     l85:
  1633  0537  0008               	return
  1634  0538                     __end_of_setup:
  1635                           
  1636                           	psect	text5
  1637  0648                     __ptext5:	
  1638 ;; *************** function _InitOSC *****************
  1639 ;; Defined at:
  1640 ;;		line 9 in file "OSC.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  frec            1    wreg     unsigned char 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  frec            1    2[COMMON] unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/0
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1654 ;;      Params:         0       0       0       0       0
  1655 ;;      Locals:         1       0       0       0       0
  1656 ;;      Temps:          2       0       0       0       0
  1657 ;;      Totals:         3       0       0       0       0
  1658 ;;Total ram usage:        3 bytes
  1659 ;; Hardware stack levels used:    1
  1660 ;; This function calls:
  1661 ;;		Nothing
  1662 ;; This function is called by:
  1663 ;;		_setup
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           
  1668                           ;psect for function _InitOSC
  1669  0648                     _InitOSC:
  1670                           
  1671                           ;incstack = 0
  1672                           ; Regs used in _InitOSC: [wreg-fsr0h+status,2+status,0]
  1673                           ;InitOSC@frec stored from wreg
  1674  0648  00F2               	movwf	InitOSC@frec
  1675  0649                     l1159:
  1676                           
  1677                           ;OSC.c: 10:     switch(frec){
  1678  0649  2E80               	goto	l1163
  1679  064A                     l191:	
  1680                           ;OSC.c: 11:         case 0:
  1681                           
  1682                           
  1683                           ;OSC.c: 12:             OSCCONbits.IRCF0 = 0;
  1684  064A  1683               	bsf	3,5	;RP0=1, select bank1
  1685  064B  1303               	bcf	3,6	;RP1=0, select bank1
  1686  064C  120F               	bcf	15,4	;volatile
  1687                           
  1688                           ;OSC.c: 13:             OSCCONbits.IRCF1 = 0;
  1689  064D  128F               	bcf	15,5	;volatile
  1690                           
  1691                           ;OSC.c: 14:             OSCCONbits.IRCF2 = 0;
  1692  064E  130F               	bcf	15,6	;volatile
  1693                           
  1694                           ;OSC.c: 15:             break;
  1695  064F  2EA2               	goto	l192
  1696  0650                     l193:	
  1697                           ;OSC.c: 16:         case 1:
  1698                           
  1699                           
  1700                           ;OSC.c: 17:             OSCCONbits.IRCF0 = 1;
  1701  0650  1683               	bsf	3,5	;RP0=1, select bank1
  1702  0651  1303               	bcf	3,6	;RP1=0, select bank1
  1703  0652  160F               	bsf	15,4	;volatile
  1704                           
  1705                           ;OSC.c: 18:             OSCCONbits.IRCF1 = 0;
  1706  0653  128F               	bcf	15,5	;volatile
  1707                           
  1708                           ;OSC.c: 19:             OSCCONbits.IRCF2 = 0;
  1709  0654  130F               	bcf	15,6	;volatile
  1710                           
  1711                           ;OSC.c: 20:             break;
  1712  0655  2EA2               	goto	l192
  1713  0656                     l194:	
  1714                           ;OSC.c: 21:         case 2:
  1715                           
  1716                           
  1717                           ;OSC.c: 22:             OSCCONbits.IRCF0 = 0;
  1718  0656  1683               	bsf	3,5	;RP0=1, select bank1
  1719  0657  1303               	bcf	3,6	;RP1=0, select bank1
  1720  0658  120F               	bcf	15,4	;volatile
  1721                           
  1722                           ;OSC.c: 23:             OSCCONbits.IRCF1 = 1;
  1723  0659  168F               	bsf	15,5	;volatile
  1724                           
  1725                           ;OSC.c: 24:             OSCCONbits.IRCF2 = 0;
  1726  065A  130F               	bcf	15,6	;volatile
  1727                           
  1728                           ;OSC.c: 25:             break;
  1729  065B  2EA2               	goto	l192
  1730  065C                     l195:	
  1731                           ;OSC.c: 26:         case 3:
  1732                           
  1733                           
  1734                           ;OSC.c: 27:             OSCCONbits.IRCF0 = 1;
  1735  065C  1683               	bsf	3,5	;RP0=1, select bank1
  1736  065D  1303               	bcf	3,6	;RP1=0, select bank1
  1737  065E  160F               	bsf	15,4	;volatile
  1738                           
  1739                           ;OSC.c: 28:             OSCCONbits.IRCF1 = 1;
  1740  065F  168F               	bsf	15,5	;volatile
  1741                           
  1742                           ;OSC.c: 29:             OSCCONbits.IRCF2 = 0;
  1743  0660  130F               	bcf	15,6	;volatile
  1744                           
  1745                           ;OSC.c: 30:             break;
  1746  0661  2EA2               	goto	l192
  1747  0662                     l196:	
  1748                           ;OSC.c: 31:         case 4:
  1749                           
  1750                           
  1751                           ;OSC.c: 32:             OSCCONbits.IRCF0 = 0;
  1752  0662  1683               	bsf	3,5	;RP0=1, select bank1
  1753  0663  1303               	bcf	3,6	;RP1=0, select bank1
  1754  0664  120F               	bcf	15,4	;volatile
  1755                           
  1756                           ;OSC.c: 33:             OSCCONbits.IRCF1 = 0;
  1757  0665  128F               	bcf	15,5	;volatile
  1758                           
  1759                           ;OSC.c: 34:             OSCCONbits.IRCF2 = 1;
  1760  0666  170F               	bsf	15,6	;volatile
  1761                           
  1762                           ;OSC.c: 35:             break;
  1763  0667  2EA2               	goto	l192
  1764  0668                     l197:	
  1765                           ;OSC.c: 36:         case 5:
  1766                           
  1767                           
  1768                           ;OSC.c: 37:             OSCCONbits.IRCF0 = 1;
  1769  0668  1683               	bsf	3,5	;RP0=1, select bank1
  1770  0669  1303               	bcf	3,6	;RP1=0, select bank1
  1771  066A  160F               	bsf	15,4	;volatile
  1772                           
  1773                           ;OSC.c: 38:             OSCCONbits.IRCF1 = 0;
  1774  066B  128F               	bcf	15,5	;volatile
  1775                           
  1776                           ;OSC.c: 39:             OSCCONbits.IRCF2 = 1;
  1777  066C  170F               	bsf	15,6	;volatile
  1778                           
  1779                           ;OSC.c: 40:             break;
  1780  066D  2EA2               	goto	l192
  1781  066E                     l198:	
  1782                           ;OSC.c: 41:         case 6:
  1783                           
  1784                           
  1785                           ;OSC.c: 42:             OSCCONbits.IRCF0 = 0;
  1786  066E  1683               	bsf	3,5	;RP0=1, select bank1
  1787  066F  1303               	bcf	3,6	;RP1=0, select bank1
  1788  0670  120F               	bcf	15,4	;volatile
  1789                           
  1790                           ;OSC.c: 43:             OSCCONbits.IRCF1 = 1;
  1791  0671  168F               	bsf	15,5	;volatile
  1792                           
  1793                           ;OSC.c: 44:             OSCCONbits.IRCF2 = 1;
  1794  0672  170F               	bsf	15,6	;volatile
  1795                           
  1796                           ;OSC.c: 45:             break;
  1797  0673  2EA2               	goto	l192
  1798  0674                     l199:	
  1799                           ;OSC.c: 46:         case 7:
  1800                           
  1801                           
  1802                           ;OSC.c: 47:             OSCCONbits.IRCF0 = 1;
  1803  0674  1683               	bsf	3,5	;RP0=1, select bank1
  1804  0675  1303               	bcf	3,6	;RP1=0, select bank1
  1805  0676  160F               	bsf	15,4	;volatile
  1806                           
  1807                           ;OSC.c: 48:             OSCCONbits.IRCF1 = 1;
  1808  0677  168F               	bsf	15,5	;volatile
  1809                           
  1810                           ;OSC.c: 49:             OSCCONbits.IRCF2 = 1;
  1811  0678  170F               	bsf	15,6	;volatile
  1812                           
  1813                           ;OSC.c: 50:             break;
  1814  0679  2EA2               	goto	l192
  1815  067A                     l200:	
  1816                           ;OSC.c: 51:         default:
  1817                           
  1818                           
  1819                           ;OSC.c: 52:             OSCCONbits.IRCF0 = 0;
  1820  067A  1683               	bsf	3,5	;RP0=1, select bank1
  1821  067B  1303               	bcf	3,6	;RP1=0, select bank1
  1822  067C  120F               	bcf	15,4	;volatile
  1823                           
  1824                           ;OSC.c: 53:             OSCCONbits.IRCF1 = 1;
  1825  067D  168F               	bsf	15,5	;volatile
  1826                           
  1827                           ;OSC.c: 54:             OSCCONbits.IRCF2 = 1;
  1828  067E  170F               	bsf	15,6	;volatile
  1829                           
  1830                           ;OSC.c: 55:             break;
  1831  067F  2EA2               	goto	l192
  1832  0680                     l1163:
  1833  0680  0872               	movf	InitOSC@frec,w
  1834  0681  00F0               	movwf	??_InitOSC
  1835  0682  01F1               	clrf	??_InitOSC+1
  1836                           
  1837                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1838                           ; Switch size 1, requested type "simple"
  1839                           ; Number of cases is 1, Range of values is 0 to 0
  1840                           ; switch strategies available:
  1841                           ; Name         Instructions Cycles
  1842                           ; simple_byte            4     3 (average)
  1843                           ; direct_byte           11     8 (fixed)
  1844                           ; jumptable            260     6 (fixed)
  1845                           ;	Chosen strategy is simple_byte
  1846  0683  0871               	movf	??_InitOSC+1,w
  1847  0684  3A00               	xorlw	0	; case 0
  1848  0685  1903               	skipnz
  1849  0686  2E88               	goto	l1473
  1850  0687  2E7A               	goto	l200
  1851  0688                     l1473:
  1852                           
  1853                           ; Switch size 1, requested type "simple"
  1854                           ; Number of cases is 8, Range of values is 0 to 7
  1855                           ; switch strategies available:
  1856                           ; Name         Instructions Cycles
  1857                           ; simple_byte           25    13 (average)
  1858                           ; direct_byte           32     8 (fixed)
  1859                           ; jumptable            260     6 (fixed)
  1860                           ;	Chosen strategy is simple_byte
  1861  0688  0870               	movf	??_InitOSC,w
  1862  0689  3A00               	xorlw	0	; case 0
  1863  068A  1903               	skipnz
  1864  068B  2E4A               	goto	l191
  1865  068C  3A01               	xorlw	1	; case 1
  1866  068D  1903               	skipnz
  1867  068E  2E50               	goto	l193
  1868  068F  3A03               	xorlw	3	; case 2
  1869  0690  1903               	skipnz
  1870  0691  2E56               	goto	l194
  1871  0692  3A01               	xorlw	1	; case 3
  1872  0693  1903               	skipnz
  1873  0694  2E5C               	goto	l195
  1874  0695  3A07               	xorlw	7	; case 4
  1875  0696  1903               	skipnz
  1876  0697  2E62               	goto	l196
  1877  0698  3A01               	xorlw	1	; case 5
  1878  0699  1903               	skipnz
  1879  069A  2E68               	goto	l197
  1880  069B  3A03               	xorlw	3	; case 6
  1881  069C  1903               	skipnz
  1882  069D  2E6E               	goto	l198
  1883  069E  3A01               	xorlw	1	; case 7
  1884  069F  1903               	skipnz
  1885  06A0  2E74               	goto	l199
  1886  06A1  2E7A               	goto	l200
  1887  06A2                     l192:
  1888                           
  1889                           ;OSC.c: 58:     OSCCONbits.SCS = 1;
  1890  06A2  140F               	bsf	15,0	;volatile
  1891  06A3                     l201:
  1892  06A3  0008               	return
  1893  06A4                     __end_of_InitOSC:
  1894                           
  1895                           	psect	text6
  1896  0476                     __ptext6:	
  1897 ;; *************** function _USART_config *****************
  1898 ;; Defined at:
  1899 ;;		line 99 in file "LM75_SensorTemo.c"
  1900 ;; Parameters:    Size  Location     Type
  1901 ;;		None
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;		None
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      void 
  1906 ;; Registers used:
  1907 ;;		wreg, status,2, status,0, pclath, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1913 ;;      Params:         0       0       0       0       0
  1914 ;;      Locals:         0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0
  1916 ;;      Totals:         0       0       0       0       0
  1917 ;;Total ram usage:        0 bytes
  1918 ;; Hardware stack levels used:    1
  1919 ;; Hardware stack levels required when called:    1
  1920 ;; This function calls:
  1921 ;;		_USART_lib_config
  1922 ;; This function is called by:
  1923 ;;		_main
  1924 ;; This function uses a non-reentrant model
  1925 ;;
  1926                           
  1927                           
  1928                           ;psect for function _USART_config
  1929  0476                     _USART_config:
  1930  0476                     l1309:	
  1931                           ;incstack = 0
  1932                           ; Regs used in _USART_config: [wreg+status,2+status,0+pclath+cstack]
  1933                           
  1934                           
  1935                           ;LM75_SensorTemo.c: 102:     USART_lib_config();
  1936  0476  120A  118A  24BC  120A  118A  	fcall	_USART_lib_config
  1937  047B                     l88:
  1938  047B  0008               	return
  1939  047C                     __end_of_USART_config:
  1940                           
  1941                           	psect	text7
  1942  04BC                     __ptext7:	
  1943 ;; *************** function _USART_lib_config *****************
  1944 ;; Defined at:
  1945 ;;		line 11 in file "USART.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		wreg
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1959 ;;      Params:         0       0       0       0       0
  1960 ;;      Locals:         0       0       0       0       0
  1961 ;;      Temps:          0       0       0       0       0
  1962 ;;      Totals:         0       0       0       0       0
  1963 ;;Total ram usage:        0 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_USART_config
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           
  1973                           ;psect for function _USART_lib_config
  1974  04BC                     _USART_lib_config:
  1975  04BC                     l1169:	
  1976                           ;incstack = 0
  1977                           ; Regs used in _USART_lib_config: [wreg]
  1978                           
  1979                           
  1980                           ;USART.c: 13:     SPBRG = 52;
  1981  04BC  3034               	movlw	52
  1982  04BD  1683               	bsf	3,5	;RP0=1, select bank1
  1983  04BE  1303               	bcf	3,6	;RP1=0, select bank1
  1984  04BF  0099               	movwf	25	;volatile
  1985  04C0                     l1171:
  1986                           
  1987                           ;USART.c: 15:     TXSTAbits.CSRC = 0;
  1988  04C0  1398               	bcf	24,7	;volatile
  1989  04C1                     l1173:
  1990                           
  1991                           ;USART.c: 16:     TXSTAbits.TX9 = 0;
  1992  04C1  1318               	bcf	24,6	;volatile
  1993  04C2                     l1175:
  1994                           
  1995                           ;USART.c: 17:     TXSTAbits.TXEN = 1;
  1996  04C2  1698               	bsf	24,5	;volatile
  1997  04C3                     l1177:
  1998                           
  1999                           ;USART.c: 18:     TXSTAbits.SYNC = 0;
  2000  04C3  1218               	bcf	24,4	;volatile
  2001  04C4                     l1179:
  2002                           
  2003                           ;USART.c: 19:     TXSTAbits.SENDB= 0;
  2004  04C4  1198               	bcf	24,3	;volatile
  2005  04C5                     l1181:
  2006                           
  2007                           ;USART.c: 20:     TXSTAbits.BRGH = 1;
  2008  04C5  1518               	bsf	24,2	;volatile
  2009  04C6                     l1183:
  2010                           
  2011                           ;USART.c: 21:     TXSTAbits.TRMT = 0;
  2012  04C6  1098               	bcf	24,1	;volatile
  2013  04C7                     l1185:
  2014                           
  2015                           ;USART.c: 22:     TXSTAbits.TX9D = 0;
  2016  04C7  1018               	bcf	24,0	;volatile
  2017  04C8                     l1187:
  2018                           
  2019                           ;USART.c: 24:     RCSTAbits.SPEN = 1;
  2020  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2021  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  2022  04CA  1798               	bsf	24,7	;volatile
  2023  04CB                     l1189:
  2024                           
  2025                           ;USART.c: 25:     RCSTAbits.RX9 = 0;
  2026  04CB  1318               	bcf	24,6	;volatile
  2027  04CC                     l1191:
  2028                           
  2029                           ;USART.c: 26:     RCSTAbits.SREN = 0;
  2030  04CC  1298               	bcf	24,5	;volatile
  2031  04CD                     l1193:
  2032                           
  2033                           ;USART.c: 27:     RCSTAbits.CREN = 1;
  2034  04CD  1618               	bsf	24,4	;volatile
  2035  04CE                     l1195:
  2036                           
  2037                           ;USART.c: 28:     RCSTAbits.ADDEN= 0;
  2038  04CE  1198               	bcf	24,3	;volatile
  2039  04CF                     l1197:
  2040                           
  2041                           ;USART.c: 29:     RCSTAbits.FERR = 0;
  2042  04CF  1118               	bcf	24,2	;volatile
  2043  04D0                     l1199:
  2044                           
  2045                           ;USART.c: 30:     RCSTAbits.OERR = 0;
  2046  04D0  1098               	bcf	24,1	;volatile
  2047  04D1                     l1201:
  2048                           
  2049                           ;USART.c: 31:     RCSTAbits.RX9D = 0;
  2050  04D1  1018               	bcf	24,0	;volatile
  2051  04D2                     l1203:
  2052                           
  2053                           ;USART.c: 33:     PIR1bits.RCIF = 0;
  2054  04D2  128C               	bcf	12,5	;volatile
  2055  04D3                     l1205:
  2056                           
  2057                           ;USART.c: 34:     PIE1bits.RCIE = 1;
  2058  04D3  1683               	bsf	3,5	;RP0=1, select bank1
  2059  04D4  1303               	bcf	3,6	;RP1=0, select bank1
  2060  04D5  168C               	bsf	12,5	;volatile
  2061  04D6                     l1207:
  2062                           
  2063                           ;USART.c: 35:     PIR1bits.TXIF = 0;
  2064  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  2065  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  2066  04D8  120C               	bcf	12,4	;volatile
  2067  04D9                     l182:
  2068  04D9  0008               	return
  2069  04DA                     __end_of_USART_lib_config:
  2070                           
  2071                           	psect	text8
  2072  04A5                     __ptext8:	
  2073 ;; *************** function _USART_SendString *****************
  2074 ;; Defined at:
  2075 ;;		line 113 in file "LM75_SensorTemo.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  str             1    wreg     PTR const unsigned char 
  2078 ;;		 -> main@buffer(20), 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  str             1    2[COMMON] PTR const unsigned char 
  2081 ;;		 -> main@buffer(20), 
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 0/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2091 ;;      Params:         0       0       0       0       0
  2092 ;;      Locals:         1       0       0       0       0
  2093 ;;      Temps:          1       0       0       0       0
  2094 ;;      Totals:         2       0       0       0       0
  2095 ;;Total ram usage:        2 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:    1
  2098 ;; This function calls:
  2099 ;;		_escribir_char
  2100 ;; This function is called by:
  2101 ;;		_main
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           
  2106                           ;psect for function _USART_SendString
  2107  04A5                     _USART_SendString:
  2108                           
  2109                           ;incstack = 0
  2110                           ; Regs used in _USART_SendString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2111                           ;USART_SendString@str stored from wreg
  2112  04A5  00F2               	movwf	USART_SendString@str
  2113  04A6                     l1397:
  2114                           
  2115                           ;LM75_SensorTemo.c: 113: void USART_SendString(const char *str);LM75_SensorTemo.c: 114: 
      +                          {;LM75_SensorTemo.c: 116:    while(*str!='\0')
  2116  04A6  2CB3               	goto	l1403
  2117  04A7                     l1399:
  2118                           
  2119                           ;LM75_SensorTemo.c: 117:    {;LM75_SensorTemo.c: 119:         escribir_char(*str);
  2120  04A7  0872               	movf	USART_SendString@str,w
  2121  04A8  0084               	movwf	4
  2122  04A9  0800               	movf	0,w
  2123  04AA  120A  118A  248E  120A  118A  	fcall	_escribir_char
  2124  04AF                     l1401:
  2125                           
  2126                           ;LM75_SensorTemo.c: 120:         str++;
  2127  04AF  3001               	movlw	1
  2128  04B0  00F1               	movwf	??_USART_SendString
  2129  04B1  0871               	movf	??_USART_SendString,w
  2130  04B2  07F2               	addwf	USART_SendString@str,f
  2131  04B3                     l1403:
  2132                           
  2133                           ;LM75_SensorTemo.c: 116:    while(*str!='\0')
  2134  04B3  0872               	movf	USART_SendString@str,w
  2135  04B4  0084               	movwf	4
  2136  04B5  1383               	bcf	3,7	;select IRP bank0
  2137  04B6  0800               	movf	0,w
  2138  04B7  1D03               	btfss	3,2
  2139  04B8  2CBA               	goto	u671
  2140  04B9  2CBB               	goto	u670
  2141  04BA                     u671:
  2142  04BA  2CA7               	goto	l1399
  2143  04BB                     u670:
  2144  04BB                     l100:
  2145  04BB  0008               	return
  2146  04BC                     __end_of_USART_SendString:
  2147                           
  2148                           	psect	text9
  2149  048E                     __ptext9:	
  2150 ;; *************** function _escribir_char *****************
  2151 ;; Defined at:
  2152 ;;		line 105 in file "LM75_SensorTemo.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  valor           1    wreg     unsigned char 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  valor           1    0[COMMON] unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2166 ;;      Params:         0       0       0       0       0
  2167 ;;      Locals:         1       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0
  2169 ;;      Totals:         1       0       0       0       0
  2170 ;;Total ram usage:        1 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; This function calls:
  2173 ;;		Nothing
  2174 ;; This function is called by:
  2175 ;;		_USART_SendString
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           
  2180                           ;psect for function _escribir_char
  2181  048E                     _escribir_char:
  2182                           
  2183                           ;incstack = 0
  2184                           ; Regs used in _escribir_char: [wreg]
  2185                           ;escribir_char@valor stored from wreg
  2186  048E  00F0               	movwf	escribir_char@valor
  2187  048F                     l1209:
  2188                           
  2189                           ;LM75_SensorTemo.c: 105: void escribir_char (uint8_t valor);LM75_SensorTemo.c: 106: {;LM
      +                          75_SensorTemo.c: 108:     TXREG = valor;
  2190  048F  0870               	movf	escribir_char@valor,w
  2191  0490  1283               	bcf	3,5	;RP0=0, select bank0
  2192  0491  1303               	bcf	3,6	;RP1=0, select bank0
  2193  0492  0099               	movwf	25	;volatile
  2194  0493                     l91:	
  2195                           ;LM75_SensorTemo.c: 109:     while (PIR1bits.TXIF == 0);
  2196                           
  2197  0493  1E0C               	btfss	12,4	;volatile
  2198  0494  2C96               	goto	u351
  2199  0495  2C97               	goto	u350
  2200  0496                     u351:
  2201  0496  2C93               	goto	l91
  2202  0497                     u350:
  2203  0497                     l94:
  2204  0497  0008               	return
  2205  0498                     __end_of_escribir_char:
  2206                           
  2207                           	psect	text10
  2208  0485                     __ptext10:	
  2209 ;; *************** function _I2C_M_Stop *****************
  2210 ;; Defined at:
  2211 ;;		line 43 in file "I2C.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0, pclath, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2225 ;;      Params:         0       0       0       0       0
  2226 ;;      Locals:         0       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0
  2228 ;;      Totals:         0       0       0       0       0
  2229 ;;Total ram usage:        0 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    1
  2232 ;; This function calls:
  2233 ;;		_I2C_M_Wait
  2234 ;; This function is called by:
  2235 ;;		_main
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           
  2240                           ;psect for function _I2C_M_Stop
  2241  0485                     _I2C_M_Stop:
  2242  0485                     l1331:	
  2243                           ;incstack = 0
  2244                           ; Regs used in _I2C_M_Stop: [wreg+status,2+status,0+pclath+cstack]
  2245                           
  2246                           
  2247                           ;I2C.c: 44:     I2C_M_Wait();
  2248  0485  120A  118A  2498  120A  118A  	fcall	_I2C_M_Wait
  2249  048A                     l1333:
  2250                           
  2251                           ;I2C.c: 45:     SSPCON2bits.PEN = 1;
  2252  048A  1683               	bsf	3,5	;RP0=1, select bank1
  2253  048B  1303               	bcf	3,6	;RP1=0, select bank1
  2254  048C  1511               	bsf	17,2	;volatile
  2255  048D                     l150:
  2256  048D  0008               	return
  2257  048E                     __end_of_I2C_M_Stop:
  2258                           
  2259                           	psect	text11
  2260  047C                     __ptext11:	
  2261 ;; *************** function _I2C_M_Start *****************
  2262 ;; Defined at:
  2263 ;;		line 25 in file "I2C.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;		None
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;		None
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      void 
  2270 ;; Registers used:
  2271 ;;		wreg, status,2, status,0, pclath, cstack
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2277 ;;      Params:         0       0       0       0       0
  2278 ;;      Locals:         0       0       0       0       0
  2279 ;;      Temps:          0       0       0       0       0
  2280 ;;      Totals:         0       0       0       0       0
  2281 ;;Total ram usage:        0 bytes
  2282 ;; Hardware stack levels used:    1
  2283 ;; Hardware stack levels required when called:    1
  2284 ;; This function calls:
  2285 ;;		_I2C_M_Wait
  2286 ;; This function is called by:
  2287 ;;		_main
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           
  2292                           ;psect for function _I2C_M_Start
  2293  047C                     _I2C_M_Start:
  2294  047C                     l1311:	
  2295                           ;incstack = 0
  2296                           ; Regs used in _I2C_M_Start: [wreg+status,2+status,0+pclath+cstack]
  2297                           
  2298                           
  2299                           ;I2C.c: 26:     I2C_M_Wait();
  2300  047C  120A  118A  2498  120A  118A  	fcall	_I2C_M_Wait
  2301  0481                     l1313:
  2302                           
  2303                           ;I2C.c: 27:     SSPCON2bits.SEN = 1;
  2304  0481  1683               	bsf	3,5	;RP0=1, select bank1
  2305  0482  1303               	bcf	3,6	;RP1=0, select bank1
  2306  0483  1411               	bsf	17,0	;volatile
  2307  0484                     l144:
  2308  0484  0008               	return
  2309  0485                     __end_of_I2C_M_Start:
  2310                           
  2311                           	psect	text12
  2312  04DA                     __ptext12:	
  2313 ;; *************** function _I2C_M_Read *****************
  2314 ;; Defined at:
  2315 ;;		line 61 in file "I2C.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  a               2    0[COMMON] unsigned short 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  temp            2    4[COMMON] unsigned short 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  2    0[COMMON] unsigned short 
  2322 ;; Registers used:
  2323 ;;		wreg, status,2, status,0, pclath, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2329 ;;      Params:         2       0       0       0       0
  2330 ;;      Locals:         2       0       0       0       0
  2331 ;;      Temps:          2       0       0       0       0
  2332 ;;      Totals:         6       0       0       0       0
  2333 ;;Total ram usage:        6 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:    1
  2336 ;; This function calls:
  2337 ;;		_I2C_M_Wait
  2338 ;; This function is called by:
  2339 ;;		_main
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           
  2344                           ;psect for function _I2C_M_Read
  2345  04DA                     _I2C_M_Read:
  2346  04DA                     l1315:	
  2347                           ;incstack = 0
  2348                           ; Regs used in _I2C_M_Read: [wreg+status,2+status,0+pclath+cstack]
  2349                           
  2350                           
  2351                           ;I2C.c: 62:     unsigned short temp;;I2C.c: 63:     I2C_M_Wait();
  2352  04DA  120A  118A  2498  120A  118A  	fcall	_I2C_M_Wait
  2353  04DF                     l1317:
  2354                           
  2355                           ;I2C.c: 64:     RCEN = 1;
  2356  04DF  1683               	bsf	3,5	;RP0=1, select bank1
  2357  04E0  1303               	bcf	3,6	;RP1=0, select bank1
  2358  04E1  1591               	bsf	17,3	;volatile
  2359                           
  2360                           ;I2C.c: 65:     I2C_M_Wait();
  2361  04E2  120A  118A  2498  120A  118A  	fcall	_I2C_M_Wait
  2362  04E7                     l1319:
  2363                           
  2364                           ;I2C.c: 66:     temp = SSPBUF;
  2365  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  2366  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  2367  04E9  0813               	movf	19,w	;volatile
  2368  04EA  00F2               	movwf	??_I2C_M_Read
  2369  04EB  01F3               	clrf	??_I2C_M_Read+1
  2370  04EC  0872               	movf	??_I2C_M_Read,w
  2371  04ED  00F4               	movwf	I2C_M_Read@temp
  2372  04EE  0873               	movf	??_I2C_M_Read+1,w
  2373  04EF  00F5               	movwf	I2C_M_Read@temp+1
  2374  04F0                     l1321:
  2375                           
  2376                           ;I2C.c: 67:     I2C_M_Wait();
  2377  04F0  120A  118A  2498  120A  118A  	fcall	_I2C_M_Wait
  2378  04F5                     l1323:
  2379                           
  2380                           ;I2C.c: 68:     if(a == 1){
  2381  04F5  0370               	decf	I2C_M_Read@a,w
  2382  04F6  0471               	iorwf	I2C_M_Read@a+1,w
  2383  04F7  1D03               	btfss	3,2
  2384  04F8  2CFA               	goto	u591
  2385  04F9  2CFB               	goto	u590
  2386  04FA                     u591:
  2387  04FA  2CFF               	goto	l156
  2388  04FB                     u590:
  2389  04FB                     l1325:
  2390                           
  2391                           ;I2C.c: 69:         SSPCON2bits.ACKDT = 0;
  2392  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  2393  04FC  1303               	bcf	3,6	;RP1=0, select bank1
  2394  04FD  1291               	bcf	17,5	;volatile
  2395                           
  2396                           ;I2C.c: 70:     }
  2397  04FE  2D02               	goto	l157
  2398  04FF                     l156:	
  2399                           ;I2C.c: 71:     else{
  2400                           
  2401                           
  2402                           ;I2C.c: 72:         SSPCON2bits.ACKDT = 1;
  2403  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  2404  0500  1303               	bcf	3,6	;RP1=0, select bank1
  2405  0501  1691               	bsf	17,5	;volatile
  2406  0502                     l157:	
  2407                           ;I2C.c: 73:     }
  2408                           
  2409                           
  2410                           ;I2C.c: 74:         SSPCON2bits.ACKEN = 1;
  2411  0502  1611               	bsf	17,4	;volatile
  2412  0503                     l1327:
  2413                           
  2414                           ;I2C.c: 75:     return temp;
  2415  0503  0875               	movf	I2C_M_Read@temp+1,w
  2416  0504  00F1               	movwf	?_I2C_M_Read+1
  2417  0505  0874               	movf	I2C_M_Read@temp,w
  2418  0506  00F0               	movwf	?_I2C_M_Read
  2419  0507                     l158:
  2420  0507  0008               	return
  2421  0508                     __end_of_I2C_M_Read:
  2422                           
  2423                           	psect	text13
  2424  0498                     __ptext13:	
  2425 ;; *************** function _I2C_M_Wait *****************
  2426 ;; Defined at:
  2427 ;;		line 17 in file "I2C.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;		None
  2432 ;; Return value:  Size  Location     Type
  2433 ;;                  1    wreg      void 
  2434 ;; Registers used:
  2435 ;;		wreg, status,2
  2436 ;; Tracked objects:
  2437 ;;		On entry : 0/0
  2438 ;;		On exit  : 0/0
  2439 ;;		Unchanged: 0/0
  2440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2441 ;;      Params:         0       0       0       0       0
  2442 ;;      Locals:         0       0       0       0       0
  2443 ;;      Temps:          0       0       0       0       0
  2444 ;;      Totals:         0       0       0       0       0
  2445 ;;Total ram usage:        0 bytes
  2446 ;; Hardware stack levels used:    1
  2447 ;; This function calls:
  2448 ;;		Nothing
  2449 ;; This function is called by:
  2450 ;;		_I2C_M_Start
  2451 ;;		_I2C_M_Stop
  2452 ;;		_I2C_M_Read
  2453 ;;		_I2C_M_Restart
  2454 ;;		_I2C_M_Write
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           
  2459                           ;psect for function _I2C_M_Wait
  2460  0498                     _I2C_M_Wait:
  2461  0498                     l1211:	
  2462                           ;incstack = 0
  2463                           ; Regs used in _I2C_M_Wait: [wreg+status,2]
  2464                           
  2465  0498                     l138:	
  2466                           ;I2C.c: 18:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2467                           
  2468  0498  1683               	bsf	3,5	;RP0=1, select bank1
  2469  0499  1303               	bcf	3,6	;RP1=0, select bank1
  2470  049A  1914               	btfsc	20,2	;volatile
  2471  049B  2C9D               	goto	u361
  2472  049C  2C9E               	goto	u360
  2473  049D                     u361:
  2474  049D  2C98               	goto	l138
  2475  049E                     u360:
  2476  049E                     l1213:
  2477  049E  0811               	movf	17,w	;volatile
  2478  049F  391F               	andlw	31
  2479  04A0  1D03               	btfss	3,2
  2480  04A1  2CA3               	goto	u371
  2481  04A2  2CA4               	goto	u370
  2482  04A3                     u371:
  2483  04A3  2C98               	goto	l138
  2484  04A4                     u370:
  2485  04A4                     l141:
  2486  04A4  0008               	return
  2487  04A5                     __end_of_I2C_M_Wait:
  2488                           
  2489                           	psect	text14
  2490  0538                     __ptext14:	
  2491 ;; *************** function _I2C_Init *****************
  2492 ;; Defined at:
  2493 ;;		line 8 in file "I2C.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  a               4    0[BANK0 ] const unsigned long 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0, pclath, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2507 ;;      Params:         0       4       0       0       0
  2508 ;;      Locals:         0       0       0       0       0
  2509 ;;      Temps:          0       4       0       0       0
  2510 ;;      Totals:         0       8       0       0       0
  2511 ;;Total ram usage:        8 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    1
  2514 ;; This function calls:
  2515 ;;		___lldiv
  2516 ;; This function is called by:
  2517 ;;		_main
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           
  2522                           ;psect for function _I2C_Init
  2523  0538                     _I2C_Init:
  2524  0538                     l1297:	
  2525                           ;incstack = 0
  2526                           ; Regs used in _I2C_Init: [wreg+status,2+status,0+pclath+cstack]
  2527                           
  2528                           
  2529                           ;I2C.c: 9:     SSPCON = 0b00101000;
  2530  0538  3028               	movlw	40
  2531  0539  1283               	bcf	3,5	;RP0=0, select bank0
  2532  053A  1303               	bcf	3,6	;RP1=0, select bank0
  2533  053B  0094               	movwf	20	;volatile
  2534  053C                     l1299:
  2535                           
  2536                           ;I2C.c: 10:     SSPCON2 = 0;
  2537  053C  1683               	bsf	3,5	;RP0=1, select bank1
  2538  053D  1303               	bcf	3,6	;RP1=0, select bank1
  2539  053E  0191               	clrf	17	;volatile
  2540  053F                     l1301:
  2541                           
  2542                           ;I2C.c: 11:     SSPADD = (8000000/(4*a))-1;
  2543  053F  1283               	bcf	3,5	;RP0=0, select bank0
  2544  0540  1303               	bcf	3,6	;RP1=0, select bank0
  2545  0541  0820               	movf	I2C_Init@a,w
  2546  0542  00A4               	movwf	??_I2C_Init
  2547  0543  0821               	movf	I2C_Init@a+1,w
  2548  0544  00A5               	movwf	??_I2C_Init+1
  2549  0545  0822               	movf	I2C_Init@a+2,w
  2550  0546  00A6               	movwf	??_I2C_Init+2
  2551  0547  0823               	movf	I2C_Init@a+3,w
  2552  0548  00A7               	movwf	??_I2C_Init+3
  2553  0549  3002               	movlw	2
  2554  054A                     u585:
  2555  054A  1003               	clrc
  2556  054B  0DA4               	rlf	??_I2C_Init,f
  2557  054C  0DA5               	rlf	??_I2C_Init+1,f
  2558  054D  0DA6               	rlf	??_I2C_Init+2,f
  2559  054E  0DA7               	rlf	??_I2C_Init+3,f
  2560  054F                     u580:
  2561  054F  3EFF               	addlw	-1
  2562  0550  1D03               	skipz
  2563  0551  2D4A               	goto	u585
  2564  0552  0827               	movf	??_I2C_Init+3,w
  2565  0553  00F3               	movwf	___lldiv@divisor+3
  2566  0554  0826               	movf	??_I2C_Init+2,w
  2567  0555  00F2               	movwf	___lldiv@divisor+2
  2568  0556  0825               	movf	??_I2C_Init+1,w
  2569  0557  00F1               	movwf	___lldiv@divisor+1
  2570  0558  0824               	movf	??_I2C_Init,w
  2571  0559  00F0               	movwf	___lldiv@divisor
  2572  055A  3000               	movlw	0
  2573  055B  00F7               	movwf	___lldiv@dividend+3
  2574  055C  307A               	movlw	122
  2575  055D  00F6               	movwf	___lldiv@dividend+2
  2576  055E  3012               	movlw	18
  2577  055F  00F5               	movwf	___lldiv@dividend+1
  2578  0560  3000               	movlw	0
  2579  0561  00F4               	movwf	___lldiv@dividend
  2580  0562  120A  118A  26A4  120A  118A  	fcall	___lldiv
  2581  0567  0870               	movf	?___lldiv,w
  2582  0568  3EFF               	addlw	255
  2583  0569  1683               	bsf	3,5	;RP0=1, select bank1
  2584  056A  1303               	bcf	3,6	;RP1=0, select bank1
  2585  056B  0093               	movwf	19	;volatile
  2586  056C                     l1303:
  2587                           
  2588                           ;I2C.c: 12:     SSPSTAT = 0;
  2589  056C  0194               	clrf	20	;volatile
  2590  056D                     l1305:
  2591                           
  2592                           ;I2C.c: 13:     TRISCbits.TRISC3 = 1;
  2593  056D  1587               	bsf	7,3	;volatile
  2594  056E                     l1307:
  2595                           
  2596                           ;I2C.c: 14:     TRISCbits.TRISC4 = 1;
  2597  056E  1607               	bsf	7,4	;volatile
  2598  056F                     l135:
  2599  056F  0008               	return
  2600  0570                     __end_of_I2C_Init:
  2601                           
  2602                           	psect	text15
  2603  06A4                     __ptext15:	
  2604 ;; *************** function ___lldiv *****************
  2605 ;; Defined at:
  2606 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;  divisor         4    0[COMMON] unsigned long 
  2609 ;;  dividend        4    4[COMMON] unsigned long 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;  quotient        4    9[COMMON] unsigned long 
  2612 ;;  counter         1   13[COMMON] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  4    0[COMMON] unsigned long 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2622 ;;      Params:         8       0       0       0       0
  2623 ;;      Locals:         5       0       0       0       0
  2624 ;;      Temps:          1       0       0       0       0
  2625 ;;      Totals:        14       0       0       0       0
  2626 ;;Total ram usage:       14 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_I2C_Init
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           
  2636                           ;psect for function ___lldiv
  2637  06A4                     ___lldiv:
  2638  06A4                     l1215:	
  2639                           ;incstack = 0
  2640                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2641                           
  2642  06A4  3000               	movlw	0
  2643  06A5  00FC               	movwf	___lldiv@quotient+3
  2644  06A6  3000               	movlw	0
  2645  06A7  00FB               	movwf	___lldiv@quotient+2
  2646  06A8  3000               	movlw	0
  2647  06A9  00FA               	movwf	___lldiv@quotient+1
  2648  06AA  3000               	movlw	0
  2649  06AB  00F9               	movwf	___lldiv@quotient
  2650  06AC  0873               	movf	___lldiv@divisor+3,w
  2651  06AD  0472               	iorwf	___lldiv@divisor+2,w
  2652  06AE  0471               	iorwf	___lldiv@divisor+1,w
  2653  06AF  0470               	iorwf	___lldiv@divisor,w
  2654  06B0  1903               	skipnz
  2655  06B1  2EB3               	goto	u381
  2656  06B2  2EB4               	goto	u380
  2657  06B3                     u381:
  2658  06B3  2F01               	goto	l1235
  2659  06B4                     u380:
  2660  06B4                     l1217:
  2661  06B4  01FD               	clrf	___lldiv@counter
  2662  06B5  0AFD               	incf	___lldiv@counter,f
  2663  06B6  2EC4               	goto	l1221
  2664  06B7                     l1219:
  2665  06B7  3001               	movlw	1
  2666  06B8  00F8               	movwf	??___lldiv
  2667  06B9                     u395:
  2668  06B9  1003               	clrc
  2669  06BA  0DF0               	rlf	___lldiv@divisor,f
  2670  06BB  0DF1               	rlf	___lldiv@divisor+1,f
  2671  06BC  0DF2               	rlf	___lldiv@divisor+2,f
  2672  06BD  0DF3               	rlf	___lldiv@divisor+3,f
  2673  06BE  0BF8               	decfsz	??___lldiv,f
  2674  06BF  2EB9               	goto	u395
  2675  06C0  3001               	movlw	1
  2676  06C1  00F8               	movwf	??___lldiv
  2677  06C2  0878               	movf	??___lldiv,w
  2678  06C3  07FD               	addwf	___lldiv@counter,f
  2679  06C4                     l1221:
  2680  06C4  1FF3               	btfss	___lldiv@divisor+3,7
  2681  06C5  2EC7               	goto	u401
  2682  06C6  2EC8               	goto	u400
  2683  06C7                     u401:
  2684  06C7  2EB7               	goto	l1219
  2685  06C8                     u400:
  2686  06C8                     l1223:
  2687  06C8  3001               	movlw	1
  2688  06C9  00F8               	movwf	??___lldiv
  2689  06CA                     u415:
  2690  06CA  1003               	clrc
  2691  06CB  0DF9               	rlf	___lldiv@quotient,f
  2692  06CC  0DFA               	rlf	___lldiv@quotient+1,f
  2693  06CD  0DFB               	rlf	___lldiv@quotient+2,f
  2694  06CE  0DFC               	rlf	___lldiv@quotient+3,f
  2695  06CF  0BF8               	decfsz	??___lldiv,f
  2696  06D0  2ECA               	goto	u415
  2697  06D1                     l1225:
  2698  06D1  0873               	movf	___lldiv@divisor+3,w
  2699  06D2  0277               	subwf	___lldiv@dividend+3,w
  2700  06D3  1D03               	skipz
  2701  06D4  2EDF               	goto	u425
  2702  06D5  0872               	movf	___lldiv@divisor+2,w
  2703  06D6  0276               	subwf	___lldiv@dividend+2,w
  2704  06D7  1D03               	skipz
  2705  06D8  2EDF               	goto	u425
  2706  06D9  0871               	movf	___lldiv@divisor+1,w
  2707  06DA  0275               	subwf	___lldiv@dividend+1,w
  2708  06DB  1D03               	skipz
  2709  06DC  2EDF               	goto	u425
  2710  06DD  0870               	movf	___lldiv@divisor,w
  2711  06DE  0274               	subwf	___lldiv@dividend,w
  2712  06DF                     u425:
  2713  06DF  1C03               	skipc
  2714  06E0  2EE2               	goto	u421
  2715  06E1  2EE3               	goto	u420
  2716  06E2                     u421:
  2717  06E2  2EF2               	goto	l1231
  2718  06E3                     u420:
  2719  06E3                     l1227:
  2720  06E3  0870               	movf	___lldiv@divisor,w
  2721  06E4  02F4               	subwf	___lldiv@dividend,f
  2722  06E5  0871               	movf	___lldiv@divisor+1,w
  2723  06E6  1C03               	skipc
  2724  06E7  0F71               	incfsz	___lldiv@divisor+1,w
  2725  06E8  02F5               	subwf	___lldiv@dividend+1,f
  2726  06E9  0872               	movf	___lldiv@divisor+2,w
  2727  06EA  1C03               	skipc
  2728  06EB  0F72               	incfsz	___lldiv@divisor+2,w
  2729  06EC  02F6               	subwf	___lldiv@dividend+2,f
  2730  06ED  0873               	movf	___lldiv@divisor+3,w
  2731  06EE  1C03               	skipc
  2732  06EF  0F73               	incfsz	___lldiv@divisor+3,w
  2733  06F0  02F7               	subwf	___lldiv@dividend+3,f
  2734  06F1                     l1229:
  2735  06F1  1479               	bsf	___lldiv@quotient,0
  2736  06F2                     l1231:
  2737  06F2  3001               	movlw	1
  2738  06F3                     u435:
  2739  06F3  1003               	clrc
  2740  06F4  0CF3               	rrf	___lldiv@divisor+3,f
  2741  06F5  0CF2               	rrf	___lldiv@divisor+2,f
  2742  06F6  0CF1               	rrf	___lldiv@divisor+1,f
  2743  06F7  0CF0               	rrf	___lldiv@divisor,f
  2744  06F8  3EFF               	addlw	-1
  2745  06F9  1D03               	skipz
  2746  06FA  2EF3               	goto	u435
  2747  06FB                     l1233:
  2748  06FB  3001               	movlw	1
  2749  06FC  02FD               	subwf	___lldiv@counter,f
  2750  06FD  1D03               	btfss	3,2
  2751  06FE  2F00               	goto	u441
  2752  06FF  2F01               	goto	u440
  2753  0700                     u441:
  2754  0700  2EC8               	goto	l1223
  2755  0701                     u440:
  2756  0701                     l1235:
  2757  0701  087C               	movf	___lldiv@quotient+3,w
  2758  0702  00F3               	movwf	?___lldiv+3
  2759  0703  087B               	movf	___lldiv@quotient+2,w
  2760  0704  00F2               	movwf	?___lldiv+2
  2761  0705  087A               	movf	___lldiv@quotient+1,w
  2762  0706  00F1               	movwf	?___lldiv+1
  2763  0707  0879               	movf	___lldiv@quotient,w
  2764  0708  00F0               	movwf	?___lldiv
  2765  0709                     l351:
  2766  0709  0008               	return
  2767  070A                     __end_of___lldiv:
  2768  007E                     btemp	set	126	;btemp
  2769  007E                     wtemp0	set	126
  2770                           
  2771                           	psect	config
  2772                           
  2773                           ;Config register CONFIG1 @ 0x2007
  2774                           ;	Oscillator Selection bits
  2775                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2776                           ;	Watchdog Timer Enable bit
  2777                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2778                           ;	Power-up Timer Enable bit
  2779                           ;	PWRTE = OFF, PWRT disabled
  2780                           ;	RE3/MCLR pin function select bit
  2781                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2782                           ;	Code Protection bit
  2783                           ;	CP = OFF, Program memory code protection is disabled
  2784                           ;	Data Code Protection bit
  2785                           ;	CPD = OFF, Data memory code protection is disabled
  2786                           ;	Brown Out Reset Selection bits
  2787                           ;	BOREN = OFF, BOR disabled
  2788                           ;	Internal External Switchover bit
  2789                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2790                           ;	Fail-Safe Clock Monitor Enabled bit
  2791                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2792                           ;	Low Voltage Programming Enable bit
  2793                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2794                           ;	In-Circuit Debugger Mode bit
  2795                           ;	DEBUG = 0x1, unprogrammed default
  2796  2007                     	org	8199
  2797  2007  20D4               	dw	8404
  2798                           
  2799                           ;Config register CONFIG2 @ 0x2008
  2800                           ;	Brown-out Reset Selection bit
  2801                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2802                           ;	Flash Program Memory Self Write Enable bits
  2803                           ;	WRT = OFF, Write protection off
  2804  2008                     	org	8200
  2805  2008  3FFF               	dw	16383

Data Sizes:
    Strings     6
    Constant    10
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    USART_SendString@str	PTR const unsigned char  size(1) Largest target is 20
		 -> main@buffer(BANK0[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_InitOSC
    _USART_SendString->_escribir_char
    _I2C_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0    1920
                                             13 BANK0     23    23      0
                           _I2C_Init
                         _I2C_M_Read
                        _I2C_M_Start
                         _I2C_M_Stop
                   _USART_SendString
                       _USART_config
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                            _InitOSC
 ---------------------------------------------------------------------------------
 (2) _InitOSC                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _USART_config                                         0     0      0       0
                   _USART_lib_config
 ---------------------------------------------------------------------------------
 (2) _USART_lib_config                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_SendString                                     2     2      0     100
                                              1 COMMON     2     2      0
                      _escribir_char
 ---------------------------------------------------------------------------------
 (2) _escribir_char                                        1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_M_Stop                                           0     0      0       0
                         _I2C_M_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_M_Start                                          0     0      0       0
                         _I2C_M_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_M_Read                                           6     4      2     121
                                              0 COMMON     6     4      2
                         _I2C_M_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_M_Wait                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
     ___lldiv
   _I2C_M_Read
     _I2C_M_Wait
   _I2C_M_Start
     _I2C_M_Wait
   _I2C_M_Stop
     _I2C_M_Wait
   _USART_SendString
     _escribir_char
   _USART_config
     _USART_lib_config
   _setup
     _InitOSC
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      2C       5       55.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 22:47:59 2021

                        pc 0002        __size_of_I2C_M_Read 002E        __size_of_I2C_M_Wait 000D  
      __size_of_I2C_M_Stop 0009                         l91 0493                         l85 0537  
                       l94 0497                         l88 047B     __size_of_escribir_char 000A  
                       fsr 0004       __size_of_I2C_M_Start 0009                        l100 04BB  
                      l200 067A                        l201 06A3                        l141 04A4  
                      l150 048D                        l135 056F                        l311 07F1  
                      l144 0484                        l138 0498                        l156 04FF  
                      l157 0502                        l158 0507                        l182 04D9  
                      l351 0709                        l191 064A                        l192 06A2  
                      l193 0650                        l194 0656                        l195 065C  
                      l196 0662                        l197 0668                        l198 066E  
                      l199 0674                        l587 05ED                        l597 05A9  
                      _GIE 005F                        u400 06C8                        u401 06C7  
                      u420 06E3                        u421 06E2                        u350 0497  
                      u510 05E9                        u415 06CA                        u351 0496  
                      u511 05E8                        u440 0701                        u360 049E  
                      u520 0576                        u600 0718                        u441 0700  
                      u425 06DF                        u361 049D                        u505 05DD  
                      u521 0575                        u601 0717                        u370 04A4  
                      u450 05B2                        u610 0752                        u435 06F3  
                      u371 04A3                        u451 05B1                        u611 0751  
                      u380 06B4                        u540 0588                        u620 0778  
                      u381 06B3                        u541 0587                        u621 0777  
                      u470 05C4                        u550 0592                        u630 0783  
                      u471 05C3                        u551 0591                        u535 057A  
                      u631 0782                        u640 0789                        u465 05B6  
                      u641 0788                        u625 0774                        u490 05D5  
                      u570 05A5                        u650 07DB                        u395 06B9  
                      u491 05D4                        u571 05A4                        u555 058E  
                      u651 07DA                        u580 054F                        u660 07ED  
                      u485 05C5                        u565 0599                        u661 07EC  
                      u590 04FB                        u670 04BB                        u591 04FA  
                      u671 04BA                        u495 05D1                        u585 054A  
                      u687 0627           _USART_lib_config 04BC                        fsr0 0004  
                      indf 0000                       l1201 04D1                       l1211 0498  
                     l1203 04D2                       l1221 06C4                       l1301 053F  
                     l1213 049E                       l1205 04D3                       l1231 06F2  
                     l1223 06C8                       l1215 06A4                       l1303 056C  
                     l1311 047C                       l1207 04D6                       l1233 06FB  
                     l1225 06D1                       l1217 06B4                       l1305 056D  
                     l1321 04F0                       l1313 0481                       l1209 048F  
                     l1401 04AF                       l1241 05AC                       l1227 06E3  
                     l1219 06B7                       l1235 0701                       l1307 056E  
                     l1323 04F5                       l1315 04DA                       l1331 0485  
                     l1403 04B3                       l1171 04C0                       l1163 0680  
                     l1251 05C4                       l1243 05B2                       l1411 0607  
                     l1229 06F1                       l1325 04FB                       l1317 04DF  
                     l1333 048A                       l1181 04C5                       l1173 04C1  
                     l1309 0476                       l1253 05D5                       l1245 05B5  
                     l1261 05E9                       l1341 071F                       l1421 063E  
                     l1413 060C                       l1405 05EE                       l1327 0503  
                     l1319 04E7                       l1191 04CC                       l1183 04C6  
                     l1175 04C2                       l1159 0649                       l1255 05DB  
                     l1247 05BC                       l1239 05AA                       l1271 0580  
                     l1351 074A                       l1343 0724                       l1335 070D  
                     l1415 061A                       l1407 05F3                       l1193 04CD  
                     l1185 04C7                       l1177 04C3                       l1169 04BC  
                     l1257 05DC                       l1249 05C0                       l1281 059F  
                     l1273 0584                       l1265 0570                       l1353 074E  
                     l1337 0712                       l1417 061F                       l1409 0602  
                     l1195 04CE                       l1187 04C8                       l1179 04C4  
                     l1291 052D                       l1259 05E3                       l1275 0588  
                     l1267 0576                       l1283 05A5                       l1371 0783  
                     l1355 0752                       l1347 0725                       l1339 0718  
                     l1419 062E                       l1197 04CF                       l1189 04CB  
                     l1293 0530                       l1277 0592                       l1269 0579  
                     l1381 07C7                       l1373 0789                       l1365 075D  
                     l1357 0756                       l1349 0742                       l1199 04D0  
                     l1295 0531                       l1287 0508                       l1279 0598  
                     l1383 07CE                       l1375 0790                       l1359 075B  
                     l1471 0737                       l1297 0538                       l1473 0688  
                     l1289 0520                       l1385 07D2                       l1377 0794  
                     l1369 0779                       l1299 053C                       l1379 0799  
                     l1387 07DB                       l1397 04A6                       l1389 07ED  
                     l1399 04A7                       STR_1 0013                       _CREN 00C4  
                     _PEIE 005E                       _RCEN 048B                InitOSC@frec 0072  
                     _Int1 0046                       _main 05EE           __end_of_I2C_Init 0570  
                     btemp 007E   __end_of_USART_SendString 04BC                       start 0000  
          __end_of_InitOSC 06A4                      ?_main 0070                      _ANSEL 0188  
          __end_of___lldiv 070A            __end_of___lwdiv 05EE            __end_of___lwmod 05AA  
                    _RCREG 001A                      _RCSTA 0018                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
                    _TXREG 0019                      _TXSTA 0098                      _Byte1 004B  
                    _Byte2 004A            __end_of_dpowers 0013                      _setup 0508  
            _escribir_char 048E                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07F2            __initialization 07F2  
             __end_of_main 0648                     ??_main 002D             I2C_M_Read@temp 0074  
                I2C_Init@a 0020               ??_I2C_M_Read 0072               ??_I2C_M_Wait 0070  
             ??_I2C_M_Stop 0070             ?_escribir_char 0070                     ?_setup 0070  
                   _ANSELH 0189                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _TRISC6 043E                     _TRISC7 043F  
                   _SSPCON 0014                     _SSPBUF 0013                  ??_InitOSC 0070  
                   _Estado 0049                  ??___lldiv 0078                  ??___lwdiv 0074  
                ??___lwmod 007C         __end_of_I2C_M_Read 0508         __end_of_I2C_M_Wait 04A5  
       __end_of_I2C_M_Stop 048E                     _sensor 0044                  ?_I2C_Init 0020  
                ??_sprintf 0023    __end_of__initialization 07FC   __end_of_USART_lib_config 04DA  
           __pcstackCOMMON 0070              __end_of_setup 0538                 ??_I2C_Init 0024  
          ??_escribir_char 0070                    ??_setup 0073                 __pbssBANK0 0044  
        ?_USART_SendString 0070         ??_USART_SendString 0071                 __pmaintext 05EE  
            ??_I2C_M_Start 0070                    _COMPARE 0048                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0003                    _InitOSC 0648  
                  ___lldiv 06A4                    ___lwdiv 05AA                    ___lwmod 0570  
                  __ptext1 070A                    __ptext2 0570                    __ptext3 05AA  
                  __ptext4 0508                    __ptext5 0648                    __ptext6 0476  
                  __ptext7 04BC                    __ptext8 04A5                    __ptext9 048E  
      USART_SendString@str 0072        __end_of_I2C_M_Start 0485                    _dpowers 0009  
                  _sprintf 070A       end_of_initialization 07FC            ___lldiv@divisor 0070  
          ___lldiv@counter 007D                  _RCSTAbits 0018                  _TRISCbits 0087  
                _TRISEbits 0089          __size_of_I2C_Init 0038                 main@buffer 0030  
                _TXSTAbits 0098          ?_USART_lib_config 0070              ?_USART_config 0070  
       ??_USART_lib_config 0070                _I2C_M_Start 047C        start_initialization 07F2  
           ??_USART_config 0070  __size_of_USART_SendString 0017                  ___latbits 0002  
            __pcstackBANK0 0020      __end_of_escribir_char 0498                I2C_M_Read@a 0070  
              sprintf@flag 0027                sprintf@prec 0028                   ?_InitOSC 0070  
         ___lwdiv@dividend 0072                   ?___lldiv 0070                   ?___lwdiv 0070  
                 ?___lwmod 0078                  __pstrings 0003                   _I2C_Init 0538  
         ___lwdiv@quotient 0075                   ?_sprintf 0020             __size_of_setup 0030  
                 _PIE1bits 008C                   _PIR1bits 000C                __stringbase 0008  
     __end_of_USART_config 047C                 _I2C_M_Read 04DA                 _I2C_M_Wait 0498  
               _I2C_M_Stop 0485           __size_of_InitOSC 005C               ?_I2C_M_Start 0070  
         __size_of___lldiv 0066           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 0009           _USART_SendString 04A5  __size_of_USART_lib_config 001E  
               sprintf@val 0029            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 0485                   __ptext11 047C                   __ptext12 04DA  
                 __ptext13 0498                   __ptext14 0538                   __ptext15 06A4  
       escribir_char@valor 0070           __size_of_sprintf 00E8              __size_of_main 005A  
              ?_I2C_M_Read 0070                ?_I2C_M_Wait 0070                ?_I2C_M_Stop 0070  
                sprintf@ap 0026                  sprintf@sp 002B           ___lwmod@dividend 007A  
         ___lldiv@dividend 0074                  stringcode 0003                 _OSCCONbits 008F  
    __size_of_USART_config 0006                   sprintf@c 002C                   sprintf@f 0020  
         ___lldiv@quotient 0079            ___lwmod@divisor 0078            ___lwmod@counter 007D  
                 stringdir 0003                   stringtab 0003                _SSPCON2bits 0091  
             _USART_config 0476  
