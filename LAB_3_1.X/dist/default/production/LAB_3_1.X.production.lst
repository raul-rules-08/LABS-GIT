

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 12 23:00:01 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  001A                     _RCREG	set	26
   230  0019                     _TXREG	set	25
   231  001E                     _ADRESH	set	30
   232  0018                     _RCSTAbits	set	24
   233  0006                     _PORTB	set	6
   234  0008                     _PORTDbits	set	8
   235  000C                     _PIR1bits	set	12
   236  000B                     _INTCONbits	set	11
   237  001F                     _ADCON0bits	set	31
   238  00C4                     _CREN	set	196
   239  0098                     _TXSTAbits	set	152
   240  0099                     _SPBRG	set	153
   241  008C                     _PIE1bits	set	140
   242  009F                     _ADCON1bits	set	159
   243  0088                     _TRISD	set	136
   244  0086                     _TRISB	set	134
   245  0085                     _TRISA	set	133
   246  0188                     _ANSELbits	set	392
   247  0189                     _ANSELH	set	393
   248  0188                     _ANSEL	set	392
   249                           
   250                           	psect	strings
   251  0561                     __pstrings:
   252  0561                     stringtab:
   253  0561                     __stringtab:
   254  0561                     stringcode:	
   255                           ;	String table - string pointers are 1 byte each
   256                           
   257  0561                     stringdir:
   258  0561  3005               	movlw	high stringdir
   259  0562  008A               	movwf	10
   260  0563  0804               	movf	4,w
   261  0564  0A84               	incf	4,f
   262  0565  0782               	addwf	2,f
   263  0566                     __stringbase:
   264  0566  3400               	retlw	0
   265  0567                     __end_of__stringtab:
   266  0567                     STR_2:
   267  0567  3452               	retlw	82	;'R'
   268  0568  3441               	retlw	65	;'A'
   269  0569  3455               	retlw	85	;'U'
   270  056A  344C               	retlw	76	;'L'
   271  056B  345F               	retlw	95	;'_'
   272  056C  3441               	retlw	65	;'A'
   273  056D  3447               	retlw	71	;'G'
   274  056E  3455               	retlw	85	;'U'
   275  056F  3449               	retlw	73	;'I'
   276  0570  344C               	retlw	76	;'L'
   277  0571  3441               	retlw	65	;'A'
   278  0572  3452               	retlw	82	;'R'
   279  0573  3400               	retlw	0
   280  0574                     STR_1:
   281  0574  3444               	retlw	68	;'D'
   282  0575  3449               	retlw	73	;'I'
   283  0576  3447               	retlw	71	;'G'
   284  0577  3449               	retlw	73	;'I'
   285  0578  3454               	retlw	84	;'T'
   286  0579  3441               	retlw	65	;'A'
   287  057A  344C               	retlw	76	;'L'
   288  057B  3420               	retlw	32	;' '
   289  057C  3432               	retlw	50	;'2'
   290  057D  3400               	retlw	0
   291  057E                     STR_5:
   292  057E  3443               	retlw	67	;'C'
   293  057F  346F               	retlw	111	;'o'
   294  0580  346E               	retlw	110	;'n'
   295  0581  3474               	retlw	116	;'t'
   296  0582  3461               	retlw	97	;'a'
   297  0583  3464               	retlw	100	;'d'
   298  0584  346F               	retlw	111	;'o'
   299  0585  3472               	retlw	114	;'r'
   300  0586  3400               	retlw	0
   301  0587                     STR_3:
   302  0587  3456               	retlw	86	;'V'
   303  0588  346F               	retlw	111	;'o'
   304  0589  346C               	retlw	108	;'l'
   305  058A  3474               	retlw	116	;'t'
   306  058B  3431               	retlw	49	;'1'
   307  058C  3400               	retlw	0
   308  058D                     STR_4:
   309  058D  3456               	retlw	86	;'V'
   310  058E  346F               	retlw	111	;'o'
   311  058F  346C               	retlw	108	;'l'
   312  0590  3474               	retlw	116	;'t'
   313  0591  3432               	retlw	50	;'2'
   314  0592  3400               	retlw	0
   315                           
   316                           	psect	cinit
   317  000F                     start_initialization:	
   318                           ; #config settings
   319                           
   320  000F                     __initialization:
   321                           
   322                           ; Clear objects allocated to COMMON
   323  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   324  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   325  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   326                           
   327                           ; Clear objects allocated to BANK0
   328  0012  1383               	bcf	3,7	;select IRP bank0
   329  0013  303F               	movlw	low __pbssBANK0
   330  0014  0084               	movwf	4
   331  0015  305A               	movlw	low (__pbssBANK0+27)
   332  0016  120A  118A  26BE  120A  118A  	fcall	clear_ram0
   333  001B                     end_of_initialization:	
   334                           ;End of C runtime variable initialization code
   335                           
   336  001B                     __end_of__initialization:
   337  001B  0183               	clrf	3
   338  001C  120A  118A  2B10   	ljmp	_main	;jump to C main() function
   339                           
   340                           	psect	bssCOMMON
   341  0078                     __pbssCOMMON:
   342  0078                     _enterob:
   343  0078                     	ds	1
   344  0079                     _decima1c:
   345  0079                     	ds	1
   346  007A                     _enteroc:
   347  007A                     	ds	1
   348                           
   349                           	psect	bssBANK0
   350  003F                     __pbssBANK0:
   351  003F                     _vpot2:
   352  003F                     	ds	4
   353  0043                     _vpot1:
   354  0043                     	ds	4
   355  0047                     _a:
   356  0047                     	ds	1
   357  0048                     _w2:
   358  0048                     	ds	1
   359  0049                     _w1:
   360  0049                     	ds	1
   361  004A                     _valor:
   362  004A                     	ds	1
   363  004B                     _revisa:
   364  004B                     	ds	1
   365  004C                     _contador:
   366  004C                     	ds	1
   367  004D                     _velocidad3:
   368  004D                     	ds	1
   369  004E                     _velocidad2:
   370  004E                     	ds	1
   371  004F                     _velocidad1:
   372  004F                     	ds	1
   373  0050                     _centena2b:
   374  0050                     	ds	1
   375  0051                     _decima2b:
   376  0051                     	ds	1
   377  0052                     _centena1b:
   378  0052                     	ds	1
   379  0053                     _decima1b:
   380  0053                     	ds	1
   381  0054                     _centena2c:
   382  0054                     	ds	1
   383  0055                     _decima2c:
   384  0055                     	ds	1
   385  0056                     _centena1c:
   386  0056                     	ds	1
   387  0057                     _buffer:
   388  0057                     	ds	1
   389  0058                     _b:
   390  0058                     	ds	1
   391  0059                     _c:
   392  0059                     	ds	1
   393                           
   394                           	psect	clrtext
   395  06BE                     clear_ram0:	
   396                           ;	Called with FSR containing the base address, and
   397                           ;	W with the last address+1
   398                           
   399  06BE  0064               	clrwdt	;clear the watchdog before getting into this loop
   400  06BF                     clrloop0:
   401  06BF  0180               	clrf	0	;clear RAM location pointed to by FSR
   402  06C0  0A84               	incf	4,f	;increment pointer
   403  06C1  0604               	xorwf	4,w	;XOR with final address
   404  06C2  1903               	btfsc	3,2	;have we reached the end yet?
   405  06C3  3400               	retlw	0	;all done for this memory range, return
   406  06C4  0604               	xorwf	4,w	;XOR again to restore value
   407  06C5  2EBF               	goto	clrloop0	;do the next byte
   408                           
   409                           	psect	cstackCOMMON
   410  0070                     __pcstackCOMMON:
   411  0070                     ?_revisa_char:
   412  0070                     ??_revisa_char:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ?_USART_config:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_conversion:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_Conversion1:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_Conversion2:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ?_contador_lcd:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_display1:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ?_display2:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_display3:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ?_config:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_Lcd_Cmd:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_Lcd_Write_Char:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_Lcd_Write_String:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_Lcd_Init:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?_USART_lib_config:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_ISR:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ??_ISR:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_main:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_dato_char:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?_Lcd_Clear:	
   470                           ; 1 bytes @ 0x0
   471                           
   472                           
   473                           ; 2 bytes @ 0x0
   474  0070                     	ds	3
   475  0073                     ??_USART_config:
   476  0073                     ??_contador_lcd:	
   477                           ; 1 bytes @ 0x3
   478                           
   479  0073                     ??_config:	
   480                           ; 1 bytes @ 0x3
   481                           
   482  0073                     ??_Lcd_Cmd:	
   483                           ; 1 bytes @ 0x3
   484                           
   485  0073                     ??_Lcd_Write_Char:	
   486                           ; 1 bytes @ 0x3
   487                           
   488  0073                     ??_USART_lib_config:	
   489                           ; 1 bytes @ 0x3
   490                           
   491  0073                     ??_dato_char:	
   492                           ; 1 bytes @ 0x3
   493                           
   494  0073                     ?___wmul:	
   495                           ; 1 bytes @ 0x3
   496                           
   497  0073                     ?___awmod:	
   498                           ; 2 bytes @ 0x3
   499                           
   500  0073                     dato_char@valor:	
   501                           ; 2 bytes @ 0x3
   502                           
   503  0073                     ___wmul@multiplier:	
   504                           ; 1 bytes @ 0x3
   505                           
   506  0073                     ___awmod@divisor:	
   507                           ; 2 bytes @ 0x3
   508                           
   509                           
   510                           ; 2 bytes @ 0x3
   511  0073                     	ds	1
   512  0074                     ??_display1:
   513  0074                     ??_display2:	
   514                           ; 1 bytes @ 0x4
   515                           
   516  0074                     ??_display3:	
   517                           ; 1 bytes @ 0x4
   518                           
   519  0074                     Lcd_Write_Char@a:	
   520                           ; 1 bytes @ 0x4
   521                           
   522                           
   523                           ; 1 bytes @ 0x4
   524  0074                     	ds	1
   525  0075                     ??_Lcd_Write_String:
   526  0075                     Lcd_Cmd@a:	
   527                           ; 1 bytes @ 0x5
   528                           
   529  0075                     Lcd_Write_String@i:	
   530                           ; 1 bytes @ 0x5
   531                           
   532  0075                     ___wmul@multiplicand:	
   533                           ; 2 bytes @ 0x5
   534                           
   535  0075                     ___awmod@dividend:	
   536                           ; 2 bytes @ 0x5
   537                           
   538                           
   539                           ; 2 bytes @ 0x5
   540  0075                     	ds	1
   541  0076                     ??_Lcd_Clear:
   542  0076                     ?_Lcd_Set_Cursor:	
   543                           ; 1 bytes @ 0x6
   544                           
   545  0076                     ??_Lcd_Init:	
   546                           ; 1 bytes @ 0x6
   547                           
   548  0076                     Lcd_Set_Cursor@b:	
   549                           ; 1 bytes @ 0x6
   550                           
   551                           
   552                           ; 1 bytes @ 0x6
   553  0076                     	ds	1
   554  0077                     ??_Lcd_Set_Cursor:
   555  0077                     ??___wmul:	
   556                           ; 1 bytes @ 0x7
   557                           
   558  0077                     ??___awdiv:	
   559                           ; 1 bytes @ 0x7
   560                           
   561  0077                     ??___awmod:	
   562                           ; 1 bytes @ 0x7
   563                           
   564  0077                     Lcd_Write_String@a:	
   565                           ; 1 bytes @ 0x7
   566                           
   567                           
   568                           ; 1 bytes @ 0x7
   569  0077                     	ds	1
   570                           
   571                           	psect	cstackBANK0
   572  0020                     __pcstackBANK0:
   573  0020                     Lcd_Set_Cursor@a:
   574  0020                     ___awmod@counter:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0020                     ___wmul@product:	
   578                           ; 1 bytes @ 0x0
   579                           
   580                           
   581                           ; 2 bytes @ 0x0
   582  0020                     	ds	1
   583  0021                     Lcd_Set_Cursor@temp:
   584  0021                     ___awmod@sign:	
   585                           ; 1 bytes @ 0x1
   586                           
   587                           
   588                           ; 1 bytes @ 0x1
   589  0021                     	ds	1
   590  0022                     ?___awdiv:
   591  0022                     ___awdiv@divisor:	
   592                           ; 2 bytes @ 0x2
   593                           
   594                           
   595                           ; 2 bytes @ 0x2
   596  0022                     	ds	2
   597  0024                     ___awdiv@dividend:
   598                           
   599                           ; 2 bytes @ 0x4
   600  0024                     	ds	2
   601  0026                     ___awdiv@counter:
   602                           
   603                           ; 1 bytes @ 0x6
   604  0026                     	ds	1
   605  0027                     ___awdiv@sign:
   606                           
   607                           ; 1 bytes @ 0x7
   608  0027                     	ds	1
   609  0028                     ___awdiv@quotient:
   610                           
   611                           ; 2 bytes @ 0x8
   612  0028                     	ds	2
   613  002A                     ??_Conversion1:
   614  002A                     ??_Conversion2:	
   615                           ; 1 bytes @ 0xA
   616                           
   617  002A                     ?___xxtofl:	
   618                           ; 1 bytes @ 0xA
   619                           
   620  002A                     ___xxtofl@val:	
   621                           ; 4 bytes @ 0xA
   622                           
   623                           
   624                           ; 4 bytes @ 0xA
   625  002A                     	ds	4
   626  002E                     ??___xxtofl:
   627                           
   628                           ; 1 bytes @ 0xE
   629  002E                     	ds	4
   630  0032                     ___xxtofl@sign:
   631                           
   632                           ; 1 bytes @ 0x12
   633  0032                     	ds	1
   634  0033                     ___xxtofl@exp:
   635                           
   636                           ; 1 bytes @ 0x13
   637  0033                     	ds	1
   638  0034                     ___xxtofl@arg:
   639                           
   640                           ; 4 bytes @ 0x14
   641  0034                     	ds	4
   642  0038                     ??_conversion:
   643                           
   644                           ; 1 bytes @ 0x18
   645  0038                     	ds	3
   646  003B                     conversion@puertoANL:
   647                           
   648                           ; 1 bytes @ 0x1B
   649  003B                     	ds	1
   650  003C                     ??_main:
   651                           
   652                           ; 1 bytes @ 0x1C
   653  003C                     	ds	3
   654                           
   655                           	psect	maintext
   656  0310                     __pmaintext:	
   657 ;;
   658 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   659 ;;
   660 ;; *************** function _main *****************
   661 ;; Defined at:
   662 ;;		line 79 in file "lab3.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : B00/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   676 ;;      Params:         0       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0
   678 ;;      Temps:          0       3       0       0       0
   679 ;;      Totals:         0       3       0       0       0
   680 ;;Total ram usage:        3 bytes
   681 ;; Hardware stack levels required when called:    6
   682 ;; This function calls:
   683 ;;		_Lcd_Clear
   684 ;;		_Lcd_Init
   685 ;;		_Lcd_Set_Cursor
   686 ;;		_Lcd_Write_String
   687 ;;		_USART_config
   688 ;;		_config
   689 ;;		_conversion
   690 ;; This function is called by:
   691 ;;		Startup code after reset
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _main
   697  0310                     _main:
   698  0310                     l1759:	
   699                           ;incstack = 0
   700                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   701                           
   702                           
   703                           ;lab3.c: 80:     config();
   704  0310  120A  118A  264A  120A  118A  	fcall	_config
   705                           
   706                           ;lab3.c: 81:     Lcd_Init();
   707  0315  120A  118A  252B  120A  118A  	fcall	_Lcd_Init
   708                           
   709                           ;lab3.c: 82:     Lcd_Set_Cursor(1,1);
   710  031A  01F6               	clrf	Lcd_Set_Cursor@b
   711  031B  0AF6               	incf	Lcd_Set_Cursor@b,f
   712  031C  3001               	movlw	1
   713  031D  120A  118A  25BE  120A  118A  	fcall	_Lcd_Set_Cursor
   714  0322                     l1761:
   715                           
   716                           ;lab3.c: 83:     Lcd_Write_String("DIGITAL 2");
   717  0322  300E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   718  0323  120A  118A  25E4  120A  118A  	fcall	_Lcd_Write_String
   719  0328                     l1763:
   720                           
   721                           ;lab3.c: 84:     Lcd_Set_Cursor(2,1);
   722  0328  01F6               	clrf	Lcd_Set_Cursor@b
   723  0329  0AF6               	incf	Lcd_Set_Cursor@b,f
   724  032A  3002               	movlw	2
   725  032B  120A  118A  25BE  120A  118A  	fcall	_Lcd_Set_Cursor
   726                           
   727                           ;lab3.c: 85:     Lcd_Write_String("RAUL_AGUILAR");
   728  0330  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   729  0331  120A  118A  25E4  120A  118A  	fcall	_Lcd_Write_String
   730  0336                     l1765:
   731                           
   732                           ;lab3.c: 86:     _delay((unsigned long)((100)*(9000000/4000.0)));
   733  0336  3002               	movlw	2
   734  0337  1283               	bcf	3,5	;RP0=0, select bank0
   735  0338  1303               	bcf	3,6	;RP1=0, select bank0
   736  0339  00BE               	movwf	??_main+2
   737  033A  3025               	movlw	37
   738  033B  00BD               	movwf	??_main+1
   739  033C  3031               	movlw	49
   740  033D  00BC               	movwf	??_main
   741  033E                     u1517:
   742  033E  0BBC               	decfsz	??_main,f
   743  033F  2B3E               	goto	u1517
   744  0340  0BBD               	decfsz	??_main+1,f
   745  0341  2B3E               	goto	u1517
   746  0342  0BBE               	decfsz	??_main+2,f
   747  0343  2B3E               	goto	u1517
   748  0344                     l1767:
   749                           
   750                           ;lab3.c: 87:     Lcd_Clear();
   751  0344  120A  118A  269A  120A  118A  	fcall	_Lcd_Clear
   752  0349                     l1769:
   753                           
   754                           ;lab3.c: 89:      Lcd_Set_Cursor(1,1);
   755  0349  01F6               	clrf	Lcd_Set_Cursor@b
   756  034A  0AF6               	incf	Lcd_Set_Cursor@b,f
   757  034B  3001               	movlw	1
   758  034C  120A  118A  25BE  120A  118A  	fcall	_Lcd_Set_Cursor
   759  0351                     l1771:
   760                           
   761                           ;lab3.c: 90:      Lcd_Write_String("Volt1");
   762  0351  3021               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   763  0352  120A  118A  25E4  120A  118A  	fcall	_Lcd_Write_String
   764  0357                     l1773:
   765                           
   766                           ;lab3.c: 91:      Lcd_Set_Cursor(1,7);
   767  0357  3007               	movlw	7
   768  0358  1283               	bcf	3,5	;RP0=0, select bank0
   769  0359  1303               	bcf	3,6	;RP1=0, select bank0
   770  035A  00BC               	movwf	??_main
   771  035B  083C               	movf	??_main,w
   772  035C  00F6               	movwf	Lcd_Set_Cursor@b
   773  035D  3001               	movlw	1
   774  035E  120A  118A  25BE  120A  118A  	fcall	_Lcd_Set_Cursor
   775  0363                     l1775:
   776                           
   777                           ;lab3.c: 92:      Lcd_Write_String("Volt2");
   778  0363  3027               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   779  0364  120A  118A  25E4  120A  118A  	fcall	_Lcd_Write_String
   780  0369                     l1777:
   781                           
   782                           ;lab3.c: 93:      Lcd_Set_Cursor(1,13);
   783  0369  300D               	movlw	13
   784  036A  1283               	bcf	3,5	;RP0=0, select bank0
   785  036B  1303               	bcf	3,6	;RP1=0, select bank0
   786  036C  00BC               	movwf	??_main
   787  036D  083C               	movf	??_main,w
   788  036E  00F6               	movwf	Lcd_Set_Cursor@b
   789  036F  3001               	movlw	1
   790  0370  120A  118A  25BE  120A  118A  	fcall	_Lcd_Set_Cursor
   791  0375                     l1779:
   792                           
   793                           ;lab3.c: 94:      Lcd_Write_String("Contador");
   794  0375  3018               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   795  0376  120A  118A  25E4  120A  118A  	fcall	_Lcd_Write_String
   796  037B                     l1781:
   797                           
   798                           ;lab3.c: 95:      USART_config();
   799  037B  120A  118A  26C6  120A  118A  	fcall	_USART_config
   800  0380                     l1783:
   801                           
   802                           ;lab3.c: 99:         conversion(1);
   803  0380  3001               	movlw	1
   804  0381  120A  118A  201F  120A  118A  	fcall	_conversion
   805  0386                     l1785:
   806                           
   807                           ;lab3.c: 100:         conversion(0);
   808  0386  3000               	movlw	0
   809  0387  120A  118A  201F  120A  118A  	fcall	_conversion
   810  038C  2B80               	goto	l1783
   811  038D  120A  118A  280C   	ljmp	start
   812  0390                     __end_of_main:
   813                           
   814                           	psect	text1
   815  001F                     __ptext1:	
   816 ;; *************** function _conversion *****************
   817 ;; Defined at:
   818 ;;		line 128 in file "lab3.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  puertoANL       1    wreg     unsigned char 
   821 ;; Auto vars:     Size  Location     Type
   822 ;;  puertoANL       1   27[BANK0 ] unsigned char 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2, status,0, pclath, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   832 ;;      Params:         0       0       0       0       0
   833 ;;      Locals:         0       1       0       0       0
   834 ;;      Temps:          0       3       0       0       0
   835 ;;      Totals:         0       4       0       0       0
   836 ;;Total ram usage:        4 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; Hardware stack levels required when called:    5
   839 ;; This function calls:
   840 ;;		_Conversion1
   841 ;;		_Conversion2
   842 ;;		_Lcd_Set_Cursor
   843 ;;		_Lcd_Write_Char
   844 ;;		___awdiv
   845 ;;		___awmod
   846 ;;		___wmul
   847 ;;		___xxtofl
   848 ;;		_contador_lcd
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _conversion
   856  001F                     _conversion:
   857                           
   858                           ;incstack = 0
   859                           ; Regs used in _conversion: [wreg+status,2+status,0+pclath+cstack]
   860                           ;conversion@puertoANL stored from wreg
   861  001F  1283               	bcf	3,5	;RP0=0, select bank0
   862  0020  1303               	bcf	3,6	;RP1=0, select bank0
   863  0021  00BB               	movwf	conversion@puertoANL
   864  0022                     l1737:
   865                           
   866                           ;lab3.c: 130:     ADCON0bits.CHS = puertoANL;
   867  0022  083B               	movf	conversion@puertoANL,w
   868  0023  00B8               	movwf	??_conversion
   869  0024  0DB8               	rlf	??_conversion,f
   870  0025  0DB8               	rlf	??_conversion,f
   871  0026  081F               	movf	31,w	;volatile
   872  0027  0638               	xorwf	??_conversion,w
   873  0028  39C3               	andlw	-61
   874  0029  0638               	xorwf	??_conversion,w
   875  002A  009F               	movwf	31	;volatile
   876  002B                     l1739:
   877                           
   878                           ;lab3.c: 131:     if (ADCON0bits.GO_DONE==0 && puertoANL ==0){
   879  002B  189F               	btfsc	31,1	;volatile
   880  002C  282E               	goto	u1471
   881  002D  282F               	goto	u1470
   882  002E                     u1471:
   883  002E  287F               	goto	l1747
   884  002F                     u1470:
   885  002F                     l1741:
   886  002F  083B               	movf	conversion@puertoANL,w
   887  0030  1D03               	btfss	3,2
   888  0031  2833               	goto	u1481
   889  0032  2834               	goto	u1480
   890  0033                     u1481:
   891  0033  287F               	goto	l1747
   892  0034                     u1480:
   893  0034                     l1743:
   894                           
   895                           ;lab3.c: 133:         vpot1 = (5*c)/255;
   896  0034  3005               	movlw	5
   897  0035  00F5               	movwf	___wmul@multiplicand
   898  0036  3000               	movlw	0
   899  0037  00F6               	movwf	___wmul@multiplicand+1
   900  0038  0859               	movf	_c,w
   901  0039  00B8               	movwf	??_conversion
   902  003A  01B9               	clrf	??_conversion+1
   903  003B  0838               	movf	??_conversion,w
   904  003C  00F3               	movwf	___wmul@multiplier
   905  003D  0839               	movf	??_conversion+1,w
   906  003E  00F4               	movwf	___wmul@multiplier+1
   907  003F  120A  118A  2593  120A  118A  	fcall	___wmul
   908  0044  0874               	movf	?___wmul+1,w
   909  0045  1283               	bcf	3,5	;RP0=0, select bank0
   910  0046  1303               	bcf	3,6	;RP1=0, select bank0
   911  0047  00A5               	movwf	___awdiv@dividend+1
   912  0048  0873               	movf	?___wmul,w
   913  0049  00A4               	movwf	___awdiv@dividend
   914  004A  30FF               	movlw	255
   915  004B  00A2               	movwf	___awdiv@divisor
   916  004C  3000               	movlw	0
   917  004D  00A3               	movwf	___awdiv@divisor+1
   918  004E  120A  118A  2390  120A  118A  	fcall	___awdiv
   919  0053  1283               	bcf	3,5	;RP0=0, select bank0
   920  0054  1303               	bcf	3,6	;RP1=0, select bank0
   921  0055  0822               	movf	?___awdiv,w
   922  0056  00AA               	movwf	___xxtofl@val
   923  0057  0823               	movf	?___awdiv+1,w
   924  0058  00AB               	movwf	___xxtofl@val+1
   925  0059  3000               	movlw	0
   926  005A  1BAB               	btfsc	___xxtofl@val+1,7
   927  005B  30FF               	movlw	255
   928  005C  00AC               	movwf	___xxtofl@val+2
   929  005D  00AD               	movwf	___xxtofl@val+3
   930  005E  3001               	movlw	1
   931  005F  120A  118A  213B  120A  118A  	fcall	___xxtofl
   932  0064  1283               	bcf	3,5	;RP0=0, select bank0
   933  0065  1303               	bcf	3,6	;RP1=0, select bank0
   934  0066  082D               	movf	?___xxtofl+3,w
   935  0067  00C6               	movwf	_vpot1+3
   936  0068  082C               	movf	?___xxtofl+2,w
   937  0069  00C5               	movwf	_vpot1+2
   938  006A  082B               	movf	?___xxtofl+1,w
   939  006B  00C4               	movwf	_vpot1+1
   940  006C  082A               	movf	?___xxtofl,w
   941  006D  00C3               	movwf	_vpot1
   942                           
   943                           ;lab3.c: 135:         Lcd_Set_Cursor(2,1);
   944  006E  01F6               	clrf	Lcd_Set_Cursor@b
   945  006F  0AF6               	incf	Lcd_Set_Cursor@b,f
   946  0070  3002               	movlw	2
   947  0071  120A  118A  25BE  120A  118A  	fcall	_Lcd_Set_Cursor
   948                           
   949                           ;lab3.c: 136:         Conversion1 ();
   950  0076  120A  118A  2286  120A  118A  	fcall	_Conversion1
   951  007B                     l1745:
   952                           
   953                           ;lab3.c: 137:         ADCON0bits.GO_DONE=1;
   954  007B  1283               	bcf	3,5	;RP0=0, select bank0
   955  007C  1303               	bcf	3,6	;RP1=0, select bank0
   956  007D  149F               	bsf	31,1	;volatile
   957                           
   958                           ;lab3.c: 138:     }
   959  007E  293A               	goto	l176
   960  007F                     l1747:
   961                           
   962                           ;lab3.c: 140:         vpot2 = (5*b)/255;
   963  007F  3005               	movlw	5
   964  0080  00F5               	movwf	___wmul@multiplicand
   965  0081  3000               	movlw	0
   966  0082  00F6               	movwf	___wmul@multiplicand+1
   967  0083  0858               	movf	_b,w
   968  0084  00B8               	movwf	??_conversion
   969  0085  01B9               	clrf	??_conversion+1
   970  0086  0838               	movf	??_conversion,w
   971  0087  00F3               	movwf	___wmul@multiplier
   972  0088  0839               	movf	??_conversion+1,w
   973  0089  00F4               	movwf	___wmul@multiplier+1
   974  008A  120A  118A  2593  120A  118A  	fcall	___wmul
   975  008F  0874               	movf	?___wmul+1,w
   976  0090  1283               	bcf	3,5	;RP0=0, select bank0
   977  0091  1303               	bcf	3,6	;RP1=0, select bank0
   978  0092  00A5               	movwf	___awdiv@dividend+1
   979  0093  0873               	movf	?___wmul,w
   980  0094  00A4               	movwf	___awdiv@dividend
   981  0095  30FF               	movlw	255
   982  0096  00A2               	movwf	___awdiv@divisor
   983  0097  3000               	movlw	0
   984  0098  00A3               	movwf	___awdiv@divisor+1
   985  0099  120A  118A  2390  120A  118A  	fcall	___awdiv
   986  009E  1283               	bcf	3,5	;RP0=0, select bank0
   987  009F  1303               	bcf	3,6	;RP1=0, select bank0
   988  00A0  0822               	movf	?___awdiv,w
   989  00A1  00AA               	movwf	___xxtofl@val
   990  00A2  0823               	movf	?___awdiv+1,w
   991  00A3  00AB               	movwf	___xxtofl@val+1
   992  00A4  3000               	movlw	0
   993  00A5  1BAB               	btfsc	___xxtofl@val+1,7
   994  00A6  30FF               	movlw	255
   995  00A7  00AC               	movwf	___xxtofl@val+2
   996  00A8  00AD               	movwf	___xxtofl@val+3
   997  00A9  3001               	movlw	1
   998  00AA  120A  118A  213B  120A  118A  	fcall	___xxtofl
   999  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1000  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1001  00B1  082D               	movf	?___xxtofl+3,w
  1002  00B2  00C2               	movwf	_vpot2+3
  1003  00B3  082C               	movf	?___xxtofl+2,w
  1004  00B4  00C1               	movwf	_vpot2+2
  1005  00B5  082B               	movf	?___xxtofl+1,w
  1006  00B6  00C0               	movwf	_vpot2+1
  1007  00B7  082A               	movf	?___xxtofl,w
  1008  00B8  00BF               	movwf	_vpot2
  1009                           
  1010                           ;lab3.c: 142:         Lcd_Set_Cursor(2,7);
  1011  00B9  3007               	movlw	7
  1012  00BA  00B8               	movwf	??_conversion
  1013  00BB  0838               	movf	??_conversion,w
  1014  00BC  00F6               	movwf	Lcd_Set_Cursor@b
  1015  00BD  3002               	movlw	2
  1016  00BE  120A  118A  25BE  120A  118A  	fcall	_Lcd_Set_Cursor
  1017                           
  1018                           ;lab3.c: 143:         Conversion2();
  1019  00C3  120A  118A  21F7  120A  118A  	fcall	_Conversion2
  1020  00C8                     l1749:
  1021                           
  1022                           ;lab3.c: 144:         ADCON0bits.GO_DONE=1;
  1023  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1024  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1025  00CA  149F               	bsf	31,1	;volatile
  1026                           
  1027                           ;lab3.c: 146:         contador_lcd();
  1028  00CB  120A  118A  262E  120A  118A  	fcall	_contador_lcd
  1029  00D0                     l1751:
  1030                           
  1031                           ;lab3.c: 148:     if (contador < 10)
  1032  00D0  300A               	movlw	10
  1033  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1034  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1035  00D3  024C               	subwf	_contador,w
  1036  00D4  1803               	skipnc
  1037  00D5  28D7               	goto	u1491
  1038  00D6  28D8               	goto	u1490
  1039  00D7                     u1491:
  1040  00D7  28EC               	goto	l1755
  1041  00D8                     u1490:
  1042  00D8                     l1753:
  1043                           
  1044                           ;lab3.c: 149:     {;lab3.c: 150:         Lcd_Set_Cursor(2,14);
  1045  00D8  300E               	movlw	14
  1046  00D9  00B8               	movwf	??_conversion
  1047  00DA  0838               	movf	??_conversion,w
  1048  00DB  00F6               	movwf	Lcd_Set_Cursor@b
  1049  00DC  3002               	movlw	2
  1050  00DD  120A  118A  25BE  120A  118A  	fcall	_Lcd_Set_Cursor
  1051                           
  1052                           ;lab3.c: 151:         Lcd_Write_Char(contador + 48);
  1053  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1054  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1055  00E4  084C               	movf	_contador,w
  1056  00E5  3E30               	addlw	48
  1057  00E6  120A  118A  268A  120A  118A  	fcall	_Lcd_Write_Char
  1058                           
  1059                           ;lab3.c: 152:     }
  1060  00EB  293A               	goto	l176
  1061  00EC                     l1755:
  1062  00EC  300A               	movlw	10
  1063  00ED  024C               	subwf	_contador,w
  1064  00EE  1C03               	skipc
  1065  00EF  28F1               	goto	u1501
  1066  00F0  28F2               	goto	u1500
  1067  00F1                     u1501:
  1068  00F1  293A               	goto	l176
  1069  00F2                     u1500:
  1070  00F2                     l1757:
  1071                           
  1072                           ;lab3.c: 154:     {;lab3.c: 155:         w1 = contador/10;
  1073  00F2  300A               	movlw	10
  1074  00F3  00A2               	movwf	___awdiv@divisor
  1075  00F4  3000               	movlw	0
  1076  00F5  00A3               	movwf	___awdiv@divisor+1
  1077  00F6  084C               	movf	_contador,w
  1078  00F7  00B8               	movwf	??_conversion
  1079  00F8  01B9               	clrf	??_conversion+1
  1080  00F9  0838               	movf	??_conversion,w
  1081  00FA  00A4               	movwf	___awdiv@dividend
  1082  00FB  0839               	movf	??_conversion+1,w
  1083  00FC  00A5               	movwf	___awdiv@dividend+1
  1084  00FD  120A  118A  2390  120A  118A  	fcall	___awdiv
  1085  0102  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0103  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0104  0822               	movf	?___awdiv,w
  1088  0105  00BA               	movwf	??_conversion+2
  1089  0106  083A               	movf	??_conversion+2,w
  1090  0107  00C9               	movwf	_w1
  1091                           
  1092                           ;lab3.c: 156:         w2 = contador % 10;
  1093  0108  300A               	movlw	10
  1094  0109  00F3               	movwf	___awmod@divisor
  1095  010A  3000               	movlw	0
  1096  010B  00F4               	movwf	___awmod@divisor+1
  1097  010C  084C               	movf	_contador,w
  1098  010D  00B8               	movwf	??_conversion
  1099  010E  01B9               	clrf	??_conversion+1
  1100  010F  0838               	movf	??_conversion,w
  1101  0110  00F5               	movwf	___awmod@dividend
  1102  0111  0839               	movf	??_conversion+1,w
  1103  0112  00F6               	movwf	___awmod@dividend+1
  1104  0113  120A  118A  23F9  120A  118A  	fcall	___awmod
  1105  0118  0873               	movf	?___awmod,w
  1106  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1107  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1108  011B  00BA               	movwf	??_conversion+2
  1109  011C  083A               	movf	??_conversion+2,w
  1110  011D  00C8               	movwf	_w2
  1111                           
  1112                           ;lab3.c: 157:         Lcd_Set_Cursor(2,13);
  1113  011E  300D               	movlw	13
  1114  011F  00B8               	movwf	??_conversion
  1115  0120  0838               	movf	??_conversion,w
  1116  0121  00F6               	movwf	Lcd_Set_Cursor@b
  1117  0122  3002               	movlw	2
  1118  0123  120A  118A  25BE  120A  118A  	fcall	_Lcd_Set_Cursor
  1119                           
  1120                           ;lab3.c: 158:         Lcd_Write_Char(w1+48);
  1121  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1122  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1123  012A  0849               	movf	_w1,w
  1124  012B  3E30               	addlw	48
  1125  012C  120A  118A  268A  120A  118A  	fcall	_Lcd_Write_Char
  1126                           
  1127                           ;lab3.c: 159:         Lcd_Write_Char(w2+48);
  1128  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0133  0848               	movf	_w2,w
  1131  0134  3E30               	addlw	48
  1132  0135  120A  118A  268A  120A  118A  	fcall	_Lcd_Write_Char
  1133  013A                     l176:
  1134  013A  0008               	return
  1135  013B                     __end_of_conversion:
  1136                           
  1137                           	psect	text2
  1138  062E                     __ptext2:	
  1139 ;; *************** function _contador_lcd *****************
  1140 ;; Defined at:
  1141 ;;		line 255 in file "lab3.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, status,2, status,0
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1155 ;;      Params:         0       0       0       0       0
  1156 ;;      Locals:         0       0       0       0       0
  1157 ;;      Temps:          1       0       0       0       0
  1158 ;;      Totals:         1       0       0       0       0
  1159 ;;Total ram usage:        1 bytes
  1160 ;; Hardware stack levels used:    1
  1161 ;; Hardware stack levels required when called:    2
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_conversion
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           
  1170                           ;psect for function _contador_lcd
  1171  062E                     _contador_lcd:
  1172  062E                     l1641:	
  1173                           ;incstack = 0
  1174                           ; Regs used in _contador_lcd: [wreg+status,2+status,0]
  1175                           
  1176                           
  1177                           ;lab3.c: 257:     if (revisa == '+')
  1178  062E  302B               	movlw	43
  1179  062F  1283               	bcf	3,5	;RP0=0, select bank0
  1180  0630  1303               	bcf	3,6	;RP1=0, select bank0
  1181  0631  064B               	xorwf	_revisa,w
  1182  0632  1D03               	btfss	3,2
  1183  0633  2E35               	goto	u1261
  1184  0634  2E36               	goto	u1260
  1185  0635                     u1261:
  1186  0635  2E3D               	goto	l1647
  1187  0636                     u1260:
  1188  0636                     l1643:
  1189                           
  1190                           ;lab3.c: 258:     {;lab3.c: 259:         contador = contador + 1;
  1191  0636  084C               	movf	_contador,w
  1192  0637  3E01               	addlw	1
  1193  0638  00F3               	movwf	??_contador_lcd
  1194  0639  0873               	movf	??_contador_lcd,w
  1195  063A  00CC               	movwf	_contador
  1196  063B                     l1645:
  1197                           
  1198                           ;lab3.c: 260:         revisa = 0;
  1199  063B  01CB               	clrf	_revisa
  1200                           
  1201                           ;lab3.c: 261:     }
  1202  063C  2E49               	goto	l199
  1203  063D                     l1647:
  1204  063D  302D               	movlw	45
  1205  063E  064B               	xorwf	_revisa,w
  1206  063F  1D03               	btfss	3,2
  1207  0640  2E42               	goto	u1271
  1208  0641  2E43               	goto	u1270
  1209  0642                     u1271:
  1210  0642  2E49               	goto	l199
  1211  0643                     u1270:
  1212  0643                     l1649:
  1213                           
  1214                           ;lab3.c: 265:        {;lab3.c: 266:         contador = contador - 1;
  1215  0643  084C               	movf	_contador,w
  1216  0644  3EFF               	addlw	255
  1217  0645  00F3               	movwf	??_contador_lcd
  1218  0646  0873               	movf	??_contador_lcd,w
  1219  0647  00CC               	movwf	_contador
  1220  0648  2E3B               	goto	l1645
  1221  0649                     l199:
  1222  0649  0008               	return
  1223  064A                     __end_of_contador_lcd:
  1224                           
  1225                           	psect	text3
  1226  013B                     __ptext3:	
  1227 ;; *************** function ___xxtofl *****************
  1228 ;; Defined at:
  1229 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  sign            1    wreg     unsigned char 
  1232 ;;  val             4   10[BANK0 ] long 
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  sign            1   18[BANK0 ] unsigned char 
  1235 ;;  arg             4   20[BANK0 ] unsigned long 
  1236 ;;  exp             1   19[BANK0 ] unsigned char 
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  4   10[BANK0 ] unsigned char 
  1239 ;; Registers used:
  1240 ;;		wreg, status,2, status,0
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1246 ;;      Params:         0       4       0       0       0
  1247 ;;      Locals:         0       6       0       0       0
  1248 ;;      Temps:          0       4       0       0       0
  1249 ;;      Totals:         0      14       0       0       0
  1250 ;;Total ram usage:       14 bytes
  1251 ;; Hardware stack levels used:    1
  1252 ;; Hardware stack levels required when called:    2
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_conversion
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           
  1261                           ;psect for function ___xxtofl
  1262  013B                     ___xxtofl:
  1263                           
  1264                           ;incstack = 0
  1265                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1266                           ;___xxtofl@sign stored from wreg
  1267  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1268  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1269  013D  00B2               	movwf	___xxtofl@sign
  1270  013E                     l1667:
  1271  013E  0832               	movf	___xxtofl@sign,w
  1272  013F  1903               	btfsc	3,2
  1273  0140  2942               	goto	u1321
  1274  0141  2943               	goto	u1320
  1275  0142                     u1321:
  1276  0142  2957               	goto	l1673
  1277  0143                     u1320:
  1278  0143                     l1669:
  1279  0143  1FAD               	btfss	___xxtofl@val+3,7
  1280  0144  2946               	goto	u1331
  1281  0145  2947               	goto	u1330
  1282  0146                     u1331:
  1283  0146  2957               	goto	l1673
  1284  0147                     u1330:
  1285  0147                     l1671:
  1286  0147  092A               	comf	___xxtofl@val,w
  1287  0148  00B4               	movwf	___xxtofl@arg
  1288  0149  092B               	comf	___xxtofl@val+1,w
  1289  014A  00B5               	movwf	___xxtofl@arg+1
  1290  014B  092C               	comf	___xxtofl@val+2,w
  1291  014C  00B6               	movwf	___xxtofl@arg+2
  1292  014D  092D               	comf	___xxtofl@val+3,w
  1293  014E  00B7               	movwf	___xxtofl@arg+3
  1294  014F  0AB4               	incf	___xxtofl@arg,f
  1295  0150  1903               	skipnz
  1296  0151  0AB5               	incf	___xxtofl@arg+1,f
  1297  0152  1903               	skipnz
  1298  0153  0AB6               	incf	___xxtofl@arg+2,f
  1299  0154  1903               	skipnz
  1300  0155  0AB7               	incf	___xxtofl@arg+3,f
  1301  0156  295F               	goto	l718
  1302  0157                     l1673:
  1303  0157  082D               	movf	___xxtofl@val+3,w
  1304  0158  00B7               	movwf	___xxtofl@arg+3
  1305  0159  082C               	movf	___xxtofl@val+2,w
  1306  015A  00B6               	movwf	___xxtofl@arg+2
  1307  015B  082B               	movf	___xxtofl@val+1,w
  1308  015C  00B5               	movwf	___xxtofl@arg+1
  1309  015D  082A               	movf	___xxtofl@val,w
  1310  015E  00B4               	movwf	___xxtofl@arg
  1311  015F                     l718:
  1312  015F  082D               	movf	___xxtofl@val+3,w
  1313  0160  042C               	iorwf	___xxtofl@val+2,w
  1314  0161  042B               	iorwf	___xxtofl@val+1,w
  1315  0162  042A               	iorwf	___xxtofl@val,w
  1316  0163  1D03               	skipz
  1317  0164  2966               	goto	u1341
  1318  0165  2967               	goto	u1340
  1319  0166                     u1341:
  1320  0166  2970               	goto	l1679
  1321  0167                     u1340:
  1322  0167                     l1675:
  1323  0167  3000               	movlw	0
  1324  0168  00AD               	movwf	?___xxtofl+3
  1325  0169  3000               	movlw	0
  1326  016A  00AC               	movwf	?___xxtofl+2
  1327  016B  3000               	movlw	0
  1328  016C  00AB               	movwf	?___xxtofl+1
  1329  016D  3000               	movlw	0
  1330  016E  00AA               	movwf	?___xxtofl
  1331  016F  29F6               	goto	l720
  1332  0170                     l1679:
  1333  0170  3096               	movlw	150
  1334  0171  00AE               	movwf	??___xxtofl
  1335  0172  082E               	movf	??___xxtofl,w
  1336  0173  00B3               	movwf	___xxtofl@exp
  1337  0174  2982               	goto	l1683
  1338  0175                     l1681:
  1339  0175  3001               	movlw	1
  1340  0176  00AE               	movwf	??___xxtofl
  1341  0177  082E               	movf	??___xxtofl,w
  1342  0178  07B3               	addwf	___xxtofl@exp,f
  1343  0179  3001               	movlw	1
  1344  017A                     u1355:
  1345  017A  1003               	clrc
  1346  017B  0CB7               	rrf	___xxtofl@arg+3,f
  1347  017C  0CB6               	rrf	___xxtofl@arg+2,f
  1348  017D  0CB5               	rrf	___xxtofl@arg+1,f
  1349  017E  0CB4               	rrf	___xxtofl@arg,f
  1350  017F  3EFF               	addlw	-1
  1351  0180  1D03               	skipz
  1352  0181  297A               	goto	u1355
  1353  0182                     l1683:
  1354  0182  30FE               	movlw	254
  1355  0183  0537               	andwf	___xxtofl@arg+3,w
  1356  0184  1D03               	btfss	3,2
  1357  0185  2987               	goto	u1361
  1358  0186  2988               	goto	u1360
  1359  0187                     u1361:
  1360  0187  2975               	goto	l1681
  1361  0188                     u1360:
  1362  0188  29A4               	goto	l724
  1363  0189                     l1685:
  1364  0189  3001               	movlw	1
  1365  018A  00AE               	movwf	??___xxtofl
  1366  018B  082E               	movf	??___xxtofl,w
  1367  018C  07B3               	addwf	___xxtofl@exp,f
  1368  018D                     l1687:
  1369  018D  3001               	movlw	1
  1370  018E  07B4               	addwf	___xxtofl@arg,f
  1371  018F  3000               	movlw	0
  1372  0190  1803               	skipnc
  1373  0191  3001               	movlw	1
  1374  0192  07B5               	addwf	___xxtofl@arg+1,f
  1375  0193  3000               	movlw	0
  1376  0194  1803               	skipnc
  1377  0195  3001               	movlw	1
  1378  0196  07B6               	addwf	___xxtofl@arg+2,f
  1379  0197  3000               	movlw	0
  1380  0198  1803               	skipnc
  1381  0199  3001               	movlw	1
  1382  019A  07B7               	addwf	___xxtofl@arg+3,f
  1383  019B                     l1689:
  1384  019B  3001               	movlw	1
  1385  019C                     u1375:
  1386  019C  1003               	clrc
  1387  019D  0CB7               	rrf	___xxtofl@arg+3,f
  1388  019E  0CB6               	rrf	___xxtofl@arg+2,f
  1389  019F  0CB5               	rrf	___xxtofl@arg+1,f
  1390  01A0  0CB4               	rrf	___xxtofl@arg,f
  1391  01A1  3EFF               	addlw	-1
  1392  01A2  1D03               	skipz
  1393  01A3  299C               	goto	u1375
  1394  01A4                     l724:
  1395  01A4  30FF               	movlw	255
  1396  01A5  0537               	andwf	___xxtofl@arg+3,w
  1397  01A6  1D03               	btfss	3,2
  1398  01A7  29A9               	goto	u1381
  1399  01A8  29AA               	goto	u1380
  1400  01A9                     u1381:
  1401  01A9  2989               	goto	l1685
  1402  01AA                     u1380:
  1403  01AA  29B6               	goto	l1693
  1404  01AB                     l1691:
  1405  01AB  3001               	movlw	1
  1406  01AC  02B3               	subwf	___xxtofl@exp,f
  1407  01AD  3001               	movlw	1
  1408  01AE  00AE               	movwf	??___xxtofl
  1409  01AF                     u1395:
  1410  01AF  1003               	clrc
  1411  01B0  0DB4               	rlf	___xxtofl@arg,f
  1412  01B1  0DB5               	rlf	___xxtofl@arg+1,f
  1413  01B2  0DB6               	rlf	___xxtofl@arg+2,f
  1414  01B3  0DB7               	rlf	___xxtofl@arg+3,f
  1415  01B4  0BAE               	decfsz	??___xxtofl,f
  1416  01B5  29AF               	goto	u1395
  1417  01B6                     l1693:
  1418  01B6  1BB6               	btfsc	___xxtofl@arg+2,7
  1419  01B7  29B9               	goto	u1401
  1420  01B8  29BA               	goto	u1400
  1421  01B9                     u1401:
  1422  01B9  29C0               	goto	l731
  1423  01BA                     u1400:
  1424  01BA                     l1695:
  1425  01BA  3002               	movlw	2
  1426  01BB  0233               	subwf	___xxtofl@exp,w
  1427  01BC  1803               	skipnc
  1428  01BD  29BF               	goto	u1411
  1429  01BE  29C0               	goto	u1410
  1430  01BF                     u1411:
  1431  01BF  29AB               	goto	l1691
  1432  01C0                     u1410:
  1433  01C0                     l731:
  1434  01C0  1833               	btfsc	___xxtofl@exp,0
  1435  01C1  29C3               	goto	u1421
  1436  01C2  29C4               	goto	u1420
  1437  01C3                     u1421:
  1438  01C3  29CC               	goto	l732
  1439  01C4                     u1420:
  1440  01C4                     l1697:
  1441  01C4  30FF               	movlw	255
  1442  01C5  05B4               	andwf	___xxtofl@arg,f
  1443  01C6  30FF               	movlw	255
  1444  01C7  05B5               	andwf	___xxtofl@arg+1,f
  1445  01C8  307F               	movlw	127
  1446  01C9  05B6               	andwf	___xxtofl@arg+2,f
  1447  01CA  30FF               	movlw	255
  1448  01CB  05B7               	andwf	___xxtofl@arg+3,f
  1449  01CC                     l732:
  1450  01CC  1003               	clrc
  1451  01CD  0CB3               	rrf	___xxtofl@exp,f
  1452  01CE                     l1699:
  1453  01CE  0833               	movf	___xxtofl@exp,w
  1454  01CF  00AE               	movwf	??___xxtofl
  1455  01D0  01AF               	clrf	??___xxtofl+1
  1456  01D1  01B0               	clrf	??___xxtofl+2
  1457  01D2  01B1               	clrf	??___xxtofl+3
  1458  01D3  3018               	movlw	24
  1459  01D4                     u1435:
  1460  01D4  1003               	clrc
  1461  01D5  0DAE               	rlf	??___xxtofl,f
  1462  01D6  0DAF               	rlf	??___xxtofl+1,f
  1463  01D7  0DB0               	rlf	??___xxtofl+2,f
  1464  01D8  0DB1               	rlf	??___xxtofl+3,f
  1465  01D9                     u1430:
  1466  01D9  3EFF               	addlw	-1
  1467  01DA  1D03               	skipz
  1468  01DB  29D4               	goto	u1435
  1469  01DC  082E               	movf	??___xxtofl,w
  1470  01DD  04B4               	iorwf	___xxtofl@arg,f
  1471  01DE  082F               	movf	??___xxtofl+1,w
  1472  01DF  04B5               	iorwf	___xxtofl@arg+1,f
  1473  01E0  0830               	movf	??___xxtofl+2,w
  1474  01E1  04B6               	iorwf	___xxtofl@arg+2,f
  1475  01E2  0831               	movf	??___xxtofl+3,w
  1476  01E3  04B7               	iorwf	___xxtofl@arg+3,f
  1477  01E4                     l1701:
  1478  01E4  0832               	movf	___xxtofl@sign,w
  1479  01E5  1903               	btfsc	3,2
  1480  01E6  29E8               	goto	u1441
  1481  01E7  29E9               	goto	u1440
  1482  01E8                     u1441:
  1483  01E8  29EE               	goto	l1707
  1484  01E9                     u1440:
  1485  01E9                     l1703:
  1486  01E9  1FAD               	btfss	___xxtofl@val+3,7
  1487  01EA  29EC               	goto	u1451
  1488  01EB  29ED               	goto	u1450
  1489  01EC                     u1451:
  1490  01EC  29EE               	goto	l1707
  1491  01ED                     u1450:
  1492  01ED                     l1705:
  1493  01ED  17B7               	bsf	___xxtofl@arg+3,7
  1494  01EE                     l1707:
  1495  01EE  0837               	movf	___xxtofl@arg+3,w
  1496  01EF  00AD               	movwf	?___xxtofl+3
  1497  01F0  0836               	movf	___xxtofl@arg+2,w
  1498  01F1  00AC               	movwf	?___xxtofl+2
  1499  01F2  0835               	movf	___xxtofl@arg+1,w
  1500  01F3  00AB               	movwf	?___xxtofl+1
  1501  01F4  0834               	movf	___xxtofl@arg,w
  1502  01F5  00AA               	movwf	?___xxtofl
  1503  01F6                     l720:
  1504  01F6  0008               	return
  1505  01F7                     __end_of___xxtofl:
  1506                           
  1507                           	psect	text4
  1508  0593                     __ptext4:	
  1509 ;; *************** function ___wmul *****************
  1510 ;; Defined at:
  1511 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  multiplier      2    3[COMMON] unsigned int 
  1514 ;;  multiplicand    2    5[COMMON] unsigned int 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  product         2    0[BANK0 ] unsigned int 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  2    3[COMMON] unsigned int 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         4       0       0       0       0
  1527 ;;      Locals:         0       2       0       0       0
  1528 ;;      Temps:          0       0       0       0       0
  1529 ;;      Totals:         4       2       0       0       0
  1530 ;;Total ram usage:        6 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    2
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_conversion
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function ___wmul
  1542  0593                     ___wmul:
  1543  0593                     l1653:	
  1544                           ;incstack = 0
  1545                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1546                           
  1547  0593  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0594  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0595  01A0               	clrf	___wmul@product
  1550  0596  01A1               	clrf	___wmul@product+1
  1551  0597                     l1655:
  1552  0597  1C73               	btfss	___wmul@multiplier,0
  1553  0598  2D9A               	goto	u1281
  1554  0599  2D9B               	goto	u1280
  1555  059A                     u1281:
  1556  059A  2DA3               	goto	l285
  1557  059B                     u1280:
  1558  059B                     l1657:
  1559  059B  0875               	movf	___wmul@multiplicand,w
  1560  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1561  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1562  059E  07A0               	addwf	___wmul@product,f
  1563  059F  1803               	skipnc
  1564  05A0  0AA1               	incf	___wmul@product+1,f
  1565  05A1  0876               	movf	___wmul@multiplicand+1,w
  1566  05A2  07A1               	addwf	___wmul@product+1,f
  1567  05A3                     l285:
  1568  05A3  3001               	movlw	1
  1569  05A4                     u1295:
  1570  05A4  1003               	clrc
  1571  05A5  0DF5               	rlf	___wmul@multiplicand,f
  1572  05A6  0DF6               	rlf	___wmul@multiplicand+1,f
  1573  05A7  3EFF               	addlw	-1
  1574  05A8  1D03               	skipz
  1575  05A9  2DA4               	goto	u1295
  1576  05AA                     l1659:
  1577  05AA  3001               	movlw	1
  1578  05AB                     u1305:
  1579  05AB  1003               	clrc
  1580  05AC  0CF4               	rrf	___wmul@multiplier+1,f
  1581  05AD  0CF3               	rrf	___wmul@multiplier,f
  1582  05AE  3EFF               	addlw	-1
  1583  05AF  1D03               	skipz
  1584  05B0  2DAB               	goto	u1305
  1585  05B1                     l1661:
  1586  05B1  0873               	movf	___wmul@multiplier,w
  1587  05B2  0474               	iorwf	___wmul@multiplier+1,w
  1588  05B3  1D03               	btfss	3,2
  1589  05B4  2DB6               	goto	u1311
  1590  05B5  2DB7               	goto	u1310
  1591  05B6                     u1311:
  1592  05B6  2D97               	goto	l1655
  1593  05B7                     u1310:
  1594  05B7                     l1663:
  1595  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  1596  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  1597  05B9  0821               	movf	___wmul@product+1,w
  1598  05BA  00F4               	movwf	?___wmul+1
  1599  05BB  0820               	movf	___wmul@product,w
  1600  05BC  00F3               	movwf	?___wmul
  1601  05BD                     l287:
  1602  05BD  0008               	return
  1603  05BE                     __end_of___wmul:
  1604                           
  1605                           	psect	text5
  1606  05BE                     __ptext5:	
  1607 ;; *************** function _Lcd_Set_Cursor *****************
  1608 ;; Defined at:
  1609 ;;		line 78 in file "./Libreria2.h"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  a               1    wreg     unsigned char 
  1612 ;;  b               1    6[COMMON] unsigned char 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  a               1    0[BANK0 ] unsigned char 
  1615 ;;  temp            1    1[BANK0 ] unsigned char 
  1616 ;;  y               1    0        unsigned char 
  1617 ;;  z               1    0        unsigned char 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0, pclath, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1627 ;;      Params:         1       0       0       0       0
  1628 ;;      Locals:         0       2       0       0       0
  1629 ;;      Temps:          1       0       0       0       0
  1630 ;;      Totals:         2       2       0       0       0
  1631 ;;Total ram usage:        4 bytes
  1632 ;; Hardware stack levels used:    1
  1633 ;; Hardware stack levels required when called:    3
  1634 ;; This function calls:
  1635 ;;		_Lcd_Cmd
  1636 ;; This function is called by:
  1637 ;;		_main
  1638 ;;		_conversion
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           
  1643                           ;psect for function _Lcd_Set_Cursor
  1644  05BE                     _Lcd_Set_Cursor:
  1645                           
  1646                           ;incstack = 0
  1647                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1648                           ;Lcd_Set_Cursor@a stored from wreg
  1649  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  1650  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  1651  05C0  00A0               	movwf	Lcd_Set_Cursor@a
  1652  05C1                     l1595:
  1653                           
  1654                           ;./Libreria2.h: 78:  };./Libreria2.h: 79:  else if(a == 2);./Libreria2.h: 80:  {;./Libre
      +                          ria2.h: 81:   temp = 0xC0 + b - 1;
  1655  05C1  0320               	decf	Lcd_Set_Cursor@a,w
  1656  05C2  1D03               	btfss	3,2
  1657  05C3  2DC5               	goto	u1241
  1658  05C4  2DC6               	goto	u1240
  1659  05C5                     u1241:
  1660  05C5  2DD2               	goto	l1601
  1661  05C6                     u1240:
  1662  05C6                     l1597:
  1663                           
  1664                           ;./Libreria2.h: 82: ;./Libreria2.h: 83: 
  1665  05C6  0876               	movf	Lcd_Set_Cursor@b,w
  1666  05C7  3E7F               	addlw	127
  1667  05C8  00F7               	movwf	??_Lcd_Set_Cursor
  1668  05C9  0877               	movf	??_Lcd_Set_Cursor,w
  1669  05CA  00A1               	movwf	Lcd_Set_Cursor@temp
  1670  05CB                     l1599:
  1671                           
  1672                           ;./Libreria2.h: 86:  }
  1673  05CB  0821               	movf	Lcd_Set_Cursor@temp,w
  1674  05CC  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  1675                           
  1676                           ;./Libreria2.h: 88: 
  1677  05D1  2DE3               	goto	l87
  1678  05D2                     l1601:
  1679  05D2  3002               	movlw	2
  1680  05D3  0620               	xorwf	Lcd_Set_Cursor@a,w
  1681  05D4  1D03               	btfss	3,2
  1682  05D5  2DD7               	goto	u1251
  1683  05D6  2DD8               	goto	u1250
  1684  05D7                     u1251:
  1685  05D7  2DE3               	goto	l87
  1686  05D8                     u1250:
  1687  05D8                     l1603:
  1688                           
  1689                           ;./Libreria2.h: 90:     PORTDbits.RD2 = 1;;./Libreria2.h: 91:     PORTB = a;
  1690  05D8  0876               	movf	Lcd_Set_Cursor@b,w
  1691  05D9  3EBF               	addlw	191
  1692  05DA  00F7               	movwf	??_Lcd_Set_Cursor
  1693  05DB  0877               	movf	??_Lcd_Set_Cursor,w
  1694  05DC  00A1               	movwf	Lcd_Set_Cursor@temp
  1695  05DD                     l1605:
  1696                           
  1697                           ;./Libreria2.h: 94:     PORTDbits.RD3=0;
  1698  05DD  0821               	movf	Lcd_Set_Cursor@temp,w
  1699  05DE  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  1700  05E3                     l87:
  1701  05E3  0008               	return
  1702  05E4                     __end_of_Lcd_Set_Cursor:
  1703                           
  1704                           	psect	text6
  1705  01F7                     __ptext6:	
  1706 ;; *************** function _Conversion2 *****************
  1707 ;; Defined at:
  1708 ;;		line 179 in file "lab3.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;		None
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;		None
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      void 
  1715 ;; Registers used:
  1716 ;;		wreg, status,2, status,0, pclath, cstack
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1722 ;;      Params:         0       0       0       0       0
  1723 ;;      Locals:         0       0       0       0       0
  1724 ;;      Temps:          0       3       0       0       0
  1725 ;;      Totals:         0       3       0       0       0
  1726 ;;Total ram usage:        3 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; Hardware stack levels required when called:    4
  1729 ;; This function calls:
  1730 ;;		_Lcd_Write_Char
  1731 ;;		___awdiv
  1732 ;;		___awmod
  1733 ;;		_display2
  1734 ;;		_display3
  1735 ;; This function is called by:
  1736 ;;		_conversion
  1737 ;; This function uses a non-reentrant model
  1738 ;;
  1739                           
  1740                           
  1741                           ;psect for function _Conversion2
  1742  01F7                     _Conversion2:
  1743  01F7                     l1623:	
  1744                           ;incstack = 0
  1745                           ; Regs used in _Conversion2: [wreg+status,2+status,0+pclath+cstack]
  1746                           
  1747                           
  1748                           ;lab3.c: 182:     enterob = (b*2)/ 100;
  1749  01F7  3064               	movlw	100
  1750  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1751  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1752  01FA  00A2               	movwf	___awdiv@divisor
  1753  01FB  3000               	movlw	0
  1754  01FC  00A3               	movwf	___awdiv@divisor+1
  1755  01FD  0858               	movf	_b,w
  1756  01FE  00AA               	movwf	??_Conversion2
  1757  01FF  01AB               	clrf	??_Conversion2+1
  1758  0200  1003               	clrc
  1759  0201  0D2A               	rlf	??_Conversion2,w
  1760  0202  00A4               	movwf	___awdiv@dividend
  1761  0203  0D2B               	rlf	??_Conversion2+1,w
  1762  0204  00A5               	movwf	___awdiv@dividend+1
  1763  0205  120A  118A  2390  120A  118A  	fcall	___awdiv
  1764  020A  1283               	bcf	3,5	;RP0=0, select bank0
  1765  020B  1303               	bcf	3,6	;RP1=0, select bank0
  1766  020C  0822               	movf	?___awdiv,w
  1767  020D  00AC               	movwf	??_Conversion2+2
  1768  020E  082C               	movf	??_Conversion2+2,w
  1769  020F  00F8               	movwf	_enterob
  1770                           
  1771                           ;lab3.c: 183:     decima1b = enterob%100;
  1772  0210  3064               	movlw	100
  1773  0211  00F3               	movwf	___awmod@divisor
  1774  0212  3000               	movlw	0
  1775  0213  00F4               	movwf	___awmod@divisor+1
  1776  0214  0878               	movf	_enterob,w
  1777  0215  00AA               	movwf	??_Conversion2
  1778  0216  01AB               	clrf	??_Conversion2+1
  1779  0217  082A               	movf	??_Conversion2,w
  1780  0218  00F5               	movwf	___awmod@dividend
  1781  0219  082B               	movf	??_Conversion2+1,w
  1782  021A  00F6               	movwf	___awmod@dividend+1
  1783  021B  120A  118A  23F9  120A  118A  	fcall	___awmod
  1784  0220  0873               	movf	?___awmod,w
  1785  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1786  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1787  0223  00AC               	movwf	??_Conversion2+2
  1788  0224  082C               	movf	??_Conversion2+2,w
  1789  0225  00D3               	movwf	_decima1b
  1790                           
  1791                           ;lab3.c: 184:     centena1b = decima1b /10;
  1792  0226  300A               	movlw	10
  1793  0227  00A2               	movwf	___awdiv@divisor
  1794  0228  3000               	movlw	0
  1795  0229  00A3               	movwf	___awdiv@divisor+1
  1796  022A  0853               	movf	_decima1b,w
  1797  022B  00AA               	movwf	??_Conversion2
  1798  022C  01AB               	clrf	??_Conversion2+1
  1799  022D  082A               	movf	??_Conversion2,w
  1800  022E  00A4               	movwf	___awdiv@dividend
  1801  022F  082B               	movf	??_Conversion2+1,w
  1802  0230  00A5               	movwf	___awdiv@dividend+1
  1803  0231  120A  118A  2390  120A  118A  	fcall	___awdiv
  1804  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1805  0237  1303               	bcf	3,6	;RP1=0, select bank0
  1806  0238  0822               	movf	?___awdiv,w
  1807  0239  00AC               	movwf	??_Conversion2+2
  1808  023A  082C               	movf	??_Conversion2+2,w
  1809  023B  00D2               	movwf	_centena1b
  1810                           
  1811                           ;lab3.c: 185:     decima2b = decima1b % 10;
  1812  023C  300A               	movlw	10
  1813  023D  00F3               	movwf	___awmod@divisor
  1814  023E  3000               	movlw	0
  1815  023F  00F4               	movwf	___awmod@divisor+1
  1816  0240  0853               	movf	_decima1b,w
  1817  0241  00AA               	movwf	??_Conversion2
  1818  0242  01AB               	clrf	??_Conversion2+1
  1819  0243  082A               	movf	??_Conversion2,w
  1820  0244  00F5               	movwf	___awmod@dividend
  1821  0245  082B               	movf	??_Conversion2+1,w
  1822  0246  00F6               	movwf	___awmod@dividend+1
  1823  0247  120A  118A  23F9  120A  118A  	fcall	___awmod
  1824  024C  0873               	movf	?___awmod,w
  1825  024D  1283               	bcf	3,5	;RP0=0, select bank0
  1826  024E  1303               	bcf	3,6	;RP1=0, select bank0
  1827  024F  00AC               	movwf	??_Conversion2+2
  1828  0250  082C               	movf	??_Conversion2+2,w
  1829  0251  00D1               	movwf	_decima2b
  1830  0252                     l1625:
  1831                           
  1832                           ;lab3.c: 186:     centena2b = decima2b/1;
  1833  0252  0851               	movf	_decima2b,w
  1834  0253  00AA               	movwf	??_Conversion2
  1835  0254  082A               	movf	??_Conversion2,w
  1836  0255  00D0               	movwf	_centena2b
  1837  0256                     l1627:
  1838                           
  1839                           ;lab3.c: 187:     Lcd_Write_Char(enterob+48);
  1840  0256  0878               	movf	_enterob,w
  1841  0257  3E30               	addlw	48
  1842  0258  120A  118A  268A  120A  118A  	fcall	_Lcd_Write_Char
  1843  025D                     l1629:
  1844                           
  1845                           ;lab3.c: 188:     Lcd_Write_Char(46);
  1846  025D  302E               	movlw	46
  1847  025E  120A  118A  268A  120A  118A  	fcall	_Lcd_Write_Char
  1848  0263                     l1631:
  1849                           
  1850                           ;lab3.c: 189:     Lcd_Write_Char(centena1b+48);
  1851  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0265  0852               	movf	_centena1b,w
  1854  0266  3E30               	addlw	48
  1855  0267  120A  118A  268A  120A  118A  	fcall	_Lcd_Write_Char
  1856  026C                     l1633:
  1857                           
  1858                           ;lab3.c: 190:     Lcd_Write_Char(centena2b+48);
  1859  026C  1283               	bcf	3,5	;RP0=0, select bank0
  1860  026D  1303               	bcf	3,6	;RP1=0, select bank0
  1861  026E  0850               	movf	_centena2b,w
  1862  026F  3E30               	addlw	48
  1863  0270  120A  118A  268A  120A  118A  	fcall	_Lcd_Write_Char
  1864  0275                     l1635:
  1865                           
  1866                           ;lab3.c: 191:     Lcd_Write_Char(86);
  1867  0275  3056               	movlw	86
  1868  0276  120A  118A  268A  120A  118A  	fcall	_Lcd_Write_Char
  1869  027B                     l1637:
  1870                           
  1871                           ;lab3.c: 192:     display2 ();
  1872  027B  120A  118A  24A3  120A  118A  	fcall	_display2
  1873  0280                     l1639:
  1874                           
  1875                           ;lab3.c: 193:     display3();
  1876  0280  120A  118A  2454  120A  118A  	fcall	_display3
  1877  0285                     l182:
  1878  0285  0008               	return
  1879  0286                     __end_of_Conversion2:
  1880                           
  1881                           	psect	text7
  1882  0454                     __ptext7:	
  1883 ;; *************** function _display3 *****************
  1884 ;; Defined at:
  1885 ;;		line 231 in file "lab3.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;		None
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  1    wreg      void 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0, pclath, cstack
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1899 ;;      Params:         0       0       0       0       0
  1900 ;;      Locals:         0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0
  1902 ;;      Totals:         0       0       0       0       0
  1903 ;;Total ram usage:        0 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:    3
  1906 ;; This function calls:
  1907 ;;		_dato_char
  1908 ;; This function is called by:
  1909 ;;		_Conversion2
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           
  1914                           ;psect for function _display3
  1915  0454                     _display3:
  1916  0454                     l1507:	
  1917                           ;incstack = 0
  1918                           ; Regs used in _display3: [wreg+status,2+status,0+pclath+cstack]
  1919                           
  1920                           
  1921                           ;lab3.c: 234:     {;lab3.c: 235:         if (contador < 10)
  1922  0454  300A               	movlw	10
  1923  0455  1283               	bcf	3,5	;RP0=0, select bank0
  1924  0456  1303               	bcf	3,6	;RP1=0, select bank0
  1925  0457  024C               	subwf	_contador,w
  1926  0458  1803               	skipnc
  1927  0459  2C5B               	goto	u1041
  1928  045A  2C5C               	goto	u1040
  1929  045B                     u1041:
  1930  045B  2C7E               	goto	l1511
  1931  045C                     u1040:
  1932  045C                     l1509:
  1933                           
  1934                           ;lab3.c: 236:         {;lab3.c: 237:              dato_char(67);
  1935  045C  3043               	movlw	67
  1936  045D  120A  118A  26B4  120A  118A  	fcall	_dato_char
  1937                           
  1938                           ;lab3.c: 238:              dato_char(58);
  1939  0462  303A               	movlw	58
  1940  0463  120A  118A  26B4  120A  118A  	fcall	_dato_char
  1941                           
  1942                           ;lab3.c: 239:              dato_char(48);
  1943  0468  3030               	movlw	48
  1944  0469  120A  118A  26B4  120A  118A  	fcall	_dato_char
  1945                           
  1946                           ;lab3.c: 240:              dato_char(contador+48);
  1947  046E  1283               	bcf	3,5	;RP0=0, select bank0
  1948  046F  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0470  084C               	movf	_contador,w
  1950  0471  3E30               	addlw	48
  1951  0472  120A  118A  26B4  120A  118A  	fcall	_dato_char
  1952                           
  1953                           ;lab3.c: 241:              dato_char('\r');
  1954  0477  300D               	movlw	13
  1955  0478  120A  118A  26B4  120A  118A  	fcall	_dato_char
  1956                           
  1957                           ;lab3.c: 243:         }
  1958  047D  2CA2               	goto	l193
  1959  047E                     l1511:
  1960                           
  1961                           ;lab3.c: 245:         {;lab3.c: 246:              dato_char(67);
  1962  047E  3043               	movlw	67
  1963  047F  120A  118A  26B4  120A  118A  	fcall	_dato_char
  1964                           
  1965                           ;lab3.c: 247:              dato_char(58);
  1966  0484  303A               	movlw	58
  1967  0485  120A  118A  26B4  120A  118A  	fcall	_dato_char
  1968                           
  1969                           ;lab3.c: 248:              dato_char(w1+48);
  1970  048A  1283               	bcf	3,5	;RP0=0, select bank0
  1971  048B  1303               	bcf	3,6	;RP1=0, select bank0
  1972  048C  0849               	movf	_w1,w
  1973  048D  3E30               	addlw	48
  1974  048E  120A  118A  26B4  120A  118A  	fcall	_dato_char
  1975                           
  1976                           ;lab3.c: 249:              dato_char(w2+48);
  1977  0493  1283               	bcf	3,5	;RP0=0, select bank0
  1978  0494  1303               	bcf	3,6	;RP1=0, select bank0
  1979  0495  0848               	movf	_w2,w
  1980  0496  3E30               	addlw	48
  1981  0497  120A  118A  26B4  120A  118A  	fcall	_dato_char
  1982                           
  1983                           ;lab3.c: 250:              dato_char('\r');
  1984  049C  300D               	movlw	13
  1985  049D  120A  118A  26B4  120A  118A  	fcall	_dato_char
  1986  04A2                     l193:
  1987  04A2  0008               	return
  1988  04A3                     __end_of_display3:
  1989                           
  1990                           	psect	text8
  1991  04A3                     __ptext8:	
  1992 ;; *************** function _display2 *****************
  1993 ;; Defined at:
  1994 ;;		line 213 in file "lab3.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0, pclath, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2008 ;;      Params:         0       0       0       0       0
  2009 ;;      Locals:         0       0       0       0       0
  2010 ;;      Temps:          0       0       0       0       0
  2011 ;;      Totals:         0       0       0       0       0
  2012 ;;Total ram usage:        0 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    3
  2015 ;; This function calls:
  2016 ;;		_dato_char
  2017 ;; This function is called by:
  2018 ;;		_Conversion2
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           
  2023                           ;psect for function _display2
  2024  04A3                     _display2:
  2025  04A3                     l1505:	
  2026                           ;incstack = 0
  2027                           ; Regs used in _display2: [wreg+status,2+status,0+pclath+cstack]
  2028                           
  2029                           
  2030                           ;lab3.c: 216:     {;lab3.c: 217:          dato_char(83);
  2031  04A3  3053               	movlw	83
  2032  04A4  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2033                           
  2034                           ;lab3.c: 218:          dato_char(50);
  2035  04A9  3032               	movlw	50
  2036  04AA  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2037                           
  2038                           ;lab3.c: 219:          dato_char(58);
  2039  04AF  303A               	movlw	58
  2040  04B0  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2041                           
  2042                           ;lab3.c: 220:          dato_char(enterob+48);
  2043  04B5  0878               	movf	_enterob,w
  2044  04B6  3E30               	addlw	48
  2045  04B7  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2046                           
  2047                           ;lab3.c: 221:          dato_char(46);
  2048  04BC  302E               	movlw	46
  2049  04BD  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2050                           
  2051                           ;lab3.c: 222:          dato_char(centena1b+48);
  2052  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  2053  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  2054  04C4  0852               	movf	_centena1b,w
  2055  04C5  3E30               	addlw	48
  2056  04C6  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2057                           
  2058                           ;lab3.c: 223:          dato_char(centena2b+48);
  2059  04CB  1283               	bcf	3,5	;RP0=0, select bank0
  2060  04CC  1303               	bcf	3,6	;RP1=0, select bank0
  2061  04CD  0850               	movf	_centena2b,w
  2062  04CE  3E30               	addlw	48
  2063  04CF  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2064                           
  2065                           ;lab3.c: 224:          dato_char(86);
  2066  04D4  3056               	movlw	86
  2067  04D5  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2068                           
  2069                           ;lab3.c: 225:          dato_char(32);
  2070  04DA  3020               	movlw	32
  2071  04DB  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2072                           
  2073                           ;lab3.c: 226:          dato_char(32);
  2074  04E0  3020               	movlw	32
  2075  04E1  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2076  04E6                     l188:
  2077  04E6  0008               	return
  2078  04E7                     __end_of_display2:
  2079                           
  2080                           	psect	text9
  2081  0286                     __ptext9:	
  2082 ;; *************** function _Conversion1 *****************
  2083 ;; Defined at:
  2084 ;;		line 164 in file "lab3.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;		None
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;		None
  2089 ;; Return value:  Size  Location     Type
  2090 ;;                  1    wreg      void 
  2091 ;; Registers used:
  2092 ;;		wreg, status,2, status,0, pclath, cstack
  2093 ;; Tracked objects:
  2094 ;;		On entry : 0/0
  2095 ;;		On exit  : 0/0
  2096 ;;		Unchanged: 0/0
  2097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2098 ;;      Params:         0       0       0       0       0
  2099 ;;      Locals:         0       0       0       0       0
  2100 ;;      Temps:          0       3       0       0       0
  2101 ;;      Totals:         0       3       0       0       0
  2102 ;;Total ram usage:        3 bytes
  2103 ;; Hardware stack levels used:    1
  2104 ;; Hardware stack levels required when called:    4
  2105 ;; This function calls:
  2106 ;;		_Lcd_Write_Char
  2107 ;;		___awdiv
  2108 ;;		___awmod
  2109 ;;		_display1
  2110 ;; This function is called by:
  2111 ;;		_conversion
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           
  2116                           ;psect for function _Conversion1
  2117  0286                     _Conversion1:
  2118  0286                     l1607:	
  2119                           ;incstack = 0
  2120                           ; Regs used in _Conversion1: [wreg+status,2+status,0+pclath+cstack]
  2121                           
  2122                           
  2123                           ;lab3.c: 166:     enteroc = (c*2)/100;
  2124  0286  3064               	movlw	100
  2125  0287  1283               	bcf	3,5	;RP0=0, select bank0
  2126  0288  1303               	bcf	3,6	;RP1=0, select bank0
  2127  0289  00A2               	movwf	___awdiv@divisor
  2128  028A  3000               	movlw	0
  2129  028B  00A3               	movwf	___awdiv@divisor+1
  2130  028C  0859               	movf	_c,w
  2131  028D  00AA               	movwf	??_Conversion1
  2132  028E  01AB               	clrf	??_Conversion1+1
  2133  028F  1003               	clrc
  2134  0290  0D2A               	rlf	??_Conversion1,w
  2135  0291  00A4               	movwf	___awdiv@dividend
  2136  0292  0D2B               	rlf	??_Conversion1+1,w
  2137  0293  00A5               	movwf	___awdiv@dividend+1
  2138  0294  120A  118A  2390  120A  118A  	fcall	___awdiv
  2139  0299  1283               	bcf	3,5	;RP0=0, select bank0
  2140  029A  1303               	bcf	3,6	;RP1=0, select bank0
  2141  029B  0822               	movf	?___awdiv,w
  2142  029C  00AC               	movwf	??_Conversion1+2
  2143  029D  082C               	movf	??_Conversion1+2,w
  2144  029E  00FA               	movwf	_enteroc
  2145                           
  2146                           ;lab3.c: 167:     decima1c = enteroc%100;
  2147  029F  3064               	movlw	100
  2148  02A0  00F3               	movwf	___awmod@divisor
  2149  02A1  3000               	movlw	0
  2150  02A2  00F4               	movwf	___awmod@divisor+1
  2151  02A3  087A               	movf	_enteroc,w
  2152  02A4  00AA               	movwf	??_Conversion1
  2153  02A5  01AB               	clrf	??_Conversion1+1
  2154  02A6  082A               	movf	??_Conversion1,w
  2155  02A7  00F5               	movwf	___awmod@dividend
  2156  02A8  082B               	movf	??_Conversion1+1,w
  2157  02A9  00F6               	movwf	___awmod@dividend+1
  2158  02AA  120A  118A  23F9  120A  118A  	fcall	___awmod
  2159  02AF  0873               	movf	?___awmod,w
  2160  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2161  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2162  02B2  00AC               	movwf	??_Conversion1+2
  2163  02B3  082C               	movf	??_Conversion1+2,w
  2164  02B4  00F9               	movwf	_decima1c
  2165                           
  2166                           ;lab3.c: 168:     centena1c = decima1c /10;
  2167  02B5  300A               	movlw	10
  2168  02B6  00A2               	movwf	___awdiv@divisor
  2169  02B7  3000               	movlw	0
  2170  02B8  00A3               	movwf	___awdiv@divisor+1
  2171  02B9  0879               	movf	_decima1c,w
  2172  02BA  00AA               	movwf	??_Conversion1
  2173  02BB  01AB               	clrf	??_Conversion1+1
  2174  02BC  082A               	movf	??_Conversion1,w
  2175  02BD  00A4               	movwf	___awdiv@dividend
  2176  02BE  082B               	movf	??_Conversion1+1,w
  2177  02BF  00A5               	movwf	___awdiv@dividend+1
  2178  02C0  120A  118A  2390  120A  118A  	fcall	___awdiv
  2179  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  2180  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  2181  02C7  0822               	movf	?___awdiv,w
  2182  02C8  00AC               	movwf	??_Conversion1+2
  2183  02C9  082C               	movf	??_Conversion1+2,w
  2184  02CA  00D6               	movwf	_centena1c
  2185                           
  2186                           ;lab3.c: 169:     decima2c = decima1c % 10;
  2187  02CB  300A               	movlw	10
  2188  02CC  00F3               	movwf	___awmod@divisor
  2189  02CD  3000               	movlw	0
  2190  02CE  00F4               	movwf	___awmod@divisor+1
  2191  02CF  0879               	movf	_decima1c,w
  2192  02D0  00AA               	movwf	??_Conversion1
  2193  02D1  01AB               	clrf	??_Conversion1+1
  2194  02D2  082A               	movf	??_Conversion1,w
  2195  02D3  00F5               	movwf	___awmod@dividend
  2196  02D4  082B               	movf	??_Conversion1+1,w
  2197  02D5  00F6               	movwf	___awmod@dividend+1
  2198  02D6  120A  118A  23F9  120A  118A  	fcall	___awmod
  2199  02DB  0873               	movf	?___awmod,w
  2200  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2201  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2202  02DE  00AC               	movwf	??_Conversion1+2
  2203  02DF  082C               	movf	??_Conversion1+2,w
  2204  02E0  00D5               	movwf	_decima2c
  2205  02E1                     l1609:
  2206                           
  2207                           ;lab3.c: 170:     centena2c = decima2c/1;
  2208  02E1  0855               	movf	_decima2c,w
  2209  02E2  00AA               	movwf	??_Conversion1
  2210  02E3  082A               	movf	??_Conversion1,w
  2211  02E4  00D4               	movwf	_centena2c
  2212  02E5                     l1611:
  2213                           
  2214                           ;lab3.c: 171:     Lcd_Write_Char(enteroc+48);
  2215  02E5  087A               	movf	_enteroc,w
  2216  02E6  3E30               	addlw	48
  2217  02E7  120A  118A  268A  120A  118A  	fcall	_Lcd_Write_Char
  2218  02EC                     l1613:
  2219                           
  2220                           ;lab3.c: 172:     Lcd_Write_Char(46);
  2221  02EC  302E               	movlw	46
  2222  02ED  120A  118A  268A  120A  118A  	fcall	_Lcd_Write_Char
  2223  02F2                     l1615:
  2224                           
  2225                           ;lab3.c: 173:     Lcd_Write_Char(centena1c+48);
  2226  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  2227  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  2228  02F4  0856               	movf	_centena1c,w
  2229  02F5  3E30               	addlw	48
  2230  02F6  120A  118A  268A  120A  118A  	fcall	_Lcd_Write_Char
  2231  02FB                     l1617:
  2232                           
  2233                           ;lab3.c: 174:     Lcd_Write_Char(centena2c+48);
  2234  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2235  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2236  02FD  0854               	movf	_centena2c,w
  2237  02FE  3E30               	addlw	48
  2238  02FF  120A  118A  268A  120A  118A  	fcall	_Lcd_Write_Char
  2239  0304                     l1619:
  2240                           
  2241                           ;lab3.c: 175:     Lcd_Write_Char(86);
  2242  0304  3056               	movlw	86
  2243  0305  120A  118A  268A  120A  118A  	fcall	_Lcd_Write_Char
  2244  030A                     l1621:
  2245                           
  2246                           ;lab3.c: 176:     display1();
  2247  030A  120A  118A  24E7  120A  118A  	fcall	_display1
  2248  030F                     l179:
  2249  030F  0008               	return
  2250  0310                     __end_of_Conversion1:
  2251                           
  2252                           	psect	text10
  2253  04E7                     __ptext10:	
  2254 ;; *************** function _display1 *****************
  2255 ;; Defined at:
  2256 ;;		line 196 in file "lab3.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0, pclath, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2270 ;;      Params:         0       0       0       0       0
  2271 ;;      Locals:         0       0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0
  2273 ;;      Totals:         0       0       0       0       0
  2274 ;;Total ram usage:        0 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:    3
  2277 ;; This function calls:
  2278 ;;		_dato_char
  2279 ;; This function is called by:
  2280 ;;		_Conversion1
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           
  2285                           ;psect for function _display1
  2286  04E7                     _display1:
  2287  04E7                     l1503:	
  2288                           ;incstack = 0
  2289                           ; Regs used in _display1: [wreg+status,2+status,0+pclath+cstack]
  2290                           
  2291                           
  2292                           ;lab3.c: 199:     {;lab3.c: 200:          dato_char (83);
  2293  04E7  3053               	movlw	83
  2294  04E8  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2295                           
  2296                           ;lab3.c: 201:          dato_char(49);
  2297  04ED  3031               	movlw	49
  2298  04EE  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2299                           
  2300                           ;lab3.c: 202:          dato_char(58);
  2301  04F3  303A               	movlw	58
  2302  04F4  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2303                           
  2304                           ;lab3.c: 203:          dato_char(enteroc+48);
  2305  04F9  087A               	movf	_enteroc,w
  2306  04FA  3E30               	addlw	48
  2307  04FB  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2308                           
  2309                           ;lab3.c: 204:          dato_char(46);
  2310  0500  302E               	movlw	46
  2311  0501  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2312                           
  2313                           ;lab3.c: 205:          dato_char(centena1c+48);
  2314  0506  1283               	bcf	3,5	;RP0=0, select bank0
  2315  0507  1303               	bcf	3,6	;RP1=0, select bank0
  2316  0508  0856               	movf	_centena1c,w
  2317  0509  3E30               	addlw	48
  2318  050A  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2319                           
  2320                           ;lab3.c: 206:          dato_char(centena2c+48);
  2321  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2322  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2323  0511  0854               	movf	_centena2c,w
  2324  0512  3E30               	addlw	48
  2325  0513  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2326                           
  2327                           ;lab3.c: 207:          dato_char(86);
  2328  0518  3056               	movlw	86
  2329  0519  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2330                           
  2331                           ;lab3.c: 208:          dato_char(32);
  2332  051E  3020               	movlw	32
  2333  051F  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2334                           
  2335                           ;lab3.c: 209:          dato_char(32);
  2336  0524  3020               	movlw	32
  2337  0525  120A  118A  26B4  120A  118A  	fcall	_dato_char
  2338  052A                     l185:
  2339  052A  0008               	return
  2340  052B                     __end_of_display1:
  2341                           
  2342                           	psect	text11
  2343  06B4                     __ptext11:	
  2344 ;; *************** function _dato_char *****************
  2345 ;; Defined at:
  2346 ;;		line 104 in file "lab3.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  valor           1    wreg     unsigned char 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;  valor           1    3[COMMON] unsigned char 
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      void 
  2353 ;; Registers used:
  2354 ;;		wreg
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2360 ;;      Params:         0       0       0       0       0
  2361 ;;      Locals:         1       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0
  2363 ;;      Totals:         1       0       0       0       0
  2364 ;;Total ram usage:        1 bytes
  2365 ;; Hardware stack levels used:    1
  2366 ;; Hardware stack levels required when called:    2
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_display1
  2371 ;;		_display2
  2372 ;;		_display3
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           
  2377                           ;psect for function _dato_char
  2378  06B4                     _dato_char:
  2379                           
  2380                           ;incstack = 0
  2381                           ; Regs used in _dato_char: [wreg]
  2382                           ;dato_char@valor stored from wreg
  2383  06B4  00F3               	movwf	dato_char@valor
  2384  06B5                     l1485:
  2385                           
  2386                           ;lab3.c: 104: void dato_char (uint8_t valor);lab3.c: 105: {;lab3.c: 106:     TXREG = val
      +                          or;
  2387  06B5  0873               	movf	dato_char@valor,w
  2388  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  2389  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  2390  06B8  0099               	movwf	25	;volatile
  2391  06B9                     l158:	
  2392                           ;lab3.c: 107:     while (PIR1bits.TXIF == 0);
  2393                           
  2394  06B9  1E0C               	btfss	12,4	;volatile
  2395  06BA  2EBC               	goto	u1031
  2396  06BB  2EBD               	goto	u1030
  2397  06BC                     u1031:
  2398  06BC  2EB9               	goto	l158
  2399  06BD                     u1030:
  2400  06BD                     l161:
  2401  06BD  0008               	return
  2402  06BE                     __end_of_dato_char:
  2403                           
  2404                           	psect	text12
  2405  03F9                     __ptext12:	
  2406 ;; *************** function ___awmod *****************
  2407 ;; Defined at:
  2408 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  divisor         2    3[COMMON] int 
  2411 ;;  dividend        2    5[COMMON] int 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  sign            1    1[BANK0 ] unsigned char 
  2414 ;;  counter         1    0[BANK0 ] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  2    3[COMMON] int 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2424 ;;      Params:         4       0       0       0       0
  2425 ;;      Locals:         0       2       0       0       0
  2426 ;;      Temps:          1       0       0       0       0
  2427 ;;      Totals:         5       2       0       0       0
  2428 ;;Total ram usage:        7 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:    2
  2431 ;; This function calls:
  2432 ;;		Nothing
  2433 ;; This function is called by:
  2434 ;;		_conversion
  2435 ;;		_Conversion1
  2436 ;;		_Conversion2
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           
  2441                           ;psect for function ___awmod
  2442  03F9                     ___awmod:
  2443  03F9                     l1557:	
  2444                           ;incstack = 0
  2445                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2446                           
  2447  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2448  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2449  03FB  01A1               	clrf	___awmod@sign
  2450  03FC                     l1559:
  2451  03FC  1FF6               	btfss	___awmod@dividend+1,7
  2452  03FD  2BFF               	goto	u1151
  2453  03FE  2C00               	goto	u1150
  2454  03FF                     u1151:
  2455  03FF  2C07               	goto	l1565
  2456  0400                     u1150:
  2457  0400                     l1561:
  2458  0400  09F5               	comf	___awmod@dividend,f
  2459  0401  09F6               	comf	___awmod@dividend+1,f
  2460  0402  0AF5               	incf	___awmod@dividend,f
  2461  0403  1903               	skipnz
  2462  0404  0AF6               	incf	___awmod@dividend+1,f
  2463  0405                     l1563:
  2464  0405  01A1               	clrf	___awmod@sign
  2465  0406  0AA1               	incf	___awmod@sign,f
  2466  0407                     l1565:
  2467  0407  1FF4               	btfss	___awmod@divisor+1,7
  2468  0408  2C0A               	goto	u1161
  2469  0409  2C0B               	goto	u1160
  2470  040A                     u1161:
  2471  040A  2C10               	goto	l1569
  2472  040B                     u1160:
  2473  040B                     l1567:
  2474  040B  09F3               	comf	___awmod@divisor,f
  2475  040C  09F4               	comf	___awmod@divisor+1,f
  2476  040D  0AF3               	incf	___awmod@divisor,f
  2477  040E  1903               	skipnz
  2478  040F  0AF4               	incf	___awmod@divisor+1,f
  2479  0410                     l1569:
  2480  0410  0873               	movf	___awmod@divisor,w
  2481  0411  0474               	iorwf	___awmod@divisor+1,w
  2482  0412  1903               	btfsc	3,2
  2483  0413  2C15               	goto	u1171
  2484  0414  2C16               	goto	u1170
  2485  0415                     u1171:
  2486  0415  2C45               	goto	l1587
  2487  0416                     u1170:
  2488  0416                     l1571:
  2489  0416  01A0               	clrf	___awmod@counter
  2490  0417  0AA0               	incf	___awmod@counter,f
  2491  0418  2C24               	goto	l1577
  2492  0419                     l1573:
  2493  0419  3001               	movlw	1
  2494  041A                     u1185:
  2495  041A  1003               	clrc
  2496  041B  0DF3               	rlf	___awmod@divisor,f
  2497  041C  0DF4               	rlf	___awmod@divisor+1,f
  2498  041D  3EFF               	addlw	-1
  2499  041E  1D03               	skipz
  2500  041F  2C1A               	goto	u1185
  2501  0420                     l1575:
  2502  0420  3001               	movlw	1
  2503  0421  00F7               	movwf	??___awmod
  2504  0422  0877               	movf	??___awmod,w
  2505  0423  07A0               	addwf	___awmod@counter,f
  2506  0424                     l1577:
  2507  0424  1FF4               	btfss	___awmod@divisor+1,7
  2508  0425  2C27               	goto	u1191
  2509  0426  2C28               	goto	u1190
  2510  0427                     u1191:
  2511  0427  2C19               	goto	l1573
  2512  0428                     u1190:
  2513  0428                     l1579:
  2514  0428  0874               	movf	___awmod@divisor+1,w
  2515  0429  0276               	subwf	___awmod@dividend+1,w
  2516  042A  1D03               	skipz
  2517  042B  2C2E               	goto	u1205
  2518  042C  0873               	movf	___awmod@divisor,w
  2519  042D  0275               	subwf	___awmod@dividend,w
  2520  042E                     u1205:
  2521  042E  1C03               	skipc
  2522  042F  2C31               	goto	u1201
  2523  0430  2C32               	goto	u1200
  2524  0431                     u1201:
  2525  0431  2C38               	goto	l1583
  2526  0432                     u1200:
  2527  0432                     l1581:
  2528  0432  0873               	movf	___awmod@divisor,w
  2529  0433  02F5               	subwf	___awmod@dividend,f
  2530  0434  0874               	movf	___awmod@divisor+1,w
  2531  0435  1C03               	skipc
  2532  0436  03F6               	decf	___awmod@dividend+1,f
  2533  0437  02F6               	subwf	___awmod@dividend+1,f
  2534  0438                     l1583:
  2535  0438  3001               	movlw	1
  2536  0439                     u1215:
  2537  0439  1003               	clrc
  2538  043A  0CF4               	rrf	___awmod@divisor+1,f
  2539  043B  0CF3               	rrf	___awmod@divisor,f
  2540  043C  3EFF               	addlw	-1
  2541  043D  1D03               	skipz
  2542  043E  2C39               	goto	u1215
  2543  043F                     l1585:
  2544  043F  3001               	movlw	1
  2545  0440  02A0               	subwf	___awmod@counter,f
  2546  0441  1D03               	btfss	3,2
  2547  0442  2C44               	goto	u1221
  2548  0443  2C45               	goto	u1220
  2549  0444                     u1221:
  2550  0444  2C28               	goto	l1579
  2551  0445                     u1220:
  2552  0445                     l1587:
  2553  0445  0821               	movf	___awmod@sign,w
  2554  0446  1903               	btfsc	3,2
  2555  0447  2C49               	goto	u1231
  2556  0448  2C4A               	goto	u1230
  2557  0449                     u1231:
  2558  0449  2C4F               	goto	l1591
  2559  044A                     u1230:
  2560  044A                     l1589:
  2561  044A  09F5               	comf	___awmod@dividend,f
  2562  044B  09F6               	comf	___awmod@dividend+1,f
  2563  044C  0AF5               	incf	___awmod@dividend,f
  2564  044D  1903               	skipnz
  2565  044E  0AF6               	incf	___awmod@dividend+1,f
  2566  044F                     l1591:
  2567  044F  0876               	movf	___awmod@dividend+1,w
  2568  0450  00F4               	movwf	?___awmod+1
  2569  0451  0875               	movf	___awmod@dividend,w
  2570  0452  00F3               	movwf	?___awmod
  2571  0453                     l451:
  2572  0453  0008               	return
  2573  0454                     __end_of___awmod:
  2574                           
  2575                           	psect	text13
  2576  0390                     __ptext13:	
  2577 ;; *************** function ___awdiv *****************
  2578 ;; Defined at:
  2579 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  divisor         2    2[BANK0 ] int 
  2582 ;;  dividend        2    4[BANK0 ] int 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;  quotient        2    8[BANK0 ] int 
  2585 ;;  sign            1    7[BANK0 ] unsigned char 
  2586 ;;  counter         1    6[BANK0 ] unsigned char 
  2587 ;; Return value:  Size  Location     Type
  2588 ;;                  2    2[BANK0 ] int 
  2589 ;; Registers used:
  2590 ;;		wreg, status,2, status,0
  2591 ;; Tracked objects:
  2592 ;;		On entry : 0/0
  2593 ;;		On exit  : 0/0
  2594 ;;		Unchanged: 0/0
  2595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2596 ;;      Params:         0       4       0       0       0
  2597 ;;      Locals:         0       4       0       0       0
  2598 ;;      Temps:          1       0       0       0       0
  2599 ;;      Totals:         1       8       0       0       0
  2600 ;;Total ram usage:        9 bytes
  2601 ;; Hardware stack levels used:    1
  2602 ;; Hardware stack levels required when called:    2
  2603 ;; This function calls:
  2604 ;;		Nothing
  2605 ;; This function is called by:
  2606 ;;		_conversion
  2607 ;;		_Conversion1
  2608 ;;		_Conversion2
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           
  2613                           ;psect for function ___awdiv
  2614  0390                     ___awdiv:
  2615  0390                     l1513:	
  2616                           ;incstack = 0
  2617                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2618                           
  2619  0390  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0391  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0392  01A7               	clrf	___awdiv@sign
  2622  0393                     l1515:
  2623  0393  1FA3               	btfss	___awdiv@divisor+1,7
  2624  0394  2B96               	goto	u1051
  2625  0395  2B97               	goto	u1050
  2626  0396                     u1051:
  2627  0396  2B9E               	goto	l1521
  2628  0397                     u1050:
  2629  0397                     l1517:
  2630  0397  09A2               	comf	___awdiv@divisor,f
  2631  0398  09A3               	comf	___awdiv@divisor+1,f
  2632  0399  0AA2               	incf	___awdiv@divisor,f
  2633  039A  1903               	skipnz
  2634  039B  0AA3               	incf	___awdiv@divisor+1,f
  2635  039C                     l1519:
  2636  039C  01A7               	clrf	___awdiv@sign
  2637  039D  0AA7               	incf	___awdiv@sign,f
  2638  039E                     l1521:
  2639  039E  1FA5               	btfss	___awdiv@dividend+1,7
  2640  039F  2BA1               	goto	u1061
  2641  03A0  2BA2               	goto	u1060
  2642  03A1                     u1061:
  2643  03A1  2BAB               	goto	l1527
  2644  03A2                     u1060:
  2645  03A2                     l1523:
  2646  03A2  09A4               	comf	___awdiv@dividend,f
  2647  03A3  09A5               	comf	___awdiv@dividend+1,f
  2648  03A4  0AA4               	incf	___awdiv@dividend,f
  2649  03A5  1903               	skipnz
  2650  03A6  0AA5               	incf	___awdiv@dividend+1,f
  2651  03A7                     l1525:
  2652  03A7  3001               	movlw	1
  2653  03A8  00F7               	movwf	??___awdiv
  2654  03A9  0877               	movf	??___awdiv,w
  2655  03AA  06A7               	xorwf	___awdiv@sign,f
  2656  03AB                     l1527:
  2657  03AB  01A8               	clrf	___awdiv@quotient
  2658  03AC  01A9               	clrf	___awdiv@quotient+1
  2659  03AD                     l1529:
  2660  03AD  0822               	movf	___awdiv@divisor,w
  2661  03AE  0423               	iorwf	___awdiv@divisor+1,w
  2662  03AF  1903               	btfsc	3,2
  2663  03B0  2BB2               	goto	u1071
  2664  03B1  2BB3               	goto	u1070
  2665  03B2                     u1071:
  2666  03B2  2BEA               	goto	l1549
  2667  03B3                     u1070:
  2668  03B3                     l1531:
  2669  03B3  01A6               	clrf	___awdiv@counter
  2670  03B4  0AA6               	incf	___awdiv@counter,f
  2671  03B5  2BC1               	goto	l1537
  2672  03B6                     l1533:
  2673  03B6  3001               	movlw	1
  2674  03B7                     u1085:
  2675  03B7  1003               	clrc
  2676  03B8  0DA2               	rlf	___awdiv@divisor,f
  2677  03B9  0DA3               	rlf	___awdiv@divisor+1,f
  2678  03BA  3EFF               	addlw	-1
  2679  03BB  1D03               	skipz
  2680  03BC  2BB7               	goto	u1085
  2681  03BD                     l1535:
  2682  03BD  3001               	movlw	1
  2683  03BE  00F7               	movwf	??___awdiv
  2684  03BF  0877               	movf	??___awdiv,w
  2685  03C0  07A6               	addwf	___awdiv@counter,f
  2686  03C1                     l1537:
  2687  03C1  1FA3               	btfss	___awdiv@divisor+1,7
  2688  03C2  2BC4               	goto	u1091
  2689  03C3  2BC5               	goto	u1090
  2690  03C4                     u1091:
  2691  03C4  2BB6               	goto	l1533
  2692  03C5                     u1090:
  2693  03C5                     l1539:
  2694  03C5  3001               	movlw	1
  2695  03C6                     u1105:
  2696  03C6  1003               	clrc
  2697  03C7  0DA8               	rlf	___awdiv@quotient,f
  2698  03C8  0DA9               	rlf	___awdiv@quotient+1,f
  2699  03C9  3EFF               	addlw	-1
  2700  03CA  1D03               	skipz
  2701  03CB  2BC6               	goto	u1105
  2702  03CC  0823               	movf	___awdiv@divisor+1,w
  2703  03CD  0225               	subwf	___awdiv@dividend+1,w
  2704  03CE  1D03               	skipz
  2705  03CF  2BD2               	goto	u1115
  2706  03D0  0822               	movf	___awdiv@divisor,w
  2707  03D1  0224               	subwf	___awdiv@dividend,w
  2708  03D2                     u1115:
  2709  03D2  1C03               	skipc
  2710  03D3  2BD5               	goto	u1111
  2711  03D4  2BD6               	goto	u1110
  2712  03D5                     u1111:
  2713  03D5  2BDD               	goto	l1545
  2714  03D6                     u1110:
  2715  03D6                     l1541:
  2716  03D6  0822               	movf	___awdiv@divisor,w
  2717  03D7  02A4               	subwf	___awdiv@dividend,f
  2718  03D8  0823               	movf	___awdiv@divisor+1,w
  2719  03D9  1C03               	skipc
  2720  03DA  03A5               	decf	___awdiv@dividend+1,f
  2721  03DB  02A5               	subwf	___awdiv@dividend+1,f
  2722  03DC                     l1543:
  2723  03DC  1428               	bsf	___awdiv@quotient,0
  2724  03DD                     l1545:
  2725  03DD  3001               	movlw	1
  2726  03DE                     u1125:
  2727  03DE  1003               	clrc
  2728  03DF  0CA3               	rrf	___awdiv@divisor+1,f
  2729  03E0  0CA2               	rrf	___awdiv@divisor,f
  2730  03E1  3EFF               	addlw	-1
  2731  03E2  1D03               	skipz
  2732  03E3  2BDE               	goto	u1125
  2733  03E4                     l1547:
  2734  03E4  3001               	movlw	1
  2735  03E5  02A6               	subwf	___awdiv@counter,f
  2736  03E6  1D03               	btfss	3,2
  2737  03E7  2BE9               	goto	u1131
  2738  03E8  2BEA               	goto	u1130
  2739  03E9                     u1131:
  2740  03E9  2BC5               	goto	l1539
  2741  03EA                     u1130:
  2742  03EA                     l1549:
  2743  03EA  0827               	movf	___awdiv@sign,w
  2744  03EB  1903               	btfsc	3,2
  2745  03EC  2BEE               	goto	u1141
  2746  03ED  2BEF               	goto	u1140
  2747  03EE                     u1141:
  2748  03EE  2BF4               	goto	l1553
  2749  03EF                     u1140:
  2750  03EF                     l1551:
  2751  03EF  09A8               	comf	___awdiv@quotient,f
  2752  03F0  09A9               	comf	___awdiv@quotient+1,f
  2753  03F1  0AA8               	incf	___awdiv@quotient,f
  2754  03F2  1903               	skipnz
  2755  03F3  0AA9               	incf	___awdiv@quotient+1,f
  2756  03F4                     l1553:
  2757  03F4  0829               	movf	___awdiv@quotient+1,w
  2758  03F5  00A3               	movwf	?___awdiv+1
  2759  03F6  0828               	movf	___awdiv@quotient,w
  2760  03F7  00A2               	movwf	?___awdiv
  2761  03F8                     l438:
  2762  03F8  0008               	return
  2763  03F9                     __end_of___awdiv:
  2764                           
  2765                           	psect	text14
  2766  064A                     __ptext14:	
  2767 ;; *************** function _config *****************
  2768 ;; Defined at:
  2769 ;;		line 39 in file "./Libreria2.h"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;		None
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, status,2
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2783 ;;      Params:         0       0       0       0       0
  2784 ;;      Locals:         0       0       0       0       0
  2785 ;;      Temps:          0       0       0       0       0
  2786 ;;      Totals:         0       0       0       0       0
  2787 ;;Total ram usage:        0 bytes
  2788 ;; Hardware stack levels used:    1
  2789 ;; Hardware stack levels required when called:    2
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_main
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           
  2798                           ;psect for function _config
  2799  064A                     _config:
  2800  064A                     l1041:	
  2801                           ;incstack = 0
  2802                           ; Regs used in _config: [wreg+status,2]
  2803                           
  2804                           
  2805                           ;./Libreria2.h: 41: 
  2806  064A  1683               	bsf	3,5	;RP0=1, select bank3
  2807  064B  1703               	bsf	3,6	;RP1=1, select bank3
  2808  064C  0188               	clrf	8	;volatile
  2809                           
  2810                           ;./Libreria2.h: 42:     ADCON0bits.ADON=1;
  2811  064D  0189               	clrf	9	;volatile
  2812  064E                     l1043:
  2813                           
  2814                           ;./Libreria2.h: 44: 
  2815  064E  3003               	movlw	3
  2816  064F  1683               	bsf	3,5	;RP0=1, select bank1
  2817  0650  1303               	bcf	3,6	;RP1=0, select bank1
  2818  0651  0085               	movwf	5	;volatile
  2819  0652                     l1045:
  2820                           
  2821                           ;./Libreria2.h: 45:     INTCONbits.GIE = 1;
  2822  0652  0186               	clrf	6	;volatile
  2823  0653                     l1047:
  2824                           
  2825                           ;./Libreria2.h: 46:     INTCONbits.PEIE = 1;
  2826  0653  0188               	clrf	8	;volatile
  2827  0654                     l1049:
  2828                           
  2829                           ;./Libreria2.h: 48:     PIE1bits.ADIE = 1;
  2830  0654  1683               	bsf	3,5	;RP0=1, select bank3
  2831  0655  1703               	bsf	3,6	;RP1=1, select bank3
  2832  0656  1408               	bsf	8,0	;volatile
  2833  0657                     l1051:
  2834                           
  2835                           ;./Libreria2.h: 49:     PIR1bits.ADIF = 0;
  2836  0657  1488               	bsf	8,1	;volatile
  2837  0658                     l1053:
  2838                           
  2839                           ;./Libreria2.h: 52: }
  2840  0658  1283               	bcf	3,5	;RP0=0, select bank0
  2841  0659  1303               	bcf	3,6	;RP1=0, select bank0
  2842  065A  141F               	bsf	31,0	;volatile
  2843  065B                     l1055:
  2844                           
  2845                           ;./Libreria2.h: 53: 
  2846  065B  1683               	bsf	3,5	;RP0=1, select bank1
  2847  065C  1303               	bcf	3,6	;RP1=0, select bank1
  2848  065D  139F               	bcf	31,7	;volatile
  2849  065E                     l1057:
  2850                           
  2851                           ;./Libreria2.h: 55:  PORTDbits.RD2 =0;
  2852  065E  178B               	bsf	11,7	;volatile
  2853  065F                     l1059:
  2854                           
  2855                           ;./Libreria2.h: 56:  PORTB=a;
  2856  065F  170B               	bsf	11,6	;volatile
  2857  0660                     l1061:
  2858                           
  2859                           ;./Libreria2.h: 58:     _delay((unsigned long)((4)*(9000000/4000.0)));
  2860  0660  170C               	bsf	12,6	;volatile
  2861  0661                     l1063:
  2862                           
  2863                           ;./Libreria2.h: 59:     PORTDbits.RD3=0;
  2864  0661  1283               	bcf	3,5	;RP0=0, select bank0
  2865  0662  1303               	bcf	3,6	;RP1=0, select bank0
  2866  0663  130C               	bcf	12,6	;volatile
  2867  0664                     l75:
  2868  0664  0008               	return
  2869  0665                     __end_of_config:
  2870                           
  2871                           	psect	text15
  2872  06C6                     __ptext15:	
  2873 ;; *************** function _USART_config *****************
  2874 ;; Defined at:
  2875 ;;		line 121 in file "lab3.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2, status,0, pclath, cstack
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2889 ;;      Params:         0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0
  2892 ;;      Totals:         0       0       0       0       0
  2893 ;;Total ram usage:        0 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    3
  2896 ;; This function calls:
  2897 ;;		_USART_lib_config
  2898 ;; This function is called by:
  2899 ;;		_main
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           
  2904                           ;psect for function _USART_config
  2905  06C6                     _USART_config:
  2906  06C6                     l1099:	
  2907                           ;incstack = 0
  2908                           ; Regs used in _USART_config: [wreg+status,2+status,0+pclath+cstack]
  2909                           
  2910                           
  2911                           ;lab3.c: 123:   USART_lib_config();
  2912  06C6  120A  118A  2678  120A  118A  	fcall	_USART_lib_config
  2913  06CB                     l168:
  2914  06CB  0008               	return
  2915  06CC                     __end_of_USART_config:
  2916                           
  2917                           	psect	text16
  2918  0678                     __ptext16:	
  2919 ;; *************** function _USART_lib_config *****************
  2920 ;; Defined at:
  2921 ;;		line 18 in file "./USART.h"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;		None
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2935 ;;      Params:         0       0       0       0       0
  2936 ;;      Locals:         0       0       0       0       0
  2937 ;;      Temps:          0       0       0       0       0
  2938 ;;      Totals:         0       0       0       0       0
  2939 ;;Total ram usage:        0 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; Hardware stack levels required when called:    2
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_USART_config
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           
  2950                           ;psect for function _USART_lib_config
  2951  0678                     _USART_lib_config:
  2952  0678                     l913:	
  2953                           ;incstack = 0
  2954                           ; Regs used in _USART_lib_config: [wreg]
  2955                           
  2956                           
  2957                           ;./USART.h: 20:     SPBRG = 57;
  2958  0678  3039               	movlw	57
  2959  0679  1683               	bsf	3,5	;RP0=1, select bank1
  2960  067A  1303               	bcf	3,6	;RP1=0, select bank1
  2961  067B  0099               	movwf	25	;volatile
  2962  067C                     l915:
  2963                           
  2964                           ;./USART.h: 22:     TXSTAbits.CSRC = 0;
  2965  067C  1398               	bcf	24,7	;volatile
  2966  067D                     l917:
  2967                           
  2968                           ;./USART.h: 23:     TXSTAbits.TX9 = 0;
  2969  067D  1318               	bcf	24,6	;volatile
  2970  067E                     l919:
  2971                           
  2972                           ;./USART.h: 24:     TXSTAbits.TXEN = 1;
  2973  067E  1698               	bsf	24,5	;volatile
  2974  067F                     l921:
  2975                           
  2976                           ;./USART.h: 25:     TXSTAbits.SYNC = 0;
  2977  067F  1218               	bcf	24,4	;volatile
  2978  0680                     l923:
  2979                           
  2980                           ;./USART.h: 26:     TXSTAbits.BRGH = 1;
  2981  0680  1518               	bsf	24,2	;volatile
  2982  0681                     l925:
  2983                           
  2984                           ;./USART.h: 27:     RCSTAbits.SPEN = 1;
  2985  0681  1283               	bcf	3,5	;RP0=0, select bank0
  2986  0682  1303               	bcf	3,6	;RP1=0, select bank0
  2987  0683  1798               	bsf	24,7	;volatile
  2988  0684                     l927:
  2989                           
  2990                           ;./USART.h: 28:     RCSTAbits.RX9 = 0;
  2991  0684  1318               	bcf	24,6	;volatile
  2992  0685                     l929:
  2993                           
  2994                           ;./USART.h: 29:     RCSTAbits.SREN = 0;
  2995  0685  1298               	bcf	24,5	;volatile
  2996  0686                     l931:
  2997                           
  2998                           ;./USART.h: 30:     RCSTAbits.CREN = 1;
  2999  0686  1618               	bsf	24,4	;volatile
  3000  0687                     l933:
  3001                           
  3002                           ;./USART.h: 31:     PIR1bits.RCIF = 0;
  3003  0687  128C               	bcf	12,5	;volatile
  3004  0688                     l935:
  3005                           
  3006                           ;./USART.h: 32:     PIR1bits.TXIF = 0;
  3007  0688  120C               	bcf	12,4	;volatile
  3008  0689                     l102:
  3009  0689  0008               	return
  3010  068A                     __end_of_USART_lib_config:
  3011                           
  3012                           	psect	text17
  3013  05E4                     __ptext17:	
  3014 ;; *************** function _Lcd_Write_String *****************
  3015 ;; Defined at:
  3016 ;;		line 107 in file "./Libreria2.h"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  a               1    wreg     PTR unsigned char 
  3019 ;;		 -> STR_5(9), STR_4(6), STR_3(6), STR_2(13), 
  3020 ;;		 -> STR_1(10), 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  a               1    7[COMMON] PTR unsigned char 
  3023 ;;		 -> STR_5(9), STR_4(6), STR_3(6), STR_2(13), 
  3024 ;;		 -> STR_1(10), 
  3025 ;;  i               2    5[COMMON] int 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3035 ;;      Params:         0       0       0       0       0
  3036 ;;      Locals:         3       0       0       0       0
  3037 ;;      Temps:          0       0       0       0       0
  3038 ;;      Totals:         3       0       0       0       0
  3039 ;;Total ram usage:        3 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    3
  3042 ;; This function calls:
  3043 ;;		_Lcd_Write_Char
  3044 ;; This function is called by:
  3045 ;;		_main
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           
  3050                           ;psect for function _Lcd_Write_String
  3051  05E4                     _Lcd_Write_String:
  3052                           
  3053                           ;incstack = 0
  3054                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3055                           ;Lcd_Write_String@a stored from wreg
  3056  05E4  00F7               	movwf	Lcd_Write_String@a
  3057  05E5                     l1713:
  3058                           
  3059                           ;./Libreria2.h: 107: ;./Libreria2.h: 108:     Lcd_Cmd(0x00);;./Libreria2.h: 109:     _de
      +                          lay((unsigned long)((15)*(9000000/4000.0)));;./Libreria2.h: 110: 
  3060  05E5  01F5               	clrf	Lcd_Write_String@i
  3061  05E6  01F6               	clrf	Lcd_Write_String@i+1
  3062  05E7  2DFB               	goto	l1719
  3063  05E8                     l1715:
  3064                           
  3065                           ;./Libreria2.h: 111: 
  3066  05E8  0875               	movf	Lcd_Write_String@i,w
  3067  05E9  0777               	addwf	Lcd_Write_String@a,w
  3068  05EA  0084               	movwf	4
  3069  05EB  120A  118A  2561  120A  118A  	fcall	stringdir
  3070  05F0  120A  118A  268A  120A  118A  	fcall	_Lcd_Write_Char
  3071  05F5                     l1717:
  3072  05F5  3001               	movlw	1
  3073  05F6  07F5               	addwf	Lcd_Write_String@i,f
  3074  05F7  1803               	skipnc
  3075  05F8  0AF6               	incf	Lcd_Write_String@i+1,f
  3076  05F9  3000               	movlw	0
  3077  05FA  07F6               	addwf	Lcd_Write_String@i+1,f
  3078  05FB                     l1719:
  3079  05FB  0875               	movf	Lcd_Write_String@i,w
  3080  05FC  0777               	addwf	Lcd_Write_String@a,w
  3081  05FD  0084               	movwf	4
  3082  05FE  120A  118A  2561  120A  118A  	fcall	stringdir
  3083  0603  3A00               	xorlw	0
  3084  0604  1D03               	skipz
  3085  0605  2E07               	goto	u1461
  3086  0606  2E08               	goto	u1460
  3087  0607                     u1461:
  3088  0607  2DE8               	goto	l1715
  3089  0608                     u1460:
  3090  0608                     l96:
  3091  0608  0008               	return
  3092  0609                     __end_of_Lcd_Write_String:
  3093                           
  3094                           	psect	text18
  3095  068A                     __ptext18:	
  3096 ;; *************** function _Lcd_Write_Char *****************
  3097 ;; Defined at:
  3098 ;;		line 99 in file "./Libreria2.h"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;  a               1    wreg     unsigned char 
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  a               1    4[COMMON] unsigned char 
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3112 ;;      Params:         0       0       0       0       0
  3113 ;;      Locals:         1       0       0       0       0
  3114 ;;      Temps:          1       0       0       0       0
  3115 ;;      Totals:         2       0       0       0       0
  3116 ;;Total ram usage:        2 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    2
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_Lcd_Write_String
  3123 ;;		_conversion
  3124 ;;		_Conversion1
  3125 ;;		_Conversion2
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function _Lcd_Write_Char
  3131  068A                     _Lcd_Write_Char:
  3132                           
  3133                           ;incstack = 0
  3134                           ; Regs used in _Lcd_Write_Char: [wreg]
  3135                           ;Lcd_Write_Char@a stored from wreg
  3136  068A  00F4               	movwf	Lcd_Write_Char@a
  3137  068B                     l1495:
  3138                           
  3139                           ;./Libreria2.h: 100:  for(i=0;a[i]!='\0';i++)
  3140  068B  1283               	bcf	3,5	;RP0=0, select bank0
  3141  068C  1303               	bcf	3,6	;RP1=0, select bank0
  3142  068D  1508               	bsf	8,2	;volatile
  3143  068E                     l1497:
  3144                           
  3145                           ;./Libreria2.h: 101:      Lcd_Write_Char(a[i]);
  3146  068E  0874               	movf	Lcd_Write_Char@a,w
  3147  068F  0086               	movwf	6	;volatile
  3148  0690                     l1499:
  3149                           
  3150                           ;./Libreria2.h: 102: }
  3151  0690  1588               	bsf	8,3	;volatile
  3152                           
  3153                           ;./Libreria2.h: 103: 
  3154  0691  301D               	movlw	29
  3155  0692  00F3               	movwf	??_Lcd_Write_Char
  3156  0693                     u1527:
  3157  0693  0BF3               	decfsz	??_Lcd_Write_Char,f
  3158  0694  2E93               	goto	u1527
  3159  0695  2E96               	nop2
  3160  0696                     l1501:
  3161                           
  3162                           ;./Libreria2.h: 104: void Lcd_Init(){
  3163  0696  1283               	bcf	3,5	;RP0=0, select bank0
  3164  0697  1303               	bcf	3,6	;RP1=0, select bank0
  3165  0698  1188               	bcf	8,3	;volatile
  3166  0699                     l90:
  3167  0699  0008               	return
  3168  069A                     __end_of_Lcd_Write_Char:
  3169                           
  3170                           	psect	text19
  3171  052B                     __ptext19:	
  3172 ;; *************** function _Lcd_Init *****************
  3173 ;; Defined at:
  3174 ;;		line 114 in file "./Libreria2.h"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;		None
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;		None
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      void 
  3181 ;; Registers used:
  3182 ;;		wreg, status,2, status,0, pclath, cstack
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3188 ;;      Params:         0       0       0       0       0
  3189 ;;      Locals:         0       0       0       0       0
  3190 ;;      Temps:          2       0       0       0       0
  3191 ;;      Totals:         2       0       0       0       0
  3192 ;;Total ram usage:        2 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    3
  3195 ;; This function calls:
  3196 ;;		_Lcd_Cmd
  3197 ;; This function is called by:
  3198 ;;		_main
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           
  3203                           ;psect for function _Lcd_Init
  3204  052B                     _Lcd_Init:
  3205  052B                     l1721:	
  3206                           ;incstack = 0
  3207                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3208                           
  3209                           
  3210                           ;./Libreria2.h: 116:     Lcd_Cmd(0x0D);
  3211  052B  1283               	bcf	3,5	;RP0=0, select bank0
  3212  052C  1303               	bcf	3,6	;RP1=0, select bank0
  3213  052D  1108               	bcf	8,2	;volatile
  3214  052E                     l1723:
  3215                           
  3216                           ;./Libreria2.h: 118:     Lcd_Cmd(0x06);
  3217  052E  3000               	movlw	0
  3218  052F  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  3219  0534                     l1725:
  3220                           
  3221                           ;./Libreria2.h: 119: 
  3222  0534  302C               	movlw	44
  3223  0535  00F7               	movwf	??_Lcd_Init+1
  3224  0536  30D3               	movlw	211
  3225  0537  00F6               	movwf	??_Lcd_Init
  3226  0538                     u1537:
  3227  0538  0BF6               	decfsz	??_Lcd_Init,f
  3228  0539  2D38               	goto	u1537
  3229  053A  0BF7               	decfsz	??_Lcd_Init+1,f
  3230  053B  2D38               	goto	u1537
  3231  053C  2D3D               	nop2
  3232  053D                     l1727:
  3233  053D  3030               	movlw	48
  3234  053E  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  3235  0543  3077               	movlw	119
  3236  0544  00F6               	movwf	??_Lcd_Init
  3237  0545                     u1547:
  3238  0545  0BF6               	decfsz	??_Lcd_Init,f
  3239  0546  2D45               	goto	u1547
  3240  0547  2D48               	nop2
  3241  0548                     l1729:
  3242  0548  3038               	movlw	56
  3243  0549  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  3244  054E                     l1731:
  3245  054E  300D               	movlw	13
  3246  054F  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  3247  0554                     l1733:
  3248  0554  3001               	movlw	1
  3249  0555  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  3250  055A                     l1735:
  3251  055A  3006               	movlw	6
  3252  055B  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  3253  0560                     l99:
  3254  0560  0008               	return
  3255  0561                     __end_of_Lcd_Init:
  3256                           
  3257                           	psect	text20
  3258  069A                     __ptext20:	
  3259 ;; *************** function _Lcd_Clear *****************
  3260 ;; Defined at:
  3261 ;;		line 73 in file "./Libreria2.h"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  2   80[None  ] int 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0, pclath, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3275 ;;      Params:         0       0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0
  3277 ;;      Temps:          0       0       0       0       0
  3278 ;;      Totals:         0       0       0       0       0
  3279 ;;Total ram usage:        0 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; Hardware stack levels required when called:    3
  3282 ;; This function calls:
  3283 ;;		_Lcd_Cmd
  3284 ;; This function is called by:
  3285 ;;		_main
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           
  3290                           ;psect for function _Lcd_Clear
  3291  069A                     _Lcd_Clear:
  3292  069A                     l1711:	
  3293                           ;incstack = 0
  3294                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3295                           
  3296                           
  3297                           ;./Libreria2.h: 74: 
  3298  069A  3000               	movlw	0
  3299  069B  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  3300                           
  3301                           ;./Libreria2.h: 75: 
  3302  06A0  3001               	movlw	1
  3303  06A1  120A  118A  2665  120A  118A  	fcall	_Lcd_Cmd
  3304  06A6                     l81:
  3305  06A6  0008               	return
  3306  06A7                     __end_of_Lcd_Clear:
  3307                           
  3308                           	psect	text21
  3309  0665                     __ptext21:	
  3310 ;; *************** function _Lcd_Cmd *****************
  3311 ;; Defined at:
  3312 ;;		line 64 in file "./Libreria2.h"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  a               1    wreg     unsigned char 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  a               1    5[COMMON] unsigned char 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      void 
  3319 ;; Registers used:
  3320 ;;		wreg
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3326 ;;      Params:         0       0       0       0       0
  3327 ;;      Locals:         1       0       0       0       0
  3328 ;;      Temps:          2       0       0       0       0
  3329 ;;      Totals:         3       0       0       0       0
  3330 ;;Total ram usage:        3 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    2
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_Lcd_Clear
  3337 ;;		_Lcd_Set_Cursor
  3338 ;;		_Lcd_Init
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           
  3343                           ;psect for function _Lcd_Cmd
  3344  0665                     _Lcd_Cmd:
  3345                           
  3346                           ;incstack = 0
  3347                           ; Regs used in _Lcd_Cmd: [wreg]
  3348                           ;Lcd_Cmd@a stored from wreg
  3349  0665  00F5               	movwf	Lcd_Cmd@a
  3350  0666                     l1487:
  3351                           
  3352                           ;./Libreria2.h: 65:  Lcd_Cmd(1);
  3353  0666  1283               	bcf	3,5	;RP0=0, select bank0
  3354  0667  1303               	bcf	3,6	;RP1=0, select bank0
  3355  0668  1108               	bcf	8,2	;volatile
  3356  0669                     l1489:
  3357                           
  3358                           ;./Libreria2.h: 66: }
  3359  0669  0875               	movf	Lcd_Cmd@a,w
  3360  066A  0086               	movwf	6	;volatile
  3361  066B                     l1491:
  3362                           
  3363                           ;./Libreria2.h: 67: 
  3364  066B  1588               	bsf	8,3	;volatile
  3365                           
  3366                           ;./Libreria2.h: 68: void Lcd_Set_Cursor(char a, char b)
  3367  066C  300C               	movlw	12
  3368  066D  00F4               	movwf	??_Lcd_Cmd+1
  3369  066E  30AF               	movlw	175
  3370  066F  00F3               	movwf	??_Lcd_Cmd
  3371  0670                     u1557:
  3372  0670  0BF3               	decfsz	??_Lcd_Cmd,f
  3373  0671  2E70               	goto	u1557
  3374  0672  0BF4               	decfsz	??_Lcd_Cmd+1,f
  3375  0673  2E70               	goto	u1557
  3376  0674                     l1493:
  3377                           
  3378                           ;./Libreria2.h: 69: {
  3379  0674  1283               	bcf	3,5	;RP0=0, select bank0
  3380  0675  1303               	bcf	3,6	;RP1=0, select bank0
  3381  0676  1188               	bcf	8,3	;volatile
  3382  0677                     l78:
  3383  0677  0008               	return
  3384  0678                     __end_of_Lcd_Cmd:
  3385                           
  3386                           	psect	text22
  3387  0609                     __ptext22:	
  3388 ;; *************** function _ISR *****************
  3389 ;; Defined at:
  3390 ;;		line 63 in file "lab3.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;		None
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      void 
  3397 ;; Registers used:
  3398 ;;		wreg, pclath, cstack
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3404 ;;      Params:         0       0       0       0       0
  3405 ;;      Locals:         0       0       0       0       0
  3406 ;;      Temps:          3       0       0       0       0
  3407 ;;      Totals:         3       0       0       0       0
  3408 ;;Total ram usage:        3 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:    1
  3411 ;; This function calls:
  3412 ;;		_revisa_char
  3413 ;; This function is called by:
  3414 ;;		Interrupt level 1
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           
  3419                           ;psect for function _ISR
  3420  0609                     _ISR:
  3421  0609                     i1l1445:
  3422                           
  3423                           ;lab3.c: 65:      if (PIR1bits.ADIF ==1){
  3424  0609  1283               	bcf	3,5	;RP0=0, select bank0
  3425  060A  1303               	bcf	3,6	;RP1=0, select bank0
  3426  060B  1F0C               	btfss	12,6	;volatile
  3427  060C  2E0E               	goto	u101_21
  3428  060D  2E0F               	goto	u101_20
  3429  060E                     u101_21:
  3430  060E  2E18               	goto	i1l1451
  3431  060F                     u101_20:
  3432  060F                     i1l1447:
  3433                           
  3434                           ;lab3.c: 66:         PIR1bits.ADIF = 0;
  3435  060F  130C               	bcf	12,6	;volatile
  3436  0610                     i1l1449:
  3437                           
  3438                           ;lab3.c: 68:         c = ADRESH;
  3439  0610  081E               	movf	30,w	;volatile
  3440  0611  00F0               	movwf	??_ISR
  3441  0612  0870               	movf	??_ISR,w
  3442  0613  00D9               	movwf	_c
  3443                           
  3444                           ;lab3.c: 69:         b = ADRESH;
  3445  0614  081E               	movf	30,w	;volatile
  3446  0615  00F0               	movwf	??_ISR
  3447  0616  0870               	movf	??_ISR,w
  3448  0617  00D8               	movwf	_b
  3449  0618                     i1l1451:
  3450                           
  3451                           ;lab3.c: 72:     if (PIR1bits.RCIF == 1)
  3452  0618  1E8C               	btfss	12,5	;volatile
  3453  0619  2E1B               	goto	u102_21
  3454  061A  2E1C               	goto	u102_20
  3455  061B                     u102_21:
  3456  061B  2E27               	goto	i1l147
  3457  061C                     u102_20:
  3458  061C                     i1l1453:
  3459                           
  3460                           ;lab3.c: 73:     {;lab3.c: 74:         revisa = revisa_char();
  3461  061C  120A  118A  26A7  120A  118A  	fcall	_revisa_char
  3462  0621  00F0               	movwf	??_ISR
  3463  0622  0870               	movf	??_ISR,w
  3464  0623  1283               	bcf	3,5	;RP0=0, select bank0
  3465  0624  1303               	bcf	3,6	;RP1=0, select bank0
  3466  0625  00CB               	movwf	_revisa
  3467  0626                     i1l1455:
  3468                           
  3469                           ;lab3.c: 75:         PIR1bits.RCIF = 0;
  3470  0626  128C               	bcf	12,5	;volatile
  3471  0627                     i1l147:
  3472  0627  0872               	movf	??_ISR+2,w
  3473  0628  008A               	movwf	10
  3474  0629  0E71               	swapf	??_ISR+1,w
  3475  062A  0083               	movwf	3
  3476  062B  0EFE               	swapf	btemp,f
  3477  062C  0E7E               	swapf	btemp,w
  3478  062D  0009               	retfie
  3479  062E                     __end_of_ISR:
  3480                           
  3481                           	psect	intentry
  3482  0004                     __pintentry:	
  3483                           ;incstack = 0
  3484                           ; Regs used in _ISR: [wreg+pclath+cstack]
  3485                           
  3486  0004                     interrupt_function:
  3487  007E                     saved_w	set	btemp
  3488  0004  00FE               	movwf	btemp
  3489  0005  0E03               	swapf	3,w
  3490  0006  00F1               	movwf	??_ISR+1
  3491  0007  080A               	movf	10,w
  3492  0008  00F2               	movwf	??_ISR+2
  3493  0009  120A  118A  2E09   	ljmp	_ISR
  3494                           
  3495                           	psect	text23
  3496  06A7                     __ptext23:	
  3497 ;; *************** function _revisa_char *****************
  3498 ;; Defined at:
  3499 ;;		line 110 in file "lab3.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      unsigned char 
  3506 ;; Registers used:
  3507 ;;		wreg
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3513 ;;      Params:         0       0       0       0       0
  3514 ;;      Locals:         0       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0
  3516 ;;      Totals:         0       0       0       0       0
  3517 ;;Total ram usage:        0 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; This function calls:
  3520 ;;		Nothing
  3521 ;; This function is called by:
  3522 ;;		_ISR
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           
  3527                           ;psect for function _revisa_char
  3528  06A7                     _revisa_char:
  3529  06A7                     i1l1415:	
  3530                           ;incstack = 0
  3531                           ; Regs used in _revisa_char: [wreg]
  3532                           
  3533                           
  3534                           ;lab3.c: 112:     if (RCSTAbits.OERR ==0)
  3535  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  3536  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  3537  06A9  1898               	btfsc	24,1	;volatile
  3538  06AA  2EAC               	goto	u96_21
  3539  06AB  2EAD               	goto	u96_20
  3540  06AC                     u96_21:
  3541  06AC  2EB2               	goto	i1l1419
  3542  06AD                     u96_20:
  3543  06AD                     i1l1417:
  3544                           
  3545                           ;lab3.c: 113:     {;lab3.c: 114:         CREN = 0;
  3546  06AD  1218               	bcf	24,4	;volatile
  3547                           
  3548                           ;lab3.c: 115:         __nop();
  3549  06AE  0000               	nop
  3550                           
  3551                           ;lab3.c: 116:         CREN = 1;
  3552  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  3553  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  3554  06B1  1618               	bsf	24,4	;volatile
  3555  06B2                     i1l1419:
  3556                           
  3557                           ;lab3.c: 118:     return (RCREG);
  3558  06B2  081A               	movf	26,w	;volatile
  3559  06B3                     i1l165:
  3560  06B3  0008               	return
  3561  06B4                     __end_of_revisa_char:
  3562  007E                     btemp	set	126	;btemp
  3563  007E                     wtemp0	set	126
  3564                           
  3565                           	psect	config
  3566                           
  3567                           ;Config register CONFIG1 @ 0x2007
  3568                           ;	Oscillator Selection bits
  3569                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3570                           ;	Watchdog Timer Enable bit
  3571                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3572                           ;	Power-up Timer Enable bit
  3573                           ;	PWRTE = OFF, PWRT disabled
  3574                           ;	RE3/MCLR pin function select bit
  3575                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3576                           ;	Code Protection bit
  3577                           ;	CP = OFF, Program memory code protection is disabled
  3578                           ;	Data Code Protection bit
  3579                           ;	CPD = OFF, Data memory code protection is disabled
  3580                           ;	Brown Out Reset Selection bits
  3581                           ;	BOREN = OFF, BOR disabled
  3582                           ;	Internal External Switchover bit
  3583                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3584                           ;	Fail-Safe Clock Monitor Enabled bit
  3585                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3586                           ;	Low Voltage Programming Enable bit
  3587                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3588                           ;	In-Circuit Debugger Mode bit
  3589                           ;	DEBUG = 0x1, unprogrammed default
  3590  2007                     	org	8199
  3591  2007  20D4               	dw	8404
  3592                           
  3593                           ;Config register CONFIG2 @ 0x2008
  3594                           ;	Brown-out Reset Selection bit
  3595                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3596                           ;	Flash Program Memory Self Write Enable bits
  3597                           ;	WRT = OFF, Write protection off
  3598  2008                     	org	8200
  3599  2008  3FFF               	dw	16383

Data Sizes:
    Strings     44
    Constant    0
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     31      58
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_5(CODE[9]), STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _conversion->_Lcd_Set_Cursor
    _conversion->___awdiv
    _conversion->___awmod
    ___xxtofl->___awdiv
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Conversion2->___awdiv
    _Conversion2->___awmod
    _display3->_dato_char
    _display2->_dato_char
    _Conversion1->___awdiv
    _Conversion1->___awmod
    _display1->_dato_char
    ___awdiv->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_conversion
    _conversion->___xxtofl
    ___xxtofl->___awdiv
    _Conversion2->___awdiv
    _Conversion1->___awdiv
    ___awdiv->___wmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   12983
                                             28 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                       _USART_config
                             _config
                         _conversion
 ---------------------------------------------------------------------------------
 (1) _conversion                                           4     4      0   11547
                                             24 BANK0      4     4      0
                        _Conversion1
                        _Conversion2
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                             ___wmul
                           ___xxtofl
                       _contador_lcd
 ---------------------------------------------------------------------------------
 (2) _contador_lcd                                         1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                             10 BANK0     14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     496
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    1033
                                              6 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Conversion2                                          3     3      0    3131
                                             10 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                           _display2
                           _display3
 ---------------------------------------------------------------------------------
 (3) _display3                                             0     0      0      31
                          _dato_char
 ---------------------------------------------------------------------------------
 (3) _display2                                             0     0      0      31
                          _dato_char
 ---------------------------------------------------------------------------------
 (2) _Conversion1                                          3     3      0    3100
                                             10 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                           _display1
 ---------------------------------------------------------------------------------
 (3) _display1                                             0     0      0      31
                          _dato_char
 ---------------------------------------------------------------------------------
 (4) _dato_char                                            1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1333
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1705
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_config                                         0     0      0       0
                   _USART_lib_config
 ---------------------------------------------------------------------------------
 (2) _USART_lib_config                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     341
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      31
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      31
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      31
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      31
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                        _revisa_char
 ---------------------------------------------------------------------------------
 (6) _revisa_char                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _USART_config
     _USART_lib_config
   _config
   _conversion
     _Conversion1
       _Lcd_Write_Char
       ___awdiv
         ___wmul (ARG)
       ___awmod
       _display1
         _dato_char
     _Conversion2
       _Lcd_Write_Char
       ___awdiv
         ___wmul (ARG)
       ___awmod
       _display2
         _dato_char
       _display3
         _dato_char
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_Char
     ___awdiv
       ___wmul (ARG)
     ___awmod
     ___wmul
     ___xxtofl
       ___awdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     _contador_lcd

 _ISR (ROOT)
   _revisa_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      45       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      3A       5       72.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      45      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 12 23:00:01 2021

                        _a 0047                          _b 0058                          _c 0059  
                        pc 0002                         l81 06A6                         l90 0699  
                       l75 0664                         l78 0677                         l87 05E3  
                       l96 0608                         l99 0560               ___awdiv@sign 0027  
                       _w1 0049                         _w2 0048                         fsr 0004  
      ___wmul@multiplicand 0075                        l102 0689                        l161 06BD  
                      l158 06B9                        l182 0285                        l168 06CB  
                      l176 013A                        l185 052A                        l193 04A2  
                      l451 0453                        l179 030F                        l188 04E6  
                      l285 05A3                        l438 03F8                        l287 05BD  
                      l199 0649                        l720 01F6                        l731 01C0  
                      l732 01CC                        l724 01A4                        l718 015F  
                      l921 067F                        l913 0678                        l931 0686  
                      l923 0680                        l915 067C                        l933 0687  
                      l925 0681                        l917 067D                        l935 0688  
                      l927 0684                        l919 067E                        l929 0685  
                      _ISR 0609           _USART_lib_config 0678              ??_Conversion1 002A  
            ??_Conversion2 002A                        fsr0 0004                        indf 0000  
             ___awmod@sign 0021                       ?_ISR 0070                       l1041 064A  
                     l1051 0657                       l1043 064E                       l1061 0660  
                     l1053 0658                       l1045 0652                       l1063 0661  
                     l1055 065B                       l1047 0653                       l1057 065E  
                     l1049 0654                       l1059 065F                       l1501 0696  
                     l1503 04E7                       l1511 047E                       l1521 039E  
                     l1513 0390                       l1505 04A3                       l1601 05D2  
                     l1099 06C6                       l1531 03B3                       l1523 03A2  
                     l1515 0393                       l1611 02E5                       l1507 0454  
                     l1603 05D8              ?_contador_lcd 0070                       l1541 03D6  
                     l1533 03B6                       l1525 03A7                       l1517 0397  
                     l1621 030A                       l1613 02EC                       l1509 045C  
                     l1605 05DD                       l1701 01E4                       l1711 069A  
                     l1551 03EF                       l1543 03DC                       l1535 03BD  
                     l1527 03AB                       l1519 039C                       l1615 02F2  
                     l1607 0286                       l1631 0263                       l1623 01F7  
                     l1703 01E9                       l1721 052B                       l1713 05E5  
                     l1553 03F4                       l1545 03DD                       l1537 03C1  
                     l1529 03AD                       l1561 0400                       l1617 02FB  
                     l1609 02E1                       l1633 026C                       l1625 0252  
                     l1705 01ED                       l1641 062E                       l1491 066B  
                     l1731 054E                       l1723 052E                       l1715 05E8  
                     l1547 03E4                       l1539 03C5                       l1571 0416  
                     l1563 0405                       l1619 0304                       l1635 0275  
                     l1627 0256                       l1707 01EE                       l1643 0636  
                     l1493 0674                       l1733 0554                       l1725 0534  
                     l1717 05F5                       l1549 03EA                       l1581 0432  
                     l1573 0419                       l1565 0407                       l1557 03F9  
                     l1485 06B5                       l1637 027B                       l1629 025D  
                     l1661 05B1                       l1653 0593                       l1645 063B  
                     l1741 002F                       l1487 0666                       l1735 055A  
                     l1727 053D                       l1495 068B                       l1719 05FB  
                     l1591 044F                       l1583 0438                       l1575 0420  
                     l1567 040B                       l1559 03FC                       l1639 0280  
                     l1663 05B7                       l1655 0597                       l1671 0147  
                     l1647 063D                       l1751 00D0                       l1743 0034  
                     l1489 0669                       l1729 0548                       l1497 068E  
                     l1585 043F                       l1577 0424                       l1569 0410  
                     l1657 059B                       l1681 0175                       l1673 0157  
                     l1649 0643                       l1753 00D8                       l1745 007B  
                     l1737 0022                       l1761 0322                       l1499 0690  
                     l1579 0428                       l1587 0445                       l1595 05C1  
                     l1659 05AA                       l1691 01AB                       l1683 0182  
                     l1675 0167                       l1667 013E                       l1755 00EC  
                     l1747 007F                       l1739 002B                       l1771 0351  
                     l1763 0328                       l1589 044A                       l1597 05C6  
                     l1693 01B6                       l1685 0189                       l1669 0143  
                     l1757 00F2                       l1749 00C8                       l1781 037B  
                     l1773 0357                       l1765 0336                       l1599 05CB  
                     l1695 01BA                       l1687 018D                       l1679 0170  
                     l1783 0380                       l1775 0363                       l1767 0344  
                     l1759 0310                       l1697 01C4                       l1689 019B  
                     l1785 0386                       l1777 0369                       l1769 0349  
                     l1699 01CE                       l1779 0375                       STR_1 0574  
                     STR_2 0567                       STR_3 0587                       STR_4 058D  
                     STR_5 057E                       _CREN 00C4                       u1110 03D6  
                     u1030 06BD                       u1111 03D5                       u1031 06BC  
                     u1200 0432                       u1040 045C                       u1105 03C6  
                     u1201 0431                       u1041 045B                       u1130 03EA  
                     u1050 0397                       u1131 03E9                       u1115 03D2  
                     u1051 0396                       u1140 03EF                       u1060 03A2  
                     u1220 0445                       u1141 03EE                       u1125 03DE  
                     u1061 03A1                       u1221 0444                       u1205 042E  
                     u1070 03B3                       u1230 044A                       u1150 0400  
                     u1310 05B7                       u1071 03B2                       u1231 0449  
                     u1215 0439                       u1151 03FF                       u1311 05B6  
                     u1160 040B                       u1240 05C6                       u1400 01BA  
                     u1320 0143                       u1161 040A                       u1241 05C5  
                     u1305 05AB                       u1401 01B9                       u1321 0142  
                     u1090 03C5                       u1170 0416                       u1250 05D8  
                     u1410 01C0                       u1330 0147                       u1091 03C4  
                     u1171 0415                       u1251 05D7                       u1411 01BF  
                     u1331 0146                       u1420 01C4                       u1340 0167  
                     u1260 0636                       u1500 00F2                       u1085 03B7  
                     u1421 01C3                       u1341 0166                       u1261 0635  
                     u1501 00F1                       u1190 0428                       u1430 01D9  
                     u1270 0643                       u1191 0427                       u1271 0642  
                     u1280 059B                       u1440 01E9                       u1360 0188  
                     u1185 041A                       u1281 059A                       u1441 01E8  
                     u1361 0187                       u1450 01ED                       u1451 01EC  
                     u1435 01D4                       u1355 017A                       u1460 0608  
                     u1380 01AA                       u1461 0607                       u1381 01A9  
                     u1517 033E                       u1470 002F                       u1527 0693  
                     u1295 05A4                       u1375 019C                       u1471 002E  
                     u1480 0034                       u1537 0538                       u1481 0033  
                     u1490 00D8                       u1547 0545                       u1395 01AF  
                     u1491 00D7                       u1557 0670          ?_Lcd_Write_String 0070  
                     _main 0310                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0678                      ??_ISR 0070  
                    ?_main 0070            __end_of___awdiv 03F9            __end_of___awmod 0454  
                    _ANSEL 0188            ___awdiv@divisor 0022                      i1l147 0627  
                    i1l165 06B3            ___awdiv@counter 0026                      _RCREG 001A  
                    _SPBRG 0099                      _PORTB 0006    __size_of_Lcd_Set_Cursor 0026  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    u96_20 06AD                      u96_21 06AC                      _TXREG 0019  
           ??_contador_lcd 0073                      _valor 004A                      _vpot1 0043  
                    _vpot2 003F        __end_of_Conversion1 0310        __end_of_Conversion2 0286  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0561            __initialization 000F             dato_char@valor 0073  
             __end_of_main 0390                     ??_main 003C         __size_of_Lcd_Clear 000D  
                   _ADRESH 001E           ___awdiv@dividend 0024                     _ANSELH 0189  
                   u101_20 060F                     u101_21 060E                     u102_20 061C  
                   u102_21 061B                     i1l1415 06A7                     i1l1417 06AD  
                   i1l1419 06B2                     i1l1451 0618                     i1l1453 061C  
                   i1l1445 0609                     i1l1455 0626                     i1l1447 060F  
                   i1l1449 0610                  ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 0010  
         __end_of___xxtofl 01F7           __end_of_display1 052B           __end_of_display2 04E7  
         __end_of_display3 04A3                     ___wmul 0593                  ??___awdiv 0077  
                ??___awmod 0077                     _config 064A                     _buffer 0057  
             ?_revisa_char 0070           ___awdiv@quotient 0028            ___awmod@divisor 0073  
                   _revisa 004B            ___awmod@counter 0020                _Conversion1 0286  
              _Conversion2 01F7                     saved_w 007E            Lcd_Set_Cursor@a 0020  
          Lcd_Set_Cursor@b 0076               ___xxtofl@arg 0034               ___xxtofl@exp 0033  
             ___xxtofl@val 002A    __end_of__initialization 001B          __end_of_Lcd_Clear 06A7  
 __end_of_USART_lib_config 068A             __pcstackCOMMON 0070       __end_of_contador_lcd 064A  
       __size_of_dato_char 000A             _Lcd_Set_Cursor 05BE                  ?_Lcd_Init 0070  
               __pbssBANK0 003F                 __pmaintext 0310                    ?___wmul 0073  
               __pintentry 0004                    ?_config 0070  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 05E4                  ?___xxtofl 002A                 ??_Lcd_Init 0076  
                ?_display1 0070                  ?_display2 0070                  ?_display3 0070  
               __stringtab 0561             _Lcd_Write_Char 068A                    _Lcd_Cmd 0665  
               _conversion 001F          __end_of_dato_char 06BE                    ___awdiv 0390  
                  ___awmod 03F9            __size_of___wmul 002B            __size_of_config 001B  
                _ANSELbits 0188            ?_Lcd_Set_Cursor 0076                    __ptext1 001F  
                  __ptext2 062E                    __ptext3 013B                    __ptext4 0593  
                  __ptext5 05BE                    __ptext6 01F7                    __ptext7 0454  
                  __ptext8 04A3                    __ptext9 0286       __size_of_revisa_char 000D  
             __size_of_ISR 0025                    _enterob 0078                    _enteroc 007A  
               ??___xxtofl 002E           ___awmod@dividend 0075                    clrloop0 06BF  
               ??_display1 0074                 ??_display2 0074                 ??_display3 0074  
   __end_of_Lcd_Write_Char 069A       end_of_initialization 001B      __size_of_contador_lcd 001C  
                _RCSTAbits 0018                 _velocidad1 004F                 _velocidad2 004E  
               _velocidad3 004D                  _PORTDbits 0008               ?_Conversion1 0070  
             ?_Conversion2 0070              ___xxtofl@sign 0032            ?_Lcd_Write_Char 0070  
             _contador_lcd 062E          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
              ?_conversion 0070                  _TXSTAbits 0098          ?_USART_lib_config 0070  
            ?_USART_config 0070                  _Lcd_Clear 069A         ??_USART_lib_config 0073  
           __end_of___wmul 05BE           _Lcd_Write_String 05E4             __end_of_config 0665  
      start_initialization 000F                __end_of_ISR 062E          __size_of_Lcd_Init 0036  
      conversion@puertoANL 003B             ??_USART_config 0073                 ?_Lcd_Clear 0070  
                 ??___wmul 0077                   ??_config 0073            Lcd_Write_Char@a 0074  
      __size_of_conversion 011C                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0020          __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070  
        __size_of_display1 0044          __size_of_display2 0044          __size_of_display3 004F  
                _dato_char 06B4                  _centena1b 0052                  _centena1c 0056  
                _centena2b 0050                  _centena2c 0054           ??_Lcd_Set_Cursor 0077  
                 ?___awdiv 0022                   ?___awmod 0073                  __pstrings 0561  
     __size_of_Conversion1 008A       __size_of_Conversion2 008F          interrupt_function 0004  
           ___wmul@product 0020                  clear_ram0 06BE                   _PIE1bits 008C  
                 Lcd_Cmd@a 0075                   _PIR1bits 000C                 ?_dato_char 0070  
              ??_Lcd_Clear 0076              ??_revisa_char 0070                 _ADCON0bits 001F  
              __stringbase 0566                 _ADCON1bits 009F          ___wmul@multiplier 0073  
         ??_Lcd_Write_Char 0073       __end_of_USART_config 06CC                   _Lcd_Init 052B  
 __end_of_Lcd_Write_String 0609               ??_conversion 0038           __size_of_Lcd_Cmd 0013  
         __size_of___awdiv 0069           __size_of___awmod 005B         __end_of__stringtab 0567  
__size_of_USART_lib_config 0012                   _decima1b 0053                   _decima1c 0079  
                 _decima2b 0051                   _decima2c 0055         __end_of_conversion 013B  
                 ___xxtofl 013B        __end_of_revisa_char 06B4                   __ptext10 04E7  
                 __ptext11 06B4                   __ptext20 069A                   __ptext12 03F9  
                 __ptext21 0665                   __ptext13 0390                   __ptext22 0609  
                 __ptext14 064A                   __ptext23 06A7                   __ptext15 06C6  
                 __ptext16 0678                   __ptext17 05E4                   __ptext18 068A  
                 __ptext19 052B                   _display1 04E7                   _display2 04A3  
                 _display3 0454                   _contador 004C              __size_of_main 0080  
              ??_dato_char 0073                 _INTCONbits 000B                   intlevel1 0000  
                stringcode 0561                _revisa_char 06A7         Lcd_Set_Cursor@temp 0021  
    __size_of_USART_config 0006                   stringdir 0561                   stringtab 0561  
             _USART_config 06C6  
