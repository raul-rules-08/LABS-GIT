

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 01:50:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285  0013                     _SSPBUF	set	19
   286  0014                     _SSPCON	set	20
   287  000C                     _PIR1bits	set	12
   288  000B                     _INTCONbits	set	11
   289  0008                     _PORTD	set	8
   290  0006                     _PORTB	set	6
   291  0005                     _PORTAbits	set	5
   292  0063                     _SSPIF	set	99
   293  0094                     _SSPSTATbits	set	148
   294  0094                     _SSPSTAT	set	148
   295  0085                     _TRISAbits	set	133
   296  008C                     _PIE1bits	set	140
   297  0085                     _TRISA	set	133
   298  0088                     _TRISD	set	136
   299  0086                     _TRISB	set	134
   300  043B                     _TRISC3	set	1083
   301  043D                     _TRISC5	set	1085
   302  0189                     _ANSELH	set	393
   303  0188                     _ANSEL	set	392
   304                           
   305                           	psect	cinit
   306  000F                     start_initialization:	
   307                           ; #config settings
   308                           
   309  000F                     __initialization:
   310                           
   311                           ; Clear objects allocated to COMMON
   312  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   313  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   314  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   315  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   316  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   317  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   318  0015                     end_of_initialization:	
   319                           ;End of C runtime variable initialization code
   320                           
   321  0015                     __end_of__initialization:
   322  0015  0183               	clrf	3
   323  0016  120A  118A  2819   	ljmp	_main	;jump to C main() function
   324                           
   325                           	psect	bssCOMMON
   326  0070                     __pbssCOMMON:
   327  0070                     _ANTIREBOTEA2:
   328  0070                     	ds	2
   329  0072                     _ADC:
   330  0072                     	ds	2
   331  0074                     _ANTIREBOTEA:
   332  0074                     	ds	2
   333                           
   334                           	psect	cstackCOMMON
   335  0076                     __pcstackCOMMON:
   336  0076                     ?_spiWrite:
   337  0076                     ??_spiWrite:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0076                     ?_setup:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0076                     ?_isr:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0076                     ?_main:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0076                     spiWrite@dat:	
   350                           ; 1 bytes @ 0x0
   351                           
   352                           
   353                           ; 1 bytes @ 0x0
   354  0076                     	ds	1
   355  0077                     ??_isr:
   356                           
   357                           ; 1 bytes @ 0x1
   358  0077                     	ds	2
   359  0079                     ??_spiInit:
   360  0079                     spiInit@sType:	
   361                           ; 1 bytes @ 0x3
   362                           
   363                           
   364                           ; 1 bytes @ 0x3
   365  0079                     	ds	1
   366  007A                     ??_setup:
   367  007A                     ??_main:	
   368                           ; 1 bytes @ 0x4
   369                           
   370                           
   371                           ; 1 bytes @ 0x4
   372  007A                     	ds	1
   373                           
   374                           	psect	cstackBANK0
   375  0020                     __pcstackBANK0:
   376  0020                     ?_spiInit:
   377  0020                     spiInit@sDataSample:	
   378                           ; 1 bytes @ 0x0
   379                           
   380                           
   381                           ; 1 bytes @ 0x0
   382  0020                     	ds	1
   383  0021                     spiInit@sClockIdle:
   384                           
   385                           ; 1 bytes @ 0x1
   386  0021                     	ds	1
   387  0022                     spiInit@sTransmitEdge:
   388                           
   389                           ; 1 bytes @ 0x2
   390  0022                     	ds	1
   391                           
   392                           	psect	maintext
   393  0019                     __pmaintext:	
   394 ;;
   395 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   396 ;;
   397 ;; *************** function _main *****************
   398 ;; Defined at:
   399 ;;		line 60 in file "Contador.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, status,2, status,0, pclath, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : B00/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   413 ;;      Params:         0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0
   415 ;;      Temps:          1       0       0       0       0
   416 ;;      Totals:         1       0       0       0       0
   417 ;;Total ram usage:        1 bytes
   418 ;; Hardware stack levels required when called:    4
   419 ;; This function calls:
   420 ;;		_setup
   421 ;; This function is called by:
   422 ;;		Startup code after reset
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           
   427                           ;psect for function _main
   428  0019                     _main:
   429  0019                     l851:	
   430                           ;incstack = 0
   431                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   432                           
   433                           
   434                           ;Contador.c: 61:     setup();
   435  0019  120A  118A  205E  120A  118A  	fcall	_setup
   436  001E                     l853:
   437                           
   438                           ;Contador.c: 67:       if (PORTAbits.RA0 == 1){
   439  001E  1283               	bcf	3,5	;RP0=0, select bank0
   440  001F  1303               	bcf	3,6	;RP1=0, select bank0
   441  0020  1C05               	btfss	5,0	;volatile
   442  0021  2823               	goto	u181
   443  0022  2824               	goto	u180
   444  0023                     u181:
   445  0023  2828               	goto	l857
   446  0024                     u180:
   447  0024                     l855:
   448                           
   449                           ;Contador.c: 68:            ANTIREBOTEA = 1;
   450  0024  3001               	movlw	1
   451  0025  00F4               	movwf	_ANTIREBOTEA
   452  0026  3000               	movlw	0
   453  0027  00F5               	movwf	_ANTIREBOTEA+1
   454  0028                     l857:
   455                           
   456                           ;Contador.c: 71:         if( PORTAbits.RA0 == 0 && ANTIREBOTEA ==1 ){
   457  0028  1805               	btfsc	5,0	;volatile
   458  0029  282B               	goto	u191
   459  002A  282C               	goto	u190
   460  002B                     u191:
   461  002B  283E               	goto	l867
   462  002C                     u190:
   463  002C                     l859:
   464  002C  0374               	decf	_ANTIREBOTEA,w
   465  002D  0475               	iorwf	_ANTIREBOTEA+1,w
   466  002E  1D03               	btfss	3,2
   467  002F  2831               	goto	u201
   468  0030  2832               	goto	u200
   469  0031                     u201:
   470  0031  283E               	goto	l867
   471  0032                     u200:
   472  0032                     l861:
   473                           
   474                           ;Contador.c: 72:             ANTIREBOTEA = 0;
   475  0032  01F4               	clrf	_ANTIREBOTEA
   476  0033  01F5               	clrf	_ANTIREBOTEA+1
   477  0034                     l863:
   478                           
   479                           ;Contador.c: 74:             ADC++;
   480  0034  3001               	movlw	1
   481  0035  07F2               	addwf	_ADC,f
   482  0036  1803               	skipnc
   483  0037  0AF3               	incf	_ADC+1,f
   484  0038  3000               	movlw	0
   485  0039  07F3               	addwf	_ADC+1,f
   486  003A                     l865:
   487                           
   488                           ;Contador.c: 75:             PORTB++;
   489  003A  3001               	movlw	1
   490  003B  00FA               	movwf	??_main
   491  003C  087A               	movf	??_main,w
   492  003D  0786               	addwf	6,f	;volatile
   493  003E                     l867:
   494                           
   495                           ;Contador.c: 81:        if(PORTAbits.RA1 == 1 ){
   496  003E  1C85               	btfss	5,1	;volatile
   497  003F  2841               	goto	u211
   498  0040  2842               	goto	u210
   499  0041                     u211:
   500  0041  2846               	goto	l871
   501  0042                     u210:
   502  0042                     l869:
   503                           
   504                           ;Contador.c: 82:             ANTIREBOTEA2= 1;
   505  0042  3001               	movlw	1
   506  0043  00F0               	movwf	_ANTIREBOTEA2
   507  0044  3000               	movlw	0
   508  0045  00F1               	movwf	_ANTIREBOTEA2+1
   509  0046                     l871:
   510                           
   511                           ;Contador.c: 86:        if(PORTAbits.RA1 == 0 && ANTIREBOTEA2 ==1){
   512  0046  1885               	btfsc	5,1	;volatile
   513  0047  2849               	goto	u221
   514  0048  284A               	goto	u220
   515  0049                     u221:
   516  0049  281E               	goto	l853
   517  004A                     u220:
   518  004A                     l873:
   519  004A  0370               	decf	_ANTIREBOTEA2,w
   520  004B  0471               	iorwf	_ANTIREBOTEA2+1,w
   521  004C  1D03               	btfss	3,2
   522  004D  284F               	goto	u231
   523  004E  2850               	goto	u230
   524  004F                     u231:
   525  004F  281E               	goto	l853
   526  0050                     u230:
   527  0050                     l875:
   528                           
   529                           ;Contador.c: 87:             ANTIREBOTEA2= 0;
   530  0050  01F0               	clrf	_ANTIREBOTEA2
   531  0051  01F1               	clrf	_ANTIREBOTEA2+1
   532  0052                     l877:
   533                           
   534                           ;Contador.c: 88:             ADC--;
   535  0052  30FF               	movlw	255
   536  0053  07F2               	addwf	_ADC,f
   537  0054  1803               	skipnc
   538  0055  0AF3               	incf	_ADC+1,f
   539  0056  30FF               	movlw	255
   540  0057  07F3               	addwf	_ADC+1,f
   541  0058                     l879:
   542                           
   543                           ;Contador.c: 89:             PORTB--;
   544  0058  3001               	movlw	1
   545  0059  0286               	subwf	6,f	;volatile
   546  005A  281E               	goto	l853
   547  005B  120A  118A  280C   	ljmp	start
   548  005E                     __end_of_main:
   549                           
   550                           	psect	text1
   551  005E                     __ptext1:	
   552 ;; *************** function _setup *****************
   553 ;; Defined at:
   554 ;;		line 104 in file "Contador.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0, pclath, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   568 ;;      Params:         0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0
   571 ;;      Totals:         0       0       0       0       0
   572 ;;Total ram usage:        0 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; Hardware stack levels required when called:    3
   575 ;; This function calls:
   576 ;;		_spiInit
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           
   583                           ;psect for function _setup
   584  005E                     _setup:
   585  005E                     l835:	
   586                           ;incstack = 0
   587                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   588                           
   589                           
   590                           ;Contador.c: 105:     ANSEL = 0;
   591  005E  1683               	bsf	3,5	;RP0=1, select bank3
   592  005F  1703               	bsf	3,6	;RP1=1, select bank3
   593  0060  0188               	clrf	8	;volatile
   594                           
   595                           ;Contador.c: 106:     ANSELH = 0;
   596  0061  0189               	clrf	9	;volatile
   597                           
   598                           ;Contador.c: 108:     TRISB = 0;
   599  0062  1683               	bsf	3,5	;RP0=1, select bank1
   600  0063  1303               	bcf	3,6	;RP1=0, select bank1
   601  0064  0186               	clrf	6	;volatile
   602                           
   603                           ;Contador.c: 109:     TRISD = 0;
   604  0065  0188               	clrf	8	;volatile
   605                           
   606                           ;Contador.c: 111:     PORTB = 0;
   607  0066  1283               	bcf	3,5	;RP0=0, select bank0
   608  0067  1303               	bcf	3,6	;RP1=0, select bank0
   609  0068  0186               	clrf	6	;volatile
   610                           
   611                           ;Contador.c: 112:     PORTD = 0;
   612  0069  0188               	clrf	8	;volatile
   613  006A                     l837:
   614                           
   615                           ;Contador.c: 113:     TRISA =0b00000011;
   616  006A  3003               	movlw	3
   617  006B  1683               	bsf	3,5	;RP0=1, select bank1
   618  006C  1303               	bcf	3,6	;RP1=0, select bank1
   619  006D  0085               	movwf	5	;volatile
   620  006E                     l839:
   621                           
   622                           ;Contador.c: 115:     INTCONbits.GIE = 1;
   623  006E  178B               	bsf	11,7	;volatile
   624  006F                     l841:
   625                           
   626                           ;Contador.c: 116:     INTCONbits.PEIE = 1;
   627  006F  170B               	bsf	11,6	;volatile
   628  0070                     l843:
   629                           
   630                           ;Contador.c: 117:     PIR1bits.SSPIF = 0;
   631  0070  1283               	bcf	3,5	;RP0=0, select bank0
   632  0071  1303               	bcf	3,6	;RP1=0, select bank0
   633  0072  118C               	bcf	12,3	;volatile
   634  0073                     l845:
   635                           
   636                           ;Contador.c: 118:     PIE1bits.SSPIE = 1;
   637  0073  1683               	bsf	3,5	;RP0=1, select bank1
   638  0074  1303               	bcf	3,6	;RP1=0, select bank1
   639  0075  158C               	bsf	12,3	;volatile
   640  0076                     l847:
   641                           
   642                           ;Contador.c: 119:     TRISAbits.TRISA5 = 1;
   643  0076  1685               	bsf	5,5	;volatile
   644  0077                     l849:
   645                           
   646                           ;Contador.c: 121:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
   647  0077  1283               	bcf	3,5	;RP0=0, select bank0
   648  0078  1303               	bcf	3,6	;RP1=0, select bank0
   649  0079  01A0               	clrf	spiInit@sDataSample
   650  007A  01A1               	clrf	spiInit@sClockIdle
   651  007B  01A2               	clrf	spiInit@sTransmitEdge
   652  007C  3024               	movlw	36
   653  007D  120A  118A  2083  120A  118A  	fcall	_spiInit
   654  0082                     l59:
   655  0082  0008               	return
   656  0083                     __end_of_setup:
   657                           
   658                           	psect	text2
   659  0083                     __ptext2:	
   660 ;; *************** function _spiInit *****************
   661 ;; Defined at:
   662 ;;		line 10 in file "SPI.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;  sType           1    wreg     enum E1264
   665 ;;  sDataSample     1    0[BANK0 ] enum E1272
   666 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   667 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   668 ;; Auto vars:     Size  Location     Type
   669 ;;  sType           1    3[COMMON] enum E1264
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, status,2, status,0
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   679 ;;      Params:         0       3       0       0       0
   680 ;;      Locals:         1       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0
   682 ;;      Totals:         1       3       0       0       0
   683 ;;Total ram usage:        4 bytes
   684 ;; Hardware stack levels used:    1
   685 ;; Hardware stack levels required when called:    2
   686 ;; This function calls:
   687 ;;		Nothing
   688 ;; This function is called by:
   689 ;;		_setup
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           
   694                           ;psect for function _spiInit
   695  0083                     _spiInit:
   696                           
   697                           ;incstack = 0
   698                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   699                           ;spiInit@sType stored from wreg
   700  0083  00F9               	movwf	spiInit@sType
   701  0084                     l825:
   702                           
   703                           ;SPI.c: 10: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 11: {;SPI.c: 12:     TRISC5 = 0;
   704  0084  1683               	bsf	3,5	;RP0=1, select bank1
   705  0085  1303               	bcf	3,6	;RP1=0, select bank1
   706  0086  1287               	bcf	7,5	;volatile
   707                           
   708                           ;SPI.c: 13:     if(sType & 0b00000100)
   709  0087  1D79               	btfss	spiInit@sType,2
   710  0088  288A               	goto	u171
   711  0089  288B               	goto	u170
   712  008A                     u171:
   713  008A  2893               	goto	l831
   714  008B                     u170:
   715  008B                     l827:
   716                           
   717                           ;SPI.c: 14:     {;SPI.c: 15:         SSPSTAT = sTransmitEdge;
   718  008B  1283               	bcf	3,5	;RP0=0, select bank0
   719  008C  1303               	bcf	3,6	;RP1=0, select bank0
   720  008D  0822               	movf	spiInit@sTransmitEdge,w
   721  008E  1683               	bsf	3,5	;RP0=1, select bank1
   722  008F  1303               	bcf	3,6	;RP1=0, select bank1
   723  0090  0094               	movwf	20	;volatile
   724  0091                     l829:
   725                           
   726                           ;SPI.c: 16:         TRISC3 = 1;
   727  0091  1587               	bsf	7,3	;volatile
   728                           
   729                           ;SPI.c: 17:     }
   730  0092  289B               	goto	l81
   731  0093                     l831:
   732                           
   733                           ;SPI.c: 19:     {;SPI.c: 20:         SSPSTAT = sDataSample | sTransmitEdge;
   734  0093  1283               	bcf	3,5	;RP0=0, select bank0
   735  0094  1303               	bcf	3,6	;RP1=0, select bank0
   736  0095  0820               	movf	spiInit@sDataSample,w
   737  0096  0422               	iorwf	spiInit@sTransmitEdge,w
   738  0097  1683               	bsf	3,5	;RP0=1, select bank1
   739  0098  1303               	bcf	3,6	;RP1=0, select bank1
   740  0099  0094               	movwf	20	;volatile
   741  009A                     l833:
   742                           
   743                           ;SPI.c: 21:         TRISC3 = 0;
   744  009A  1187               	bcf	7,3	;volatile
   745  009B                     l81:	
   746                           ;SPI.c: 22:     }
   747                           
   748                           
   749                           ;SPI.c: 24:     SSPCON = sType | sClockIdle;
   750  009B  0879               	movf	spiInit@sType,w
   751  009C  1283               	bcf	3,5	;RP0=0, select bank0
   752  009D  1303               	bcf	3,6	;RP1=0, select bank0
   753  009E  0421               	iorwf	spiInit@sClockIdle,w
   754  009F  0094               	movwf	20	;volatile
   755  00A0                     l82:
   756  00A0  0008               	return
   757  00A1                     __end_of_spiInit:
   758                           
   759                           	psect	text3
   760  00A1                     __ptext3:	
   761 ;; *************** function _isr *****************
   762 ;; Defined at:
   763 ;;		line 50 in file "Contador.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;                  1    wreg      void 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0, pclath, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   777 ;;      Params:         0       0       0       0       0
   778 ;;      Locals:         0       0       0       0       0
   779 ;;      Temps:          2       0       0       0       0
   780 ;;      Totals:         2       0       0       0       0
   781 ;;Total ram usage:        2 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; Hardware stack levels required when called:    1
   784 ;; This function calls:
   785 ;;		_spiWrite
   786 ;; This function is called by:
   787 ;;		Interrupt level 1
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           
   792                           ;psect for function _isr
   793  00A1                     _isr:
   794  00A1                     i1l721:
   795                           
   796                           ;Contador.c: 51:    if(SSPIF == 1){
   797  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   798  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   799  00A3  1D8C               	btfss	12,3	;volatile
   800  00A4  28A6               	goto	u3_21
   801  00A5  28A7               	goto	u3_20
   802  00A6                     u3_21:
   803  00A6  28B0               	goto	i1l44
   804  00A7                     u3_20:
   805  00A7                     i1l723:
   806                           
   807                           ;Contador.c: 53:         spiWrite(ADC);
   808  00A7  0872               	movf	_ADC,w
   809  00A8  120A  118A  20B7  120A  118A  	fcall	_spiWrite
   810  00AD                     i1l725:
   811                           
   812                           ;Contador.c: 54:         SSPIF = 0;
   813  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   814  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   815  00AF  118C               	bcf	12,3	;volatile
   816  00B0                     i1l44:
   817  00B0  0878               	movf	??_isr+1,w
   818  00B1  008A               	movwf	10
   819  00B2  0E77               	swapf	??_isr,w
   820  00B3  0083               	movwf	3
   821  00B4  0EFE               	swapf	btemp,f
   822  00B5  0E7E               	swapf	btemp,w
   823  00B6  0009               	retfie
   824  00B7                     __end_of_isr:
   825                           
   826                           	psect	intentry
   827  0004                     __pintentry:	
   828                           ;incstack = 0
   829                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   830                           
   831  0004                     interrupt_function:
   832  007E                     saved_w	set	btemp
   833  0004  00FE               	movwf	btemp
   834  0005  0E03               	swapf	3,w
   835  0006  00F7               	movwf	??_isr
   836  0007  080A               	movf	10,w
   837  0008  00F8               	movwf	??_isr+1
   838  0009  120A  118A  28A1   	ljmp	_isr
   839                           
   840                           	psect	text4
   841  00B7                     __ptext4:	
   842 ;; *************** function _spiWrite *****************
   843 ;; Defined at:
   844 ;;		line 32 in file "SPI.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  dat             1    wreg     unsigned char 
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  dat             1    0[COMMON] unsigned char 
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   858 ;;      Params:         0       0       0       0       0
   859 ;;      Locals:         1       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0
   861 ;;      Totals:         1       0       0       0       0
   862 ;;Total ram usage:        1 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; This function calls:
   865 ;;		Nothing
   866 ;; This function is called by:
   867 ;;		_isr
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           
   872                           ;psect for function _spiWrite
   873  00B7                     _spiWrite:
   874                           
   875                           ;incstack = 0
   876                           ; Regs used in _spiWrite: [wreg]
   877                           ;spiWrite@dat stored from wreg
   878  00B7  00F6               	movwf	spiWrite@dat
   879  00B8                     i1l701:
   880                           
   881                           ;SPI.c: 32: void spiWrite(char dat);SPI.c: 33: {;SPI.c: 34:     SSPBUF = dat;
   882  00B8  0876               	movf	spiWrite@dat,w
   883  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   884  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   885  00BB  0093               	movwf	19	;volatile
   886  00BC                     i1l91:
   887  00BC  0008               	return
   888  00BD                     __end_of_spiWrite:
   889  007E                     btemp	set	126	;btemp
   890  007E                     wtemp0	set	126
   891                           
   892                           	psect	config
   893                           
   894                           ;Config register CONFIG1 @ 0x2007
   895                           ;	Oscillator Selection bits
   896                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
   897                           ;	Watchdog Timer Enable bit
   898                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   899                           ;	Power-up Timer Enable bit
   900                           ;	PWRTE = OFF, PWRT disabled
   901                           ;	RE3/MCLR pin function select bit
   902                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   903                           ;	Code Protection bit
   904                           ;	CP = OFF, Program memory code protection is disabled
   905                           ;	Data Code Protection bit
   906                           ;	CPD = OFF, Data memory code protection is disabled
   907                           ;	Brown Out Reset Selection bits
   908                           ;	BOREN = OFF, BOR disabled
   909                           ;	Internal External Switchover bit
   910                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   911                           ;	Fail-Safe Clock Monitor Enabled bit
   912                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   913                           ;	Low Voltage Programming Enable bit
   914                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   915                           ;	In-Circuit Debugger Mode bit
   916                           ;	DEBUG = 0x1, unprogrammed default
   917  2007                     	org	8199
   918  2007  20D6               	dw	8406
   919                           
   920                           ;Config register CONFIG2 @ 0x2008
   921                           ;	Brown-out Reset Selection bit
   922                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   923                           ;	Flash Program Memory Self Write Enable bits
   924                           ;	WRT = OFF, Write protection off
   925  2008                     	org	8200
   926  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     456
                                              4 COMMON     1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              3 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 01:50:49 2021

            _SSPSTATbits 0094                       l81 009B                       l82 00A0  
                     l59 0082                      _ADC 0072                      l831 0093  
                    l833 009A                      l825 0084                      l841 006F  
                    l827 008B                      l843 0070                      l835 005E  
                    l851 0019                      l829 0091                      l845 0073  
                    l837 006A                      l861 0032                      l853 001E  
                    l847 0076                      l839 006E                      l871 0046  
                    l863 0034                      l855 0024                      l849 0077  
                    l873 004A                      l865 003A                      l857 0028  
                    l875 0050                      l859 002C                      l867 003E  
                    l877 0052                      l869 0042                      l879 0058  
                    u200 0032                      u201 0031                      u210 0042  
                    u211 0041                      u220 004A                      u221 0049  
                    u230 0050                      u231 004F                      u170 008B  
                    u171 008A                      u180 0024                      u181 0023  
                    u190 002C                      u191 002B                      _isr 00A1  
                   ?_isr 0076                     i1l44 00B0                     i1l91 00BC  
                   u3_20 00A7                     u3_21 00A6                     _main 0019  
                   btemp 007E                     start 000C                    ??_isr 0077  
                  ?_main 0076                    _ANSEL 0188                    i1l701 00B8  
                  i1l721 00A1                    i1l723 00A7                    i1l725 00AD  
                  _PORTB 0006                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISD 0088                    _SSPIF 0063  
                  _setup 005E                    pclath 000A          __end_of_spiInit 00A1  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 005E                   ??_main 007A                   ?_setup 0076  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   saved_w 007E  
       __end_of_spiWrite 00BD                ??_spiInit 0079  __end_of__initialization 0015  
         __pcstackCOMMON 0076            __end_of_setup 0083             _ANTIREBOTEA2 0070  
                ??_setup 007A               __pmaintext 0019               __pintentry 0004  
                _SSPSTAT 0094                ?_spiWrite 0076                  __ptext1 005E  
                __ptext2 0083                  __ptext3 00A1                  __ptext4 00B7  
           __size_of_isr 0016                  _spiInit 0083     end_of_initialization 0015  
             ??_spiWrite 0076                _PORTAbits 0005                _TRISAbits 0085  
            spiWrite@dat 0076      start_initialization 000F              __end_of_isr 00B7  
            __pbssCOMMON 0070                ___latbits 0002            __pcstackBANK0 0020  
            _ANTIREBOTEA 0074        __size_of_spiWrite 0006                 ?_spiInit 0020  
         __size_of_setup 0025     spiInit@sTransmitEdge 0022        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0020                 _PIR1bits 000C  
       __size_of_spiInit 001E            __size_of_main 0045                 _spiWrite 00B7  
           spiInit@sType 0079        spiInit@sClockIdle 0021               _INTCONbits 000B  
               intlevel1 0000  
