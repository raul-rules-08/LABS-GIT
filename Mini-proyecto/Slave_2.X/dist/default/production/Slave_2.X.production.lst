

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 03:47:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0013                     _SSPBUF	set	19
   309  0014                     _SSPCON	set	20
   310  0008                     _PORTD	set	8
   311  001A                     _RCREG	set	26
   312  0019                     _TXREG	set	25
   313  001E                     _ADRESH	set	30
   314  0018                     _RCSTAbits	set	24
   315  0006                     _PORTB	set	6
   316  0008                     _PORTDbits	set	8
   317  000C                     _PIR1bits	set	12
   318  000B                     _INTCONbits	set	11
   319  001F                     _ADCON0bits	set	31
   320  00C4                     _CREN	set	196
   321  0063                     _SSPIF	set	99
   322  0094                     _SSPSTATbits	set	148
   323  0094                     _SSPSTAT	set	148
   324  0085                     _TRISAbits	set	133
   325  0098                     _TXSTAbits	set	152
   326  0099                     _SPBRG	set	153
   327  008C                     _PIE1bits	set	140
   328  009F                     _ADCON1bits	set	159
   329  0088                     _TRISD	set	136
   330  0086                     _TRISB	set	134
   331  0085                     _TRISA	set	133
   332  043B                     _TRISC3	set	1083
   333  043D                     _TRISC5	set	1085
   334  0188                     _ANSELbits	set	392
   335  0189                     _ANSELH	set	393
   336  0188                     _ANSEL	set	392
   337                           
   338                           	psect	strings
   339  0566                     __pstrings:
   340  0566                     stringtab:
   341  0566                     __stringtab:
   342  0566                     stringcode:	
   343                           ;	String table - string pointers are 1 byte each
   344                           
   345  0566                     stringdir:
   346  0566  3005               	movlw	high stringdir
   347  0567  008A               	movwf	10
   348  0568  0804               	movf	4,w
   349  0569  0A84               	incf	4,f
   350  056A  0782               	addwf	2,f
   351  056B                     __stringbase:
   352  056B  3400               	retlw	0
   353  056C                     __end_of__stringtab:
   354  056C                     STR_2:
   355  056C  3452               	retlw	82	;'R'
   356  056D  3441               	retlw	65	;'A'
   357  056E  3455               	retlw	85	;'U'
   358  056F  344C               	retlw	76	;'L'
   359  0570  345F               	retlw	95	;'_'
   360  0571  3441               	retlw	65	;'A'
   361  0572  3447               	retlw	71	;'G'
   362  0573  3455               	retlw	85	;'U'
   363  0574  3449               	retlw	73	;'I'
   364  0575  344C               	retlw	76	;'L'
   365  0576  3441               	retlw	65	;'A'
   366  0577  3452               	retlw	82	;'R'
   367  0578  3400               	retlw	0
   368  0579                     STR_1:
   369  0579  3444               	retlw	68	;'D'
   370  057A  3449               	retlw	73	;'I'
   371  057B  3447               	retlw	71	;'G'
   372  057C  3449               	retlw	73	;'I'
   373  057D  3454               	retlw	84	;'T'
   374  057E  3441               	retlw	65	;'A'
   375  057F  344C               	retlw	76	;'L'
   376  0580  3420               	retlw	32	;' '
   377  0581  3432               	retlw	50	;'2'
   378  0582  3400               	retlw	0
   379  0583                     STR_5:
   380  0583  3443               	retlw	67	;'C'
   381  0584  346F               	retlw	111	;'o'
   382  0585  346E               	retlw	110	;'n'
   383  0586  3474               	retlw	116	;'t'
   384  0587  3461               	retlw	97	;'a'
   385  0588  3464               	retlw	100	;'d'
   386  0589  346F               	retlw	111	;'o'
   387  058A  3472               	retlw	114	;'r'
   388  058B  3400               	retlw	0
   389  058C                     STR_3:
   390  058C  3456               	retlw	86	;'V'
   391  058D  346F               	retlw	111	;'o'
   392  058E  346C               	retlw	108	;'l'
   393  058F  3474               	retlw	116	;'t'
   394  0590  3431               	retlw	49	;'1'
   395  0591  3400               	retlw	0
   396  0592                     STR_4:
   397  0592  3456               	retlw	86	;'V'
   398  0593  346F               	retlw	111	;'o'
   399  0594  346C               	retlw	108	;'l'
   400  0595  3474               	retlw	116	;'t'
   401  0596  3432               	retlw	50	;'2'
   402  0597  3400               	retlw	0
   403                           
   404                           	psect	cinit
   405  000F                     start_initialization:	
   406                           ; #config settings
   407                           
   408  000F                     __initialization:
   409                           
   410                           ; Clear objects allocated to COMMON
   411  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   412  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   413  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   414  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   415                           
   416                           ; Clear objects allocated to BANK0
   417  0013  1383               	bcf	3,7	;select IRP bank0
   418  0014  3042               	movlw	low __pbssBANK0
   419  0015  0084               	movwf	4
   420  0016  3062               	movlw	low (__pbssBANK0+32)
   421  0017  120A  118A  26D0  120A  118A  	fcall	clear_ram0
   422  001C                     end_of_initialization:	
   423                           ;End of C runtime variable initialization code
   424                           
   425  001C                     __end_of__initialization:
   426  001C  0183               	clrf	3
   427  001D  120A  118A  2B0F   	ljmp	_main	;jump to C main() function
   428                           
   429                           	psect	bssCOMMON
   430  0076                     __pbssCOMMON:
   431  0076                     _enterob:
   432  0076                     	ds	1
   433  0077                     _centena1c:
   434  0077                     	ds	1
   435  0078                     _decima1c:
   436  0078                     	ds	1
   437  0079                     _enteroc:
   438  0079                     	ds	1
   439                           
   440                           	psect	bssBANK0
   441  0042                     __pbssBANK0:
   442  0042                     _vpot2:
   443  0042                     	ds	4
   444  0046                     _vpot1:
   445  0046                     	ds	4
   446  004A                     _ANTIREBOTEA2:
   447  004A                     	ds	2
   448  004C                     _ADC:
   449  004C                     	ds	2
   450  004E                     _ANTIREBOTEA:
   451  004E                     	ds	2
   452  0050                     _a:
   453  0050                     	ds	1
   454  0051                     _w2:
   455  0051                     	ds	1
   456  0052                     _w1:
   457  0052                     	ds	1
   458  0053                     _valor:
   459  0053                     	ds	1
   460  0054                     _revisa:
   461  0054                     	ds	1
   462  0055                     _contador:
   463  0055                     	ds	1
   464  0056                     _velocidad3:
   465  0056                     	ds	1
   466  0057                     _velocidad2:
   467  0057                     	ds	1
   468  0058                     _velocidad1:
   469  0058                     	ds	1
   470  0059                     _centena2b:
   471  0059                     	ds	1
   472  005A                     _decima2b:
   473  005A                     	ds	1
   474  005B                     _centena1b:
   475  005B                     	ds	1
   476  005C                     _decima1b:
   477  005C                     	ds	1
   478  005D                     _centena2c:
   479  005D                     	ds	1
   480  005E                     _decima2c:
   481  005E                     	ds	1
   482  005F                     _buffer:
   483  005F                     	ds	1
   484  0060                     _b:
   485  0060                     	ds	1
   486  0061                     _c:
   487  0061                     	ds	1
   488                           
   489                           	psect	clrtext
   490  06D0                     clear_ram0:	
   491                           ;	Called with FSR containing the base address, and
   492                           ;	W with the last address+1
   493                           
   494  06D0  0064               	clrwdt	;clear the watchdog before getting into this loop
   495  06D1                     clrloop0:
   496  06D1  0180               	clrf	0	;clear RAM location pointed to by FSR
   497  06D2  0A84               	incf	4,f	;increment pointer
   498  06D3  0604               	xorwf	4,w	;XOR with final address
   499  06D4  1903               	btfsc	3,2	;have we reached the end yet?
   500  06D5  3400               	retlw	0	;all done for this memory range, return
   501  06D6  0604               	xorwf	4,w	;XOR again to restore value
   502  06D7  2ED1               	goto	clrloop0	;do the next byte
   503                           
   504                           	psect	cstackCOMMON
   505  0070                     __pcstackCOMMON:
   506  0070                     ?_spiWrite:
   507  0070                     ??_spiWrite:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_revisa_char:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ??_revisa_char:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_USART_config:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ?_conversion:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_Conversion1:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_Conversion2:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_contador_lcd:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_display1:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_display2:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_display3:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_config:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_Lcd_Cmd:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_Lcd_Write_Char:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_Lcd_Write_String:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_Lcd_Init:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_USART_lib_config:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_ISR:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_main:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_dato_char:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_Lcd_Clear:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     spiWrite@dat:	
   571                           ; 2 bytes @ 0x0
   572                           
   573                           
   574                           ; 1 bytes @ 0x0
   575  0070                     	ds	1
   576  0071                     ??_ISR:
   577                           
   578                           ; 1 bytes @ 0x1
   579  0071                     	ds	3
   580  0074                     ??_USART_config:
   581  0074                     ??_contador_lcd:	
   582                           ; 1 bytes @ 0x4
   583                           
   584  0074                     ??_config:	
   585                           ; 1 bytes @ 0x4
   586                           
   587  0074                     ??_Lcd_Cmd:	
   588                           ; 1 bytes @ 0x4
   589                           
   590  0074                     ??_Lcd_Write_Char:	
   591                           ; 1 bytes @ 0x4
   592                           
   593  0074                     ??_USART_lib_config:	
   594                           ; 1 bytes @ 0x4
   595                           
   596  0074                     ??_dato_char:	
   597                           ; 1 bytes @ 0x4
   598                           
   599  0074                     ??___wmul:	
   600                           ; 1 bytes @ 0x4
   601                           
   602  0074                     ??___awmod:	
   603                           ; 1 bytes @ 0x4
   604                           
   605  0074                     dato_char@valor:	
   606                           ; 1 bytes @ 0x4
   607                           
   608  0074                     ___wmul@product:	
   609                           ; 1 bytes @ 0x4
   610                           
   611                           
   612                           ; 2 bytes @ 0x4
   613  0074                     	ds	1
   614  0075                     ??_display1:
   615  0075                     ??_display2:	
   616                           ; 1 bytes @ 0x5
   617                           
   618  0075                     ??_display3:	
   619                           ; 1 bytes @ 0x5
   620                           
   621  0075                     Lcd_Write_Char@a:	
   622                           ; 1 bytes @ 0x5
   623                           
   624                           
   625                           ; 1 bytes @ 0x5
   626  0075                     	ds	1
   627  0076                     ??_Lcd_Clear:
   628  0076                     ??_Lcd_Write_String:	
   629                           ; 1 bytes @ 0x6
   630                           
   631                           
   632                           	psect	cstackBANK0
   633  0020                     __pcstackBANK0:	
   634                           ; 1 bytes @ 0x6
   635                           
   636  0020                     ?___wmul:
   637  0020                     ?___awmod:	
   638                           ; 2 bytes @ 0x0
   639                           
   640  0020                     Lcd_Cmd@a:	
   641                           ; 2 bytes @ 0x0
   642                           
   643  0020                     Lcd_Write_String@i:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0020                     ___wmul@multiplier:	
   647                           ; 2 bytes @ 0x0
   648                           
   649  0020                     ___awmod@divisor:	
   650                           ; 2 bytes @ 0x0
   651                           
   652                           
   653                           ; 2 bytes @ 0x0
   654  0020                     	ds	1
   655  0021                     ?_Lcd_Set_Cursor:
   656  0021                     ??_Lcd_Init:	
   657                           ; 1 bytes @ 0x1
   658                           
   659  0021                     Lcd_Set_Cursor@b:	
   660                           ; 1 bytes @ 0x1
   661                           
   662                           
   663                           ; 1 bytes @ 0x1
   664  0021                     	ds	1
   665  0022                     ??_Lcd_Set_Cursor:
   666  0022                     Lcd_Write_String@a:	
   667                           ; 1 bytes @ 0x2
   668                           
   669  0022                     ___wmul@multiplicand:	
   670                           ; 1 bytes @ 0x2
   671                           
   672  0022                     ___awmod@dividend:	
   673                           ; 2 bytes @ 0x2
   674                           
   675                           
   676                           ; 2 bytes @ 0x2
   677  0022                     	ds	1
   678  0023                     Lcd_Set_Cursor@a:
   679                           
   680                           ; 1 bytes @ 0x3
   681  0023                     	ds	1
   682  0024                     ?___awdiv:
   683  0024                     Lcd_Set_Cursor@temp:	
   684                           ; 2 bytes @ 0x4
   685                           
   686  0024                     ___awmod@counter:	
   687                           ; 1 bytes @ 0x4
   688                           
   689  0024                     ___awdiv@divisor:	
   690                           ; 1 bytes @ 0x4
   691                           
   692                           
   693                           ; 2 bytes @ 0x4
   694  0024                     	ds	1
   695  0025                     ___awmod@sign:
   696                           
   697                           ; 1 bytes @ 0x5
   698  0025                     	ds	1
   699  0026                     ___awdiv@dividend:
   700                           
   701                           ; 2 bytes @ 0x6
   702  0026                     	ds	2
   703  0028                     ??___awdiv:
   704                           
   705                           ; 1 bytes @ 0x8
   706  0028                     	ds	1
   707  0029                     ___awdiv@counter:
   708                           
   709                           ; 1 bytes @ 0x9
   710  0029                     	ds	1
   711  002A                     ___awdiv@sign:
   712                           
   713                           ; 1 bytes @ 0xA
   714  002A                     	ds	1
   715  002B                     ___awdiv@quotient:
   716                           
   717                           ; 2 bytes @ 0xB
   718  002B                     	ds	2
   719  002D                     ??_Conversion1:
   720  002D                     ??_Conversion2:	
   721                           ; 1 bytes @ 0xD
   722                           
   723  002D                     ?___xxtofl:	
   724                           ; 1 bytes @ 0xD
   725                           
   726  002D                     ___xxtofl@val:	
   727                           ; 4 bytes @ 0xD
   728                           
   729                           
   730                           ; 4 bytes @ 0xD
   731  002D                     	ds	4
   732  0031                     ??___xxtofl:
   733                           
   734                           ; 1 bytes @ 0x11
   735  0031                     	ds	4
   736  0035                     ___xxtofl@sign:
   737                           
   738                           ; 1 bytes @ 0x15
   739  0035                     	ds	1
   740  0036                     ___xxtofl@exp:
   741                           
   742                           ; 1 bytes @ 0x16
   743  0036                     	ds	1
   744  0037                     ___xxtofl@arg:
   745                           
   746                           ; 4 bytes @ 0x17
   747  0037                     	ds	4
   748  003B                     ??_conversion:
   749                           
   750                           ; 1 bytes @ 0x1B
   751  003B                     	ds	3
   752  003E                     conversion@puertoANL:
   753                           
   754                           ; 1 bytes @ 0x1E
   755  003E                     	ds	1
   756  003F                     ??_main:
   757                           
   758                           ; 1 bytes @ 0x1F
   759  003F                     	ds	3
   760                           
   761                           	psect	maintext
   762  030F                     __pmaintext:	
   763 ;;
   764 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   765 ;;
   766 ;; *************** function _main *****************
   767 ;; Defined at:
   768 ;;		line 88 in file "ADC.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : B00/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         0       0       0       0       0
   783 ;;      Locals:         0       0       0       0       0
   784 ;;      Temps:          0       3       0       0       0
   785 ;;      Totals:         0       3       0       0       0
   786 ;;Total ram usage:        3 bytes
   787 ;; Hardware stack levels required when called:    6
   788 ;; This function calls:
   789 ;;		_Lcd_Clear
   790 ;;		_Lcd_Init
   791 ;;		_Lcd_Set_Cursor
   792 ;;		_Lcd_Write_String
   793 ;;		_USART_config
   794 ;;		_config
   795 ;;		_conversion
   796 ;; This function is called by:
   797 ;;		Startup code after reset
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           
   802                           ;psect for function _main
   803  030F                     _main:
   804  030F                     l1763:	
   805                           ;incstack = 0
   806                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   807                           
   808                           
   809                           ;ADC.c: 89:     config();
   810  030F  120A  118A  265C  120A  118A  	fcall	_config
   811                           
   812                           ;ADC.c: 90:     Lcd_Init();
   813  0314  120A  118A  252E  120A  118A  	fcall	_Lcd_Init
   814                           
   815                           ;ADC.c: 91:     Lcd_Set_Cursor(1,1);
   816  0319  1283               	bcf	3,5	;RP0=0, select bank0
   817  031A  1303               	bcf	3,6	;RP1=0, select bank0
   818  031B  01A1               	clrf	Lcd_Set_Cursor@b
   819  031C  0AA1               	incf	Lcd_Set_Cursor@b,f
   820  031D  3001               	movlw	1
   821  031E  120A  118A  261A  120A  118A  	fcall	_Lcd_Set_Cursor
   822  0323                     l1765:
   823                           
   824                           ;ADC.c: 92:     Lcd_Write_String("DIGITAL 2");
   825  0323  300E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   826  0324  120A  118A  25CA  120A  118A  	fcall	_Lcd_Write_String
   827  0329                     l1767:
   828                           
   829                           ;ADC.c: 93:     Lcd_Set_Cursor(2,1);
   830  0329  1283               	bcf	3,5	;RP0=0, select bank0
   831  032A  1303               	bcf	3,6	;RP1=0, select bank0
   832  032B  01A1               	clrf	Lcd_Set_Cursor@b
   833  032C  0AA1               	incf	Lcd_Set_Cursor@b,f
   834  032D  3002               	movlw	2
   835  032E  120A  118A  261A  120A  118A  	fcall	_Lcd_Set_Cursor
   836                           
   837                           ;ADC.c: 94:     Lcd_Write_String("RAUL_AGUILAR");
   838  0333  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   839  0334  120A  118A  25CA  120A  118A  	fcall	_Lcd_Write_String
   840  0339                     l1769:
   841                           
   842                           ;ADC.c: 95:     _delay((unsigned long)((100)*(9000000/4000.0)));
   843  0339  3002               	movlw	2
   844  033A  1283               	bcf	3,5	;RP0=0, select bank0
   845  033B  1303               	bcf	3,6	;RP1=0, select bank0
   846  033C  00C1               	movwf	??_main+2
   847  033D  3025               	movlw	37
   848  033E  00C0               	movwf	??_main+1
   849  033F  3031               	movlw	49
   850  0340  00BF               	movwf	??_main
   851  0341                     u1277:
   852  0341  0BBF               	decfsz	??_main,f
   853  0342  2B41               	goto	u1277
   854  0343  0BC0               	decfsz	??_main+1,f
   855  0344  2B41               	goto	u1277
   856  0345  0BC1               	decfsz	??_main+2,f
   857  0346  2B41               	goto	u1277
   858  0347                     l1771:
   859                           
   860                           ;ADC.c: 96:     Lcd_Clear();
   861  0347  120A  118A  26AC  120A  118A  	fcall	_Lcd_Clear
   862  034C                     l1773:
   863                           
   864                           ;ADC.c: 98:      Lcd_Set_Cursor(1,1);
   865  034C  1283               	bcf	3,5	;RP0=0, select bank0
   866  034D  1303               	bcf	3,6	;RP1=0, select bank0
   867  034E  01A1               	clrf	Lcd_Set_Cursor@b
   868  034F  0AA1               	incf	Lcd_Set_Cursor@b,f
   869  0350  3001               	movlw	1
   870  0351  120A  118A  261A  120A  118A  	fcall	_Lcd_Set_Cursor
   871  0356                     l1775:
   872                           
   873                           ;ADC.c: 99:      Lcd_Write_String("Volt1");
   874  0356  3021               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   875  0357  120A  118A  25CA  120A  118A  	fcall	_Lcd_Write_String
   876  035C                     l1777:
   877                           
   878                           ;ADC.c: 100:      Lcd_Set_Cursor(1,7);
   879  035C  3007               	movlw	7
   880  035D  1283               	bcf	3,5	;RP0=0, select bank0
   881  035E  1303               	bcf	3,6	;RP1=0, select bank0
   882  035F  00BF               	movwf	??_main
   883  0360  083F               	movf	??_main,w
   884  0361  00A1               	movwf	Lcd_Set_Cursor@b
   885  0362  3001               	movlw	1
   886  0363  120A  118A  261A  120A  118A  	fcall	_Lcd_Set_Cursor
   887  0368                     l1779:
   888                           
   889                           ;ADC.c: 101:      Lcd_Write_String("Volt2");
   890  0368  3027               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   891  0369  120A  118A  25CA  120A  118A  	fcall	_Lcd_Write_String
   892  036E                     l1781:
   893                           
   894                           ;ADC.c: 102:      Lcd_Set_Cursor(1,13);
   895  036E  300D               	movlw	13
   896  036F  1283               	bcf	3,5	;RP0=0, select bank0
   897  0370  1303               	bcf	3,6	;RP1=0, select bank0
   898  0371  00BF               	movwf	??_main
   899  0372  083F               	movf	??_main,w
   900  0373  00A1               	movwf	Lcd_Set_Cursor@b
   901  0374  3001               	movlw	1
   902  0375  120A  118A  261A  120A  118A  	fcall	_Lcd_Set_Cursor
   903  037A                     l1783:
   904                           
   905                           ;ADC.c: 103:      Lcd_Write_String("Contador");
   906  037A  3018               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   907  037B  120A  118A  25CA  120A  118A  	fcall	_Lcd_Write_String
   908  0380                     l1785:
   909                           
   910                           ;ADC.c: 104:      USART_config();
   911  0380  120A  118A  26D8  120A  118A  	fcall	_USART_config
   912  0385                     l1787:
   913                           
   914                           ;ADC.c: 108:         conversion(1);
   915  0385  3001               	movlw	1
   916  0386  120A  118A  2020  120A  118A  	fcall	_conversion
   917  038B                     l1789:
   918                           
   919                           ;ADC.c: 109:         conversion(0);
   920  038B  3000               	movlw	0
   921  038C  120A  118A  2020  120A  118A  	fcall	_conversion
   922  0391  2B85               	goto	l1787
   923  0392  120A  118A  280C   	ljmp	start
   924  0395                     __end_of_main:
   925                           
   926                           	psect	text1
   927  0020                     __ptext1:	
   928 ;; *************** function _conversion *****************
   929 ;; Defined at:
   930 ;;		line 137 in file "ADC.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;  puertoANL       1    wreg     unsigned char 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;  puertoANL       1   30[BANK0 ] unsigned char 
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		wreg, status,2, status,0, pclath, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   944 ;;      Params:         0       0       0       0       0
   945 ;;      Locals:         0       1       0       0       0
   946 ;;      Temps:          0       3       0       0       0
   947 ;;      Totals:         0       4       0       0       0
   948 ;;Total ram usage:        4 bytes
   949 ;; Hardware stack levels used:    1
   950 ;; Hardware stack levels required when called:    5
   951 ;; This function calls:
   952 ;;		_Conversion1
   953 ;;		_Conversion2
   954 ;;		_Lcd_Set_Cursor
   955 ;;		_Lcd_Write_Char
   956 ;;		___awdiv
   957 ;;		___awmod
   958 ;;		___wmul
   959 ;;		___xxtofl
   960 ;;		_contador_lcd
   961 ;; This function is called by:
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _conversion
   968  0020                     _conversion:
   969                           
   970                           ;incstack = 0
   971                           ; Regs used in _conversion: [wreg+status,2+status,0+pclath+cstack]
   972                           ;conversion@puertoANL stored from wreg
   973  0020  1283               	bcf	3,5	;RP0=0, select bank0
   974  0021  1303               	bcf	3,6	;RP1=0, select bank0
   975  0022  00BE               	movwf	conversion@puertoANL
   976  0023                     l1741:
   977                           
   978                           ;ADC.c: 139:     ADCON0bits.CHS = puertoANL;
   979  0023  083E               	movf	conversion@puertoANL,w
   980  0024  00BB               	movwf	??_conversion
   981  0025  0DBB               	rlf	??_conversion,f
   982  0026  0DBB               	rlf	??_conversion,f
   983  0027  081F               	movf	31,w	;volatile
   984  0028  063B               	xorwf	??_conversion,w
   985  0029  39C3               	andlw	-61
   986  002A  063B               	xorwf	??_conversion,w
   987  002B  009F               	movwf	31	;volatile
   988  002C                     l1743:
   989                           
   990                           ;ADC.c: 140:     if (ADCON0bits.GO_DONE==0 && puertoANL ==0){
   991  002C  189F               	btfsc	31,1	;volatile
   992  002D  282F               	goto	u1231
   993  002E  2830               	goto	u1230
   994  002F                     u1231:
   995  002F  2880               	goto	l1751
   996  0030                     u1230:
   997  0030                     l1745:
   998  0030  083E               	movf	conversion@puertoANL,w
   999  0031  1D03               	btfss	3,2
  1000  0032  2834               	goto	u1241
  1001  0033  2835               	goto	u1240
  1002  0034                     u1241:
  1003  0034  2880               	goto	l1751
  1004  0035                     u1240:
  1005  0035                     l1747:
  1006                           
  1007                           ;ADC.c: 142:         vpot1 = (5*c)/255;
  1008  0035  3005               	movlw	5
  1009  0036  00A2               	movwf	___wmul@multiplicand
  1010  0037  3000               	movlw	0
  1011  0038  00A3               	movwf	___wmul@multiplicand+1
  1012  0039  0861               	movf	_c,w
  1013  003A  00BB               	movwf	??_conversion
  1014  003B  01BC               	clrf	??_conversion+1
  1015  003C  083B               	movf	??_conversion,w
  1016  003D  00A0               	movwf	___wmul@multiplier
  1017  003E  083C               	movf	??_conversion+1,w
  1018  003F  00A1               	movwf	___wmul@multiplier+1
  1019  0040  120A  118A  25F3  120A  118A  	fcall	___wmul
  1020  0045  1283               	bcf	3,5	;RP0=0, select bank0
  1021  0046  1303               	bcf	3,6	;RP1=0, select bank0
  1022  0047  0821               	movf	?___wmul+1,w
  1023  0048  00A7               	movwf	___awdiv@dividend+1
  1024  0049  0820               	movf	?___wmul,w
  1025  004A  00A6               	movwf	___awdiv@dividend
  1026  004B  30FF               	movlw	255
  1027  004C  00A4               	movwf	___awdiv@divisor
  1028  004D  3000               	movlw	0
  1029  004E  00A5               	movwf	___awdiv@divisor+1
  1030  004F  120A  118A  2395  120A  118A  	fcall	___awdiv
  1031  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0055  1303               	bcf	3,6	;RP1=0, select bank0
  1033  0056  0824               	movf	?___awdiv,w
  1034  0057  00AD               	movwf	___xxtofl@val
  1035  0058  0825               	movf	?___awdiv+1,w
  1036  0059  00AE               	movwf	___xxtofl@val+1
  1037  005A  3000               	movlw	0
  1038  005B  1BAE               	btfsc	___xxtofl@val+1,7
  1039  005C  30FF               	movlw	255
  1040  005D  00AF               	movwf	___xxtofl@val+2
  1041  005E  00B0               	movwf	___xxtofl@val+3
  1042  005F  3001               	movlw	1
  1043  0060  120A  118A  213C  120A  118A  	fcall	___xxtofl
  1044  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1045  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1046  0067  0830               	movf	?___xxtofl+3,w
  1047  0068  00C9               	movwf	_vpot1+3
  1048  0069  082F               	movf	?___xxtofl+2,w
  1049  006A  00C8               	movwf	_vpot1+2
  1050  006B  082E               	movf	?___xxtofl+1,w
  1051  006C  00C7               	movwf	_vpot1+1
  1052  006D  082D               	movf	?___xxtofl,w
  1053  006E  00C6               	movwf	_vpot1
  1054                           
  1055                           ;ADC.c: 144:         Lcd_Set_Cursor(2,1);
  1056  006F  01A1               	clrf	Lcd_Set_Cursor@b
  1057  0070  0AA1               	incf	Lcd_Set_Cursor@b,f
  1058  0071  3002               	movlw	2
  1059  0072  120A  118A  261A  120A  118A  	fcall	_Lcd_Set_Cursor
  1060                           
  1061                           ;ADC.c: 145:         Conversion1 ();
  1062  0077  120A  118A  2287  120A  118A  	fcall	_Conversion1
  1063  007C                     l1749:
  1064                           
  1065                           ;ADC.c: 146:         ADCON0bits.GO_DONE=1;
  1066  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1067  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1068  007E  149F               	bsf	31,1	;volatile
  1069                           
  1070                           ;ADC.c: 147:     }
  1071  007F  293B               	goto	l193
  1072  0080                     l1751:
  1073                           
  1074                           ;ADC.c: 149:         vpot2 = (5*b)/255;
  1075  0080  3005               	movlw	5
  1076  0081  00A2               	movwf	___wmul@multiplicand
  1077  0082  3000               	movlw	0
  1078  0083  00A3               	movwf	___wmul@multiplicand+1
  1079  0084  0860               	movf	_b,w
  1080  0085  00BB               	movwf	??_conversion
  1081  0086  01BC               	clrf	??_conversion+1
  1082  0087  083B               	movf	??_conversion,w
  1083  0088  00A0               	movwf	___wmul@multiplier
  1084  0089  083C               	movf	??_conversion+1,w
  1085  008A  00A1               	movwf	___wmul@multiplier+1
  1086  008B  120A  118A  25F3  120A  118A  	fcall	___wmul
  1087  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1089  0092  0821               	movf	?___wmul+1,w
  1090  0093  00A7               	movwf	___awdiv@dividend+1
  1091  0094  0820               	movf	?___wmul,w
  1092  0095  00A6               	movwf	___awdiv@dividend
  1093  0096  30FF               	movlw	255
  1094  0097  00A4               	movwf	___awdiv@divisor
  1095  0098  3000               	movlw	0
  1096  0099  00A5               	movwf	___awdiv@divisor+1
  1097  009A  120A  118A  2395  120A  118A  	fcall	___awdiv
  1098  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1099  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1100  00A1  0824               	movf	?___awdiv,w
  1101  00A2  00AD               	movwf	___xxtofl@val
  1102  00A3  0825               	movf	?___awdiv+1,w
  1103  00A4  00AE               	movwf	___xxtofl@val+1
  1104  00A5  3000               	movlw	0
  1105  00A6  1BAE               	btfsc	___xxtofl@val+1,7
  1106  00A7  30FF               	movlw	255
  1107  00A8  00AF               	movwf	___xxtofl@val+2
  1108  00A9  00B0               	movwf	___xxtofl@val+3
  1109  00AA  3001               	movlw	1
  1110  00AB  120A  118A  213C  120A  118A  	fcall	___xxtofl
  1111  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1112  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1113  00B2  0830               	movf	?___xxtofl+3,w
  1114  00B3  00C5               	movwf	_vpot2+3
  1115  00B4  082F               	movf	?___xxtofl+2,w
  1116  00B5  00C4               	movwf	_vpot2+2
  1117  00B6  082E               	movf	?___xxtofl+1,w
  1118  00B7  00C3               	movwf	_vpot2+1
  1119  00B8  082D               	movf	?___xxtofl,w
  1120  00B9  00C2               	movwf	_vpot2
  1121                           
  1122                           ;ADC.c: 151:         Lcd_Set_Cursor(2,7);
  1123  00BA  3007               	movlw	7
  1124  00BB  00BB               	movwf	??_conversion
  1125  00BC  083B               	movf	??_conversion,w
  1126  00BD  00A1               	movwf	Lcd_Set_Cursor@b
  1127  00BE  3002               	movlw	2
  1128  00BF  120A  118A  261A  120A  118A  	fcall	_Lcd_Set_Cursor
  1129                           
  1130                           ;ADC.c: 152:         Conversion2();
  1131  00C4  120A  118A  21F8  120A  118A  	fcall	_Conversion2
  1132  00C9                     l1753:
  1133                           
  1134                           ;ADC.c: 153:         ADCON0bits.GO_DONE=1;
  1135  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1136  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1137  00CB  149F               	bsf	31,1	;volatile
  1138                           
  1139                           ;ADC.c: 155:         contador_lcd();
  1140  00CC  120A  118A  2640  120A  118A  	fcall	_contador_lcd
  1141  00D1                     l1755:
  1142                           
  1143                           ;ADC.c: 157:     if (contador < 10)
  1144  00D1  300A               	movlw	10
  1145  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1146  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1147  00D4  0255               	subwf	_contador,w
  1148  00D5  1803               	skipnc
  1149  00D6  28D8               	goto	u1251
  1150  00D7  28D9               	goto	u1250
  1151  00D8                     u1251:
  1152  00D8  28ED               	goto	l1759
  1153  00D9                     u1250:
  1154  00D9                     l1757:
  1155                           
  1156                           ;ADC.c: 158:     {;ADC.c: 159:         Lcd_Set_Cursor(2,14);
  1157  00D9  300E               	movlw	14
  1158  00DA  00BB               	movwf	??_conversion
  1159  00DB  083B               	movf	??_conversion,w
  1160  00DC  00A1               	movwf	Lcd_Set_Cursor@b
  1161  00DD  3002               	movlw	2
  1162  00DE  120A  118A  261A  120A  118A  	fcall	_Lcd_Set_Cursor
  1163                           
  1164                           ;ADC.c: 160:         Lcd_Write_Char(contador + 48);
  1165  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1166  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1167  00E5  0855               	movf	_contador,w
  1168  00E6  3E30               	addlw	48
  1169  00E7  120A  118A  269C  120A  118A  	fcall	_Lcd_Write_Char
  1170                           
  1171                           ;ADC.c: 161:     }
  1172  00EC  293B               	goto	l193
  1173  00ED                     l1759:
  1174  00ED  300A               	movlw	10
  1175  00EE  0255               	subwf	_contador,w
  1176  00EF  1C03               	skipc
  1177  00F0  28F2               	goto	u1261
  1178  00F1  28F3               	goto	u1260
  1179  00F2                     u1261:
  1180  00F2  293B               	goto	l193
  1181  00F3                     u1260:
  1182  00F3                     l1761:
  1183                           
  1184                           ;ADC.c: 163:     {;ADC.c: 164:         w1 = contador/10;
  1185  00F3  300A               	movlw	10
  1186  00F4  00A4               	movwf	___awdiv@divisor
  1187  00F5  3000               	movlw	0
  1188  00F6  00A5               	movwf	___awdiv@divisor+1
  1189  00F7  0855               	movf	_contador,w
  1190  00F8  00BB               	movwf	??_conversion
  1191  00F9  01BC               	clrf	??_conversion+1
  1192  00FA  083B               	movf	??_conversion,w
  1193  00FB  00A6               	movwf	___awdiv@dividend
  1194  00FC  083C               	movf	??_conversion+1,w
  1195  00FD  00A7               	movwf	___awdiv@dividend+1
  1196  00FE  120A  118A  2395  120A  118A  	fcall	___awdiv
  1197  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0105  0824               	movf	?___awdiv,w
  1200  0106  00BD               	movwf	??_conversion+2
  1201  0107  083D               	movf	??_conversion+2,w
  1202  0108  00D2               	movwf	_w1
  1203                           
  1204                           ;ADC.c: 165:         w2 = contador % 10;
  1205  0109  300A               	movlw	10
  1206  010A  00A0               	movwf	___awmod@divisor
  1207  010B  3000               	movlw	0
  1208  010C  00A1               	movwf	___awmod@divisor+1
  1209  010D  0855               	movf	_contador,w
  1210  010E  00BB               	movwf	??_conversion
  1211  010F  01BC               	clrf	??_conversion+1
  1212  0110  083B               	movf	??_conversion,w
  1213  0111  00A2               	movwf	___awmod@dividend
  1214  0112  083C               	movf	??_conversion+1,w
  1215  0113  00A3               	movwf	___awmod@dividend+1
  1216  0114  120A  118A  23FE  120A  118A  	fcall	___awmod
  1217  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1218  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1219  011B  0820               	movf	?___awmod,w
  1220  011C  00BD               	movwf	??_conversion+2
  1221  011D  083D               	movf	??_conversion+2,w
  1222  011E  00D1               	movwf	_w2
  1223                           
  1224                           ;ADC.c: 166:         Lcd_Set_Cursor(2,13);
  1225  011F  300D               	movlw	13
  1226  0120  00BB               	movwf	??_conversion
  1227  0121  083B               	movf	??_conversion,w
  1228  0122  00A1               	movwf	Lcd_Set_Cursor@b
  1229  0123  3002               	movlw	2
  1230  0124  120A  118A  261A  120A  118A  	fcall	_Lcd_Set_Cursor
  1231                           
  1232                           ;ADC.c: 167:         Lcd_Write_Char(w1+48);
  1233  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1234  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1235  012B  0852               	movf	_w1,w
  1236  012C  3E30               	addlw	48
  1237  012D  120A  118A  269C  120A  118A  	fcall	_Lcd_Write_Char
  1238                           
  1239                           ;ADC.c: 168:         Lcd_Write_Char(w2+48);
  1240  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0134  0851               	movf	_w2,w
  1243  0135  3E30               	addlw	48
  1244  0136  120A  118A  269C  120A  118A  	fcall	_Lcd_Write_Char
  1245  013B                     l193:
  1246  013B  0008               	return
  1247  013C                     __end_of_conversion:
  1248                           
  1249                           	psect	text2
  1250  0640                     __ptext2:	
  1251 ;; *************** function _contador_lcd *****************
  1252 ;; Defined at:
  1253 ;;		line 264 in file "ADC.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1267 ;;      Params:         0       0       0       0       0
  1268 ;;      Locals:         0       0       0       0       0
  1269 ;;      Temps:          1       0       0       0       0
  1270 ;;      Totals:         1       0       0       0       0
  1271 ;;Total ram usage:        1 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    2
  1274 ;; This function calls:
  1275 ;;		Nothing
  1276 ;; This function is called by:
  1277 ;;		_conversion
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           
  1282                           ;psect for function _contador_lcd
  1283  0640                     _contador_lcd:
  1284  0640                     l1427:	
  1285                           ;incstack = 0
  1286                           ; Regs used in _contador_lcd: [wreg+status,2+status,0]
  1287                           
  1288                           
  1289                           ;ADC.c: 266:     if (revisa == '+')
  1290  0640  302B               	movlw	43
  1291  0641  1283               	bcf	3,5	;RP0=0, select bank0
  1292  0642  1303               	bcf	3,6	;RP1=0, select bank0
  1293  0643  0654               	xorwf	_revisa,w
  1294  0644  1D03               	btfss	3,2
  1295  0645  2E47               	goto	u781
  1296  0646  2E48               	goto	u780
  1297  0647                     u781:
  1298  0647  2E4F               	goto	l1433
  1299  0648                     u780:
  1300  0648                     l1429:
  1301                           
  1302                           ;ADC.c: 267:     {;ADC.c: 268:         contador = contador + 1;
  1303  0648  0855               	movf	_contador,w
  1304  0649  3E01               	addlw	1
  1305  064A  00F4               	movwf	??_contador_lcd
  1306  064B  0874               	movf	??_contador_lcd,w
  1307  064C  00D5               	movwf	_contador
  1308  064D                     l1431:
  1309                           
  1310                           ;ADC.c: 269:         revisa = 0;
  1311  064D  01D4               	clrf	_revisa
  1312                           
  1313                           ;ADC.c: 270:     }
  1314  064E  2E5B               	goto	l216
  1315  064F                     l1433:
  1316  064F  302D               	movlw	45
  1317  0650  0654               	xorwf	_revisa,w
  1318  0651  1D03               	btfss	3,2
  1319  0652  2E54               	goto	u791
  1320  0653  2E55               	goto	u790
  1321  0654                     u791:
  1322  0654  2E5B               	goto	l216
  1323  0655                     u790:
  1324  0655                     l1435:
  1325                           
  1326                           ;ADC.c: 274:        {;ADC.c: 275:         contador = contador - 1;
  1327  0655  0855               	movf	_contador,w
  1328  0656  3EFF               	addlw	255
  1329  0657  00F4               	movwf	??_contador_lcd
  1330  0658  0874               	movf	??_contador_lcd,w
  1331  0659  00D5               	movwf	_contador
  1332  065A  2E4D               	goto	l1431
  1333  065B                     l216:
  1334  065B  0008               	return
  1335  065C                     __end_of_contador_lcd:
  1336                           
  1337                           	psect	text3
  1338  013C                     __ptext3:	
  1339 ;; *************** function ___xxtofl *****************
  1340 ;; Defined at:
  1341 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  sign            1    wreg     unsigned char 
  1344 ;;  val             4   13[BANK0 ] long 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  sign            1   21[BANK0 ] unsigned char 
  1347 ;;  arg             4   23[BANK0 ] unsigned long 
  1348 ;;  exp             1   22[BANK0 ] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  4   13[BANK0 ] unsigned char 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         0       4       0       0       0
  1359 ;;      Locals:         0       6       0       0       0
  1360 ;;      Temps:          0       4       0       0       0
  1361 ;;      Totals:         0      14       0       0       0
  1362 ;;Total ram usage:       14 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; Hardware stack levels required when called:    2
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		_conversion
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           
  1373                           ;psect for function ___xxtofl
  1374  013C                     ___xxtofl:
  1375                           
  1376                           ;incstack = 0
  1377                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1378                           ;___xxtofl@sign stored from wreg
  1379  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1380  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1381  013E  00B5               	movwf	___xxtofl@sign
  1382  013F                     l1453:
  1383  013F  0835               	movf	___xxtofl@sign,w
  1384  0140  1903               	btfsc	3,2
  1385  0141  2943               	goto	u841
  1386  0142  2944               	goto	u840
  1387  0143                     u841:
  1388  0143  2958               	goto	l1459
  1389  0144                     u840:
  1390  0144                     l1455:
  1391  0144  1FB0               	btfss	___xxtofl@val+3,7
  1392  0145  2947               	goto	u851
  1393  0146  2948               	goto	u850
  1394  0147                     u851:
  1395  0147  2958               	goto	l1459
  1396  0148                     u850:
  1397  0148                     l1457:
  1398  0148  092D               	comf	___xxtofl@val,w
  1399  0149  00B7               	movwf	___xxtofl@arg
  1400  014A  092E               	comf	___xxtofl@val+1,w
  1401  014B  00B8               	movwf	___xxtofl@arg+1
  1402  014C  092F               	comf	___xxtofl@val+2,w
  1403  014D  00B9               	movwf	___xxtofl@arg+2
  1404  014E  0930               	comf	___xxtofl@val+3,w
  1405  014F  00BA               	movwf	___xxtofl@arg+3
  1406  0150  0AB7               	incf	___xxtofl@arg,f
  1407  0151  1903               	skipnz
  1408  0152  0AB8               	incf	___xxtofl@arg+1,f
  1409  0153  1903               	skipnz
  1410  0154  0AB9               	incf	___xxtofl@arg+2,f
  1411  0155  1903               	skipnz
  1412  0156  0ABA               	incf	___xxtofl@arg+3,f
  1413  0157  2960               	goto	l778
  1414  0158                     l1459:
  1415  0158  0830               	movf	___xxtofl@val+3,w
  1416  0159  00BA               	movwf	___xxtofl@arg+3
  1417  015A  082F               	movf	___xxtofl@val+2,w
  1418  015B  00B9               	movwf	___xxtofl@arg+2
  1419  015C  082E               	movf	___xxtofl@val+1,w
  1420  015D  00B8               	movwf	___xxtofl@arg+1
  1421  015E  082D               	movf	___xxtofl@val,w
  1422  015F  00B7               	movwf	___xxtofl@arg
  1423  0160                     l778:
  1424  0160  0830               	movf	___xxtofl@val+3,w
  1425  0161  042F               	iorwf	___xxtofl@val+2,w
  1426  0162  042E               	iorwf	___xxtofl@val+1,w
  1427  0163  042D               	iorwf	___xxtofl@val,w
  1428  0164  1D03               	skipz
  1429  0165  2967               	goto	u861
  1430  0166  2968               	goto	u860
  1431  0167                     u861:
  1432  0167  2971               	goto	l1465
  1433  0168                     u860:
  1434  0168                     l1461:
  1435  0168  3000               	movlw	0
  1436  0169  00B0               	movwf	?___xxtofl+3
  1437  016A  3000               	movlw	0
  1438  016B  00AF               	movwf	?___xxtofl+2
  1439  016C  3000               	movlw	0
  1440  016D  00AE               	movwf	?___xxtofl+1
  1441  016E  3000               	movlw	0
  1442  016F  00AD               	movwf	?___xxtofl
  1443  0170  29F7               	goto	l780
  1444  0171                     l1465:
  1445  0171  3096               	movlw	150
  1446  0172  00B1               	movwf	??___xxtofl
  1447  0173  0831               	movf	??___xxtofl,w
  1448  0174  00B6               	movwf	___xxtofl@exp
  1449  0175  2983               	goto	l1469
  1450  0176                     l1467:
  1451  0176  3001               	movlw	1
  1452  0177  00B1               	movwf	??___xxtofl
  1453  0178  0831               	movf	??___xxtofl,w
  1454  0179  07B6               	addwf	___xxtofl@exp,f
  1455  017A  3001               	movlw	1
  1456  017B                     u875:
  1457  017B  1003               	clrc
  1458  017C  0CBA               	rrf	___xxtofl@arg+3,f
  1459  017D  0CB9               	rrf	___xxtofl@arg+2,f
  1460  017E  0CB8               	rrf	___xxtofl@arg+1,f
  1461  017F  0CB7               	rrf	___xxtofl@arg,f
  1462  0180  3EFF               	addlw	-1
  1463  0181  1D03               	skipz
  1464  0182  297B               	goto	u875
  1465  0183                     l1469:
  1466  0183  30FE               	movlw	254
  1467  0184  053A               	andwf	___xxtofl@arg+3,w
  1468  0185  1D03               	btfss	3,2
  1469  0186  2988               	goto	u881
  1470  0187  2989               	goto	u880
  1471  0188                     u881:
  1472  0188  2976               	goto	l1467
  1473  0189                     u880:
  1474  0189  29A5               	goto	l784
  1475  018A                     l1471:
  1476  018A  3001               	movlw	1
  1477  018B  00B1               	movwf	??___xxtofl
  1478  018C  0831               	movf	??___xxtofl,w
  1479  018D  07B6               	addwf	___xxtofl@exp,f
  1480  018E                     l1473:
  1481  018E  3001               	movlw	1
  1482  018F  07B7               	addwf	___xxtofl@arg,f
  1483  0190  3000               	movlw	0
  1484  0191  1803               	skipnc
  1485  0192  3001               	movlw	1
  1486  0193  07B8               	addwf	___xxtofl@arg+1,f
  1487  0194  3000               	movlw	0
  1488  0195  1803               	skipnc
  1489  0196  3001               	movlw	1
  1490  0197  07B9               	addwf	___xxtofl@arg+2,f
  1491  0198  3000               	movlw	0
  1492  0199  1803               	skipnc
  1493  019A  3001               	movlw	1
  1494  019B  07BA               	addwf	___xxtofl@arg+3,f
  1495  019C                     l1475:
  1496  019C  3001               	movlw	1
  1497  019D                     u895:
  1498  019D  1003               	clrc
  1499  019E  0CBA               	rrf	___xxtofl@arg+3,f
  1500  019F  0CB9               	rrf	___xxtofl@arg+2,f
  1501  01A0  0CB8               	rrf	___xxtofl@arg+1,f
  1502  01A1  0CB7               	rrf	___xxtofl@arg,f
  1503  01A2  3EFF               	addlw	-1
  1504  01A3  1D03               	skipz
  1505  01A4  299D               	goto	u895
  1506  01A5                     l784:
  1507  01A5  30FF               	movlw	255
  1508  01A6  053A               	andwf	___xxtofl@arg+3,w
  1509  01A7  1D03               	btfss	3,2
  1510  01A8  29AA               	goto	u901
  1511  01A9  29AB               	goto	u900
  1512  01AA                     u901:
  1513  01AA  298A               	goto	l1471
  1514  01AB                     u900:
  1515  01AB  29B7               	goto	l1479
  1516  01AC                     l1477:
  1517  01AC  3001               	movlw	1
  1518  01AD  02B6               	subwf	___xxtofl@exp,f
  1519  01AE  3001               	movlw	1
  1520  01AF  00B1               	movwf	??___xxtofl
  1521  01B0                     u915:
  1522  01B0  1003               	clrc
  1523  01B1  0DB7               	rlf	___xxtofl@arg,f
  1524  01B2  0DB8               	rlf	___xxtofl@arg+1,f
  1525  01B3  0DB9               	rlf	___xxtofl@arg+2,f
  1526  01B4  0DBA               	rlf	___xxtofl@arg+3,f
  1527  01B5  0BB1               	decfsz	??___xxtofl,f
  1528  01B6  29B0               	goto	u915
  1529  01B7                     l1479:
  1530  01B7  1BB9               	btfsc	___xxtofl@arg+2,7
  1531  01B8  29BA               	goto	u921
  1532  01B9  29BB               	goto	u920
  1533  01BA                     u921:
  1534  01BA  29C1               	goto	l791
  1535  01BB                     u920:
  1536  01BB                     l1481:
  1537  01BB  3002               	movlw	2
  1538  01BC  0236               	subwf	___xxtofl@exp,w
  1539  01BD  1803               	skipnc
  1540  01BE  29C0               	goto	u931
  1541  01BF  29C1               	goto	u930
  1542  01C0                     u931:
  1543  01C0  29AC               	goto	l1477
  1544  01C1                     u930:
  1545  01C1                     l791:
  1546  01C1  1836               	btfsc	___xxtofl@exp,0
  1547  01C2  29C4               	goto	u941
  1548  01C3  29C5               	goto	u940
  1549  01C4                     u941:
  1550  01C4  29CD               	goto	l792
  1551  01C5                     u940:
  1552  01C5                     l1483:
  1553  01C5  30FF               	movlw	255
  1554  01C6  05B7               	andwf	___xxtofl@arg,f
  1555  01C7  30FF               	movlw	255
  1556  01C8  05B8               	andwf	___xxtofl@arg+1,f
  1557  01C9  307F               	movlw	127
  1558  01CA  05B9               	andwf	___xxtofl@arg+2,f
  1559  01CB  30FF               	movlw	255
  1560  01CC  05BA               	andwf	___xxtofl@arg+3,f
  1561  01CD                     l792:
  1562  01CD  1003               	clrc
  1563  01CE  0CB6               	rrf	___xxtofl@exp,f
  1564  01CF                     l1485:
  1565  01CF  0836               	movf	___xxtofl@exp,w
  1566  01D0  00B1               	movwf	??___xxtofl
  1567  01D1  01B2               	clrf	??___xxtofl+1
  1568  01D2  01B3               	clrf	??___xxtofl+2
  1569  01D3  01B4               	clrf	??___xxtofl+3
  1570  01D4  3018               	movlw	24
  1571  01D5                     u955:
  1572  01D5  1003               	clrc
  1573  01D6  0DB1               	rlf	??___xxtofl,f
  1574  01D7  0DB2               	rlf	??___xxtofl+1,f
  1575  01D8  0DB3               	rlf	??___xxtofl+2,f
  1576  01D9  0DB4               	rlf	??___xxtofl+3,f
  1577  01DA                     u950:
  1578  01DA  3EFF               	addlw	-1
  1579  01DB  1D03               	skipz
  1580  01DC  29D5               	goto	u955
  1581  01DD  0831               	movf	??___xxtofl,w
  1582  01DE  04B7               	iorwf	___xxtofl@arg,f
  1583  01DF  0832               	movf	??___xxtofl+1,w
  1584  01E0  04B8               	iorwf	___xxtofl@arg+1,f
  1585  01E1  0833               	movf	??___xxtofl+2,w
  1586  01E2  04B9               	iorwf	___xxtofl@arg+2,f
  1587  01E3  0834               	movf	??___xxtofl+3,w
  1588  01E4  04BA               	iorwf	___xxtofl@arg+3,f
  1589  01E5                     l1487:
  1590  01E5  0835               	movf	___xxtofl@sign,w
  1591  01E6  1903               	btfsc	3,2
  1592  01E7  29E9               	goto	u961
  1593  01E8  29EA               	goto	u960
  1594  01E9                     u961:
  1595  01E9  29EF               	goto	l1493
  1596  01EA                     u960:
  1597  01EA                     l1489:
  1598  01EA  1FB0               	btfss	___xxtofl@val+3,7
  1599  01EB  29ED               	goto	u971
  1600  01EC  29EE               	goto	u970
  1601  01ED                     u971:
  1602  01ED  29EF               	goto	l1493
  1603  01EE                     u970:
  1604  01EE                     l1491:
  1605  01EE  17BA               	bsf	___xxtofl@arg+3,7
  1606  01EF                     l1493:
  1607  01EF  083A               	movf	___xxtofl@arg+3,w
  1608  01F0  00B0               	movwf	?___xxtofl+3
  1609  01F1  0839               	movf	___xxtofl@arg+2,w
  1610  01F2  00AF               	movwf	?___xxtofl+2
  1611  01F3  0838               	movf	___xxtofl@arg+1,w
  1612  01F4  00AE               	movwf	?___xxtofl+1
  1613  01F5  0837               	movf	___xxtofl@arg,w
  1614  01F6  00AD               	movwf	?___xxtofl
  1615  01F7                     l780:
  1616  01F7  0008               	return
  1617  01F8                     __end_of___xxtofl:
  1618                           
  1619                           	psect	text4
  1620  05F3                     __ptext4:	
  1621 ;; *************** function ___wmul *****************
  1622 ;; Defined at:
  1623 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1626 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  product         2    4[COMMON] unsigned int 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  2    0[BANK0 ] unsigned int 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         0       4       0       0       0
  1639 ;;      Locals:         2       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0
  1641 ;;      Totals:         2       4       0       0       0
  1642 ;;Total ram usage:        6 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    2
  1645 ;; This function calls:
  1646 ;;		Nothing
  1647 ;; This function is called by:
  1648 ;;		_conversion
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           
  1653                           ;psect for function ___wmul
  1654  05F3                     ___wmul:
  1655  05F3                     l1701:	
  1656                           ;incstack = 0
  1657                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1658                           
  1659  05F3  01F4               	clrf	___wmul@product
  1660  05F4  01F5               	clrf	___wmul@product+1
  1661  05F5                     l1703:
  1662  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1663  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1664  05F7  1C20               	btfss	___wmul@multiplier,0
  1665  05F8  2DFA               	goto	u1181
  1666  05F9  2DFB               	goto	u1180
  1667  05FA                     u1181:
  1668  05FA  2E01               	goto	l345
  1669  05FB                     u1180:
  1670  05FB                     l1705:
  1671  05FB  0822               	movf	___wmul@multiplicand,w
  1672  05FC  07F4               	addwf	___wmul@product,f
  1673  05FD  1803               	skipnc
  1674  05FE  0AF5               	incf	___wmul@product+1,f
  1675  05FF  0823               	movf	___wmul@multiplicand+1,w
  1676  0600  07F5               	addwf	___wmul@product+1,f
  1677  0601                     l345:
  1678  0601  3001               	movlw	1
  1679  0602                     u1195:
  1680  0602  1003               	clrc
  1681  0603  0DA2               	rlf	___wmul@multiplicand,f
  1682  0604  0DA3               	rlf	___wmul@multiplicand+1,f
  1683  0605  3EFF               	addlw	-1
  1684  0606  1D03               	skipz
  1685  0607  2E02               	goto	u1195
  1686  0608                     l1707:
  1687  0608  3001               	movlw	1
  1688  0609                     u1205:
  1689  0609  1003               	clrc
  1690  060A  0CA1               	rrf	___wmul@multiplier+1,f
  1691  060B  0CA0               	rrf	___wmul@multiplier,f
  1692  060C  3EFF               	addlw	-1
  1693  060D  1D03               	skipz
  1694  060E  2E09               	goto	u1205
  1695  060F                     l1709:
  1696  060F  0820               	movf	___wmul@multiplier,w
  1697  0610  0421               	iorwf	___wmul@multiplier+1,w
  1698  0611  1D03               	btfss	3,2
  1699  0612  2E14               	goto	u1211
  1700  0613  2E15               	goto	u1210
  1701  0614                     u1211:
  1702  0614  2DF5               	goto	l1703
  1703  0615                     u1210:
  1704  0615                     l1711:
  1705  0615  0875               	movf	___wmul@product+1,w
  1706  0616  00A1               	movwf	?___wmul+1
  1707  0617  0874               	movf	___wmul@product,w
  1708  0618  00A0               	movwf	?___wmul
  1709  0619                     l347:
  1710  0619  0008               	return
  1711  061A                     __end_of___wmul:
  1712                           
  1713                           	psect	text5
  1714  061A                     __ptext5:	
  1715 ;; *************** function _Lcd_Set_Cursor *****************
  1716 ;; Defined at:
  1717 ;;		line 78 in file "./Libreria.h"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  a               1    wreg     unsigned char 
  1720 ;;  b               1    1[BANK0 ] unsigned char 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  a               1    3[BANK0 ] unsigned char 
  1723 ;;  temp            1    4[BANK0 ] unsigned char 
  1724 ;;  y               1    0        unsigned char 
  1725 ;;  z               1    0        unsigned char 
  1726 ;; Return value:  Size  Location     Type
  1727 ;;                  1    wreg      void 
  1728 ;; Registers used:
  1729 ;;		wreg, status,2, status,0, pclath, cstack
  1730 ;; Tracked objects:
  1731 ;;		On entry : 0/0
  1732 ;;		On exit  : 0/0
  1733 ;;		Unchanged: 0/0
  1734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1735 ;;      Params:         0       1       0       0       0
  1736 ;;      Locals:         0       2       0       0       0
  1737 ;;      Temps:          0       1       0       0       0
  1738 ;;      Totals:         0       4       0       0       0
  1739 ;;Total ram usage:        4 bytes
  1740 ;; Hardware stack levels used:    1
  1741 ;; Hardware stack levels required when called:    3
  1742 ;; This function calls:
  1743 ;;		_Lcd_Cmd
  1744 ;; This function is called by:
  1745 ;;		_main
  1746 ;;		_conversion
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           
  1751                           ;psect for function _Lcd_Set_Cursor
  1752  061A                     _Lcd_Set_Cursor:
  1753                           
  1754                           ;incstack = 0
  1755                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1756                           ;Lcd_Set_Cursor@a stored from wreg
  1757  061A  1283               	bcf	3,5	;RP0=0, select bank0
  1758  061B  1303               	bcf	3,6	;RP1=0, select bank0
  1759  061C  00A3               	movwf	Lcd_Set_Cursor@a
  1760  061D                     l1655:
  1761                           
  1762                           ;./Libreria.h: 78:  };./Libreria.h: 79:  else if(a == 2);./Libreria.h: 80:  {;./Libreria
      +                          .h: 81:   temp = 0xC0 + b - 1;
  1763  061D  0323               	decf	Lcd_Set_Cursor@a,w
  1764  061E  1D03               	btfss	3,2
  1765  061F  2E21               	goto	u1161
  1766  0620  2E22               	goto	u1160
  1767  0621                     u1161:
  1768  0621  2E2E               	goto	l1661
  1769  0622                     u1160:
  1770  0622                     l1657:
  1771                           
  1772                           ;./Libreria.h: 82: ;./Libreria.h: 83: 
  1773  0622  0821               	movf	Lcd_Set_Cursor@b,w
  1774  0623  3E7F               	addlw	127
  1775  0624  00A2               	movwf	??_Lcd_Set_Cursor
  1776  0625  0822               	movf	??_Lcd_Set_Cursor,w
  1777  0626  00A4               	movwf	Lcd_Set_Cursor@temp
  1778  0627                     l1659:
  1779                           
  1780                           ;./Libreria.h: 86:  }
  1781  0627  0824               	movf	Lcd_Set_Cursor@temp,w
  1782  0628  120A  118A  2677  120A  118A  	fcall	_Lcd_Cmd
  1783                           
  1784                           ;./Libreria.h: 88: 
  1785  062D  2E3F               	goto	l97
  1786  062E                     l1661:
  1787  062E  3002               	movlw	2
  1788  062F  0623               	xorwf	Lcd_Set_Cursor@a,w
  1789  0630  1D03               	btfss	3,2
  1790  0631  2E33               	goto	u1171
  1791  0632  2E34               	goto	u1170
  1792  0633                     u1171:
  1793  0633  2E3F               	goto	l97
  1794  0634                     u1170:
  1795  0634                     l1663:
  1796                           
  1797                           ;./Libreria.h: 90:     PORTDbits.RD2 = 1;;./Libreria.h: 91:     PORTB = a;
  1798  0634  0821               	movf	Lcd_Set_Cursor@b,w
  1799  0635  3EBF               	addlw	191
  1800  0636  00A2               	movwf	??_Lcd_Set_Cursor
  1801  0637  0822               	movf	??_Lcd_Set_Cursor,w
  1802  0638  00A4               	movwf	Lcd_Set_Cursor@temp
  1803  0639                     l1665:
  1804                           
  1805                           ;./Libreria.h: 94:     PORTDbits.RD3=0;
  1806  0639  0824               	movf	Lcd_Set_Cursor@temp,w
  1807  063A  120A  118A  2677  120A  118A  	fcall	_Lcd_Cmd
  1808  063F                     l97:
  1809  063F  0008               	return
  1810  0640                     __end_of_Lcd_Set_Cursor:
  1811                           
  1812                           	psect	text6
  1813  01F8                     __ptext6:	
  1814 ;; *************** function _Conversion2 *****************
  1815 ;; Defined at:
  1816 ;;		line 188 in file "ADC.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;		None
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      void 
  1823 ;; Registers used:
  1824 ;;		wreg, status,2, status,0, pclath, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1830 ;;      Params:         0       0       0       0       0
  1831 ;;      Locals:         0       0       0       0       0
  1832 ;;      Temps:          0       3       0       0       0
  1833 ;;      Totals:         0       3       0       0       0
  1834 ;;Total ram usage:        3 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    4
  1837 ;; This function calls:
  1838 ;;		_Lcd_Write_Char
  1839 ;;		___awdiv
  1840 ;;		___awmod
  1841 ;;		_display2
  1842 ;;		_display3
  1843 ;; This function is called by:
  1844 ;;		_conversion
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           
  1849                           ;psect for function _Conversion2
  1850  01F8                     _Conversion2:
  1851  01F8                     l1683:	
  1852                           ;incstack = 0
  1853                           ; Regs used in _Conversion2: [wreg+status,2+status,0+pclath+cstack]
  1854                           
  1855                           
  1856                           ;ADC.c: 191:     enterob = (b*2)/ 100;
  1857  01F8  3064               	movlw	100
  1858  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1859  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1860  01FB  00A4               	movwf	___awdiv@divisor
  1861  01FC  3000               	movlw	0
  1862  01FD  00A5               	movwf	___awdiv@divisor+1
  1863  01FE  0860               	movf	_b,w
  1864  01FF  00AD               	movwf	??_Conversion2
  1865  0200  01AE               	clrf	??_Conversion2+1
  1866  0201  1003               	clrc
  1867  0202  0D2D               	rlf	??_Conversion2,w
  1868  0203  00A6               	movwf	___awdiv@dividend
  1869  0204  0D2E               	rlf	??_Conversion2+1,w
  1870  0205  00A7               	movwf	___awdiv@dividend+1
  1871  0206  120A  118A  2395  120A  118A  	fcall	___awdiv
  1872  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1873  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1874  020D  0824               	movf	?___awdiv,w
  1875  020E  00AF               	movwf	??_Conversion2+2
  1876  020F  082F               	movf	??_Conversion2+2,w
  1877  0210  00F6               	movwf	_enterob
  1878                           
  1879                           ;ADC.c: 192:     decima1b = enterob%100;
  1880  0211  3064               	movlw	100
  1881  0212  00A0               	movwf	___awmod@divisor
  1882  0213  3000               	movlw	0
  1883  0214  00A1               	movwf	___awmod@divisor+1
  1884  0215  0876               	movf	_enterob,w
  1885  0216  00AD               	movwf	??_Conversion2
  1886  0217  01AE               	clrf	??_Conversion2+1
  1887  0218  082D               	movf	??_Conversion2,w
  1888  0219  00A2               	movwf	___awmod@dividend
  1889  021A  082E               	movf	??_Conversion2+1,w
  1890  021B  00A3               	movwf	___awmod@dividend+1
  1891  021C  120A  118A  23FE  120A  118A  	fcall	___awmod
  1892  0221  1283               	bcf	3,5	;RP0=0, select bank0
  1893  0222  1303               	bcf	3,6	;RP1=0, select bank0
  1894  0223  0820               	movf	?___awmod,w
  1895  0224  00AF               	movwf	??_Conversion2+2
  1896  0225  082F               	movf	??_Conversion2+2,w
  1897  0226  00DC               	movwf	_decima1b
  1898                           
  1899                           ;ADC.c: 193:     centena1b = decima1b /10;
  1900  0227  300A               	movlw	10
  1901  0228  00A4               	movwf	___awdiv@divisor
  1902  0229  3000               	movlw	0
  1903  022A  00A5               	movwf	___awdiv@divisor+1
  1904  022B  085C               	movf	_decima1b,w
  1905  022C  00AD               	movwf	??_Conversion2
  1906  022D  01AE               	clrf	??_Conversion2+1
  1907  022E  082D               	movf	??_Conversion2,w
  1908  022F  00A6               	movwf	___awdiv@dividend
  1909  0230  082E               	movf	??_Conversion2+1,w
  1910  0231  00A7               	movwf	___awdiv@dividend+1
  1911  0232  120A  118A  2395  120A  118A  	fcall	___awdiv
  1912  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1913  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1914  0239  0824               	movf	?___awdiv,w
  1915  023A  00AF               	movwf	??_Conversion2+2
  1916  023B  082F               	movf	??_Conversion2+2,w
  1917  023C  00DB               	movwf	_centena1b
  1918                           
  1919                           ;ADC.c: 194:     decima2b = decima1b % 10;
  1920  023D  300A               	movlw	10
  1921  023E  00A0               	movwf	___awmod@divisor
  1922  023F  3000               	movlw	0
  1923  0240  00A1               	movwf	___awmod@divisor+1
  1924  0241  085C               	movf	_decima1b,w
  1925  0242  00AD               	movwf	??_Conversion2
  1926  0243  01AE               	clrf	??_Conversion2+1
  1927  0244  082D               	movf	??_Conversion2,w
  1928  0245  00A2               	movwf	___awmod@dividend
  1929  0246  082E               	movf	??_Conversion2+1,w
  1930  0247  00A3               	movwf	___awmod@dividend+1
  1931  0248  120A  118A  23FE  120A  118A  	fcall	___awmod
  1932  024D  1283               	bcf	3,5	;RP0=0, select bank0
  1933  024E  1303               	bcf	3,6	;RP1=0, select bank0
  1934  024F  0820               	movf	?___awmod,w
  1935  0250  00AF               	movwf	??_Conversion2+2
  1936  0251  082F               	movf	??_Conversion2+2,w
  1937  0252  00DA               	movwf	_decima2b
  1938  0253                     l1685:
  1939                           
  1940                           ;ADC.c: 195:     centena2b = decima2b/1;
  1941  0253  085A               	movf	_decima2b,w
  1942  0254  00AD               	movwf	??_Conversion2
  1943  0255  082D               	movf	??_Conversion2,w
  1944  0256  00D9               	movwf	_centena2b
  1945  0257                     l1687:
  1946                           
  1947                           ;ADC.c: 196:     Lcd_Write_Char(enterob+48);
  1948  0257  0876               	movf	_enterob,w
  1949  0258  3E30               	addlw	48
  1950  0259  120A  118A  269C  120A  118A  	fcall	_Lcd_Write_Char
  1951  025E                     l1689:
  1952                           
  1953                           ;ADC.c: 197:     Lcd_Write_Char(46);
  1954  025E  302E               	movlw	46
  1955  025F  120A  118A  269C  120A  118A  	fcall	_Lcd_Write_Char
  1956  0264                     l1691:
  1957                           
  1958                           ;ADC.c: 198:     Lcd_Write_Char(centena1b+48);
  1959  0264  1283               	bcf	3,5	;RP0=0, select bank0
  1960  0265  1303               	bcf	3,6	;RP1=0, select bank0
  1961  0266  085B               	movf	_centena1b,w
  1962  0267  3E30               	addlw	48
  1963  0268  120A  118A  269C  120A  118A  	fcall	_Lcd_Write_Char
  1964  026D                     l1693:
  1965                           
  1966                           ;ADC.c: 199:     Lcd_Write_Char(centena2b+48);
  1967  026D  1283               	bcf	3,5	;RP0=0, select bank0
  1968  026E  1303               	bcf	3,6	;RP1=0, select bank0
  1969  026F  0859               	movf	_centena2b,w
  1970  0270  3E30               	addlw	48
  1971  0271  120A  118A  269C  120A  118A  	fcall	_Lcd_Write_Char
  1972  0276                     l1695:
  1973                           
  1974                           ;ADC.c: 200:     Lcd_Write_Char(86);
  1975  0276  3056               	movlw	86
  1976  0277  120A  118A  269C  120A  118A  	fcall	_Lcd_Write_Char
  1977  027C                     l1697:
  1978                           
  1979                           ;ADC.c: 201:     display2 ();
  1980  027C  120A  118A  24A8  120A  118A  	fcall	_display2
  1981  0281                     l1699:
  1982                           
  1983                           ;ADC.c: 202:     display3();
  1984  0281  120A  118A  2459  120A  118A  	fcall	_display3
  1985  0286                     l199:
  1986  0286  0008               	return
  1987  0287                     __end_of_Conversion2:
  1988                           
  1989                           	psect	text7
  1990  0459                     __ptext7:	
  1991 ;; *************** function _display3 *****************
  1992 ;; Defined at:
  1993 ;;		line 240 in file "ADC.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0, pclath, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         0       0       0       0       0
  2008 ;;      Locals:         0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0
  2010 ;;      Totals:         0       0       0       0       0
  2011 ;;Total ram usage:        0 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    3
  2014 ;; This function calls:
  2015 ;;		_dato_char
  2016 ;; This function is called by:
  2017 ;;		_Conversion2
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           
  2022                           ;psect for function _display3
  2023  0459                     _display3:
  2024  0459                     l1293:	
  2025                           ;incstack = 0
  2026                           ; Regs used in _display3: [wreg+status,2+status,0+pclath+cstack]
  2027                           
  2028                           
  2029                           ;ADC.c: 243:     {;ADC.c: 244:         if (contador < 10)
  2030  0459  300A               	movlw	10
  2031  045A  1283               	bcf	3,5	;RP0=0, select bank0
  2032  045B  1303               	bcf	3,6	;RP1=0, select bank0
  2033  045C  0255               	subwf	_contador,w
  2034  045D  1803               	skipnc
  2035  045E  2C60               	goto	u561
  2036  045F  2C61               	goto	u560
  2037  0460                     u561:
  2038  0460  2C83               	goto	l1297
  2039  0461                     u560:
  2040  0461                     l1295:
  2041                           
  2042                           ;ADC.c: 245:         {;ADC.c: 246:              dato_char(67);
  2043  0461  3043               	movlw	67
  2044  0462  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2045                           
  2046                           ;ADC.c: 247:              dato_char(58);
  2047  0467  303A               	movlw	58
  2048  0468  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2049                           
  2050                           ;ADC.c: 248:              dato_char(48);
  2051  046D  3030               	movlw	48
  2052  046E  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2053                           
  2054                           ;ADC.c: 249:              dato_char(contador+48);
  2055  0473  1283               	bcf	3,5	;RP0=0, select bank0
  2056  0474  1303               	bcf	3,6	;RP1=0, select bank0
  2057  0475  0855               	movf	_contador,w
  2058  0476  3E30               	addlw	48
  2059  0477  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2060                           
  2061                           ;ADC.c: 250:              dato_char('\r');
  2062  047C  300D               	movlw	13
  2063  047D  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2064                           
  2065                           ;ADC.c: 252:         }
  2066  0482  2CA7               	goto	l210
  2067  0483                     l1297:
  2068                           
  2069                           ;ADC.c: 254:         {;ADC.c: 255:              dato_char(67);
  2070  0483  3043               	movlw	67
  2071  0484  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2072                           
  2073                           ;ADC.c: 256:              dato_char(58);
  2074  0489  303A               	movlw	58
  2075  048A  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2076                           
  2077                           ;ADC.c: 257:              dato_char(w1+48);
  2078  048F  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0490  1303               	bcf	3,6	;RP1=0, select bank0
  2080  0491  0852               	movf	_w1,w
  2081  0492  3E30               	addlw	48
  2082  0493  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2083                           
  2084                           ;ADC.c: 258:              dato_char(w2+48);
  2085  0498  1283               	bcf	3,5	;RP0=0, select bank0
  2086  0499  1303               	bcf	3,6	;RP1=0, select bank0
  2087  049A  0851               	movf	_w2,w
  2088  049B  3E30               	addlw	48
  2089  049C  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2090                           
  2091                           ;ADC.c: 259:              dato_char('\r');
  2092  04A1  300D               	movlw	13
  2093  04A2  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2094  04A7                     l210:
  2095  04A7  0008               	return
  2096  04A8                     __end_of_display3:
  2097                           
  2098                           	psect	text8
  2099  04A8                     __ptext8:	
  2100 ;; *************** function _display2 *****************
  2101 ;; Defined at:
  2102 ;;		line 222 in file "ADC.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;		None
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  1    wreg      void 
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0, pclath, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2116 ;;      Params:         0       0       0       0       0
  2117 ;;      Locals:         0       0       0       0       0
  2118 ;;      Temps:          0       0       0       0       0
  2119 ;;      Totals:         0       0       0       0       0
  2120 ;;Total ram usage:        0 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    3
  2123 ;; This function calls:
  2124 ;;		_dato_char
  2125 ;; This function is called by:
  2126 ;;		_Conversion2
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           
  2131                           ;psect for function _display2
  2132  04A8                     _display2:
  2133  04A8                     l1291:	
  2134                           ;incstack = 0
  2135                           ; Regs used in _display2: [wreg+status,2+status,0+pclath+cstack]
  2136                           
  2137                           
  2138                           ;ADC.c: 225:     {;ADC.c: 226:          dato_char(83);
  2139  04A8  3053               	movlw	83
  2140  04A9  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2141                           
  2142                           ;ADC.c: 227:          dato_char(50);
  2143  04AE  3032               	movlw	50
  2144  04AF  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2145                           
  2146                           ;ADC.c: 228:          dato_char(58);
  2147  04B4  303A               	movlw	58
  2148  04B5  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2149                           
  2150                           ;ADC.c: 229:          dato_char(enterob+48);
  2151  04BA  0876               	movf	_enterob,w
  2152  04BB  3E30               	addlw	48
  2153  04BC  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2154                           
  2155                           ;ADC.c: 230:          dato_char(46);
  2156  04C1  302E               	movlw	46
  2157  04C2  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2158                           
  2159                           ;ADC.c: 231:          dato_char(centena1b+48);
  2160  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  2161  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  2162  04C9  085B               	movf	_centena1b,w
  2163  04CA  3E30               	addlw	48
  2164  04CB  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2165                           
  2166                           ;ADC.c: 232:          dato_char(centena2b+48);
  2167  04D0  1283               	bcf	3,5	;RP0=0, select bank0
  2168  04D1  1303               	bcf	3,6	;RP1=0, select bank0
  2169  04D2  0859               	movf	_centena2b,w
  2170  04D3  3E30               	addlw	48
  2171  04D4  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2172                           
  2173                           ;ADC.c: 233:          dato_char(86);
  2174  04D9  3056               	movlw	86
  2175  04DA  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2176                           
  2177                           ;ADC.c: 234:          dato_char(32);
  2178  04DF  3020               	movlw	32
  2179  04E0  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2180                           
  2181                           ;ADC.c: 235:          dato_char(32);
  2182  04E5  3020               	movlw	32
  2183  04E6  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2184  04EB                     l205:
  2185  04EB  0008               	return
  2186  04EC                     __end_of_display2:
  2187                           
  2188                           	psect	text9
  2189  0287                     __ptext9:	
  2190 ;; *************** function _Conversion1 *****************
  2191 ;; Defined at:
  2192 ;;		line 173 in file "ADC.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0, pclath, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2206 ;;      Params:         0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0
  2208 ;;      Temps:          0       3       0       0       0
  2209 ;;      Totals:         0       3       0       0       0
  2210 ;;Total ram usage:        3 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    4
  2213 ;; This function calls:
  2214 ;;		_Lcd_Write_Char
  2215 ;;		___awdiv
  2216 ;;		___awmod
  2217 ;;		_display1
  2218 ;; This function is called by:
  2219 ;;		_conversion
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           
  2224                           ;psect for function _Conversion1
  2225  0287                     _Conversion1:
  2226  0287                     l1667:	
  2227                           ;incstack = 0
  2228                           ; Regs used in _Conversion1: [wreg+status,2+status,0+pclath+cstack]
  2229                           
  2230                           
  2231                           ;ADC.c: 175:     enteroc = (c*2)/100;
  2232  0287  3064               	movlw	100
  2233  0288  1283               	bcf	3,5	;RP0=0, select bank0
  2234  0289  1303               	bcf	3,6	;RP1=0, select bank0
  2235  028A  00A4               	movwf	___awdiv@divisor
  2236  028B  3000               	movlw	0
  2237  028C  00A5               	movwf	___awdiv@divisor+1
  2238  028D  0861               	movf	_c,w
  2239  028E  00AD               	movwf	??_Conversion1
  2240  028F  01AE               	clrf	??_Conversion1+1
  2241  0290  1003               	clrc
  2242  0291  0D2D               	rlf	??_Conversion1,w
  2243  0292  00A6               	movwf	___awdiv@dividend
  2244  0293  0D2E               	rlf	??_Conversion1+1,w
  2245  0294  00A7               	movwf	___awdiv@dividend+1
  2246  0295  120A  118A  2395  120A  118A  	fcall	___awdiv
  2247  029A  1283               	bcf	3,5	;RP0=0, select bank0
  2248  029B  1303               	bcf	3,6	;RP1=0, select bank0
  2249  029C  0824               	movf	?___awdiv,w
  2250  029D  00AF               	movwf	??_Conversion1+2
  2251  029E  082F               	movf	??_Conversion1+2,w
  2252  029F  00F9               	movwf	_enteroc
  2253                           
  2254                           ;ADC.c: 176:     decima1c = enteroc%100;
  2255  02A0  3064               	movlw	100
  2256  02A1  00A0               	movwf	___awmod@divisor
  2257  02A2  3000               	movlw	0
  2258  02A3  00A1               	movwf	___awmod@divisor+1
  2259  02A4  0879               	movf	_enteroc,w
  2260  02A5  00AD               	movwf	??_Conversion1
  2261  02A6  01AE               	clrf	??_Conversion1+1
  2262  02A7  082D               	movf	??_Conversion1,w
  2263  02A8  00A2               	movwf	___awmod@dividend
  2264  02A9  082E               	movf	??_Conversion1+1,w
  2265  02AA  00A3               	movwf	___awmod@dividend+1
  2266  02AB  120A  118A  23FE  120A  118A  	fcall	___awmod
  2267  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2268  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2269  02B2  0820               	movf	?___awmod,w
  2270  02B3  00AF               	movwf	??_Conversion1+2
  2271  02B4  082F               	movf	??_Conversion1+2,w
  2272  02B5  00F8               	movwf	_decima1c
  2273                           
  2274                           ;ADC.c: 177:     centena1c = decima1c /10;
  2275  02B6  300A               	movlw	10
  2276  02B7  00A4               	movwf	___awdiv@divisor
  2277  02B8  3000               	movlw	0
  2278  02B9  00A5               	movwf	___awdiv@divisor+1
  2279  02BA  0878               	movf	_decima1c,w
  2280  02BB  00AD               	movwf	??_Conversion1
  2281  02BC  01AE               	clrf	??_Conversion1+1
  2282  02BD  082D               	movf	??_Conversion1,w
  2283  02BE  00A6               	movwf	___awdiv@dividend
  2284  02BF  082E               	movf	??_Conversion1+1,w
  2285  02C0  00A7               	movwf	___awdiv@dividend+1
  2286  02C1  120A  118A  2395  120A  118A  	fcall	___awdiv
  2287  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2288  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2289  02C8  0824               	movf	?___awdiv,w
  2290  02C9  00AF               	movwf	??_Conversion1+2
  2291  02CA  082F               	movf	??_Conversion1+2,w
  2292  02CB  00F7               	movwf	_centena1c
  2293                           
  2294                           ;ADC.c: 178:     decima2c = decima1c % 10;
  2295  02CC  300A               	movlw	10
  2296  02CD  00A0               	movwf	___awmod@divisor
  2297  02CE  3000               	movlw	0
  2298  02CF  00A1               	movwf	___awmod@divisor+1
  2299  02D0  0878               	movf	_decima1c,w
  2300  02D1  00AD               	movwf	??_Conversion1
  2301  02D2  01AE               	clrf	??_Conversion1+1
  2302  02D3  082D               	movf	??_Conversion1,w
  2303  02D4  00A2               	movwf	___awmod@dividend
  2304  02D5  082E               	movf	??_Conversion1+1,w
  2305  02D6  00A3               	movwf	___awmod@dividend+1
  2306  02D7  120A  118A  23FE  120A  118A  	fcall	___awmod
  2307  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  2308  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  2309  02DE  0820               	movf	?___awmod,w
  2310  02DF  00AF               	movwf	??_Conversion1+2
  2311  02E0  082F               	movf	??_Conversion1+2,w
  2312  02E1  00DE               	movwf	_decima2c
  2313  02E2                     l1669:
  2314                           
  2315                           ;ADC.c: 179:     centena2c = decima2c/1;
  2316  02E2  085E               	movf	_decima2c,w
  2317  02E3  00AD               	movwf	??_Conversion1
  2318  02E4  082D               	movf	??_Conversion1,w
  2319  02E5  00DD               	movwf	_centena2c
  2320  02E6                     l1671:
  2321                           
  2322                           ;ADC.c: 180:     Lcd_Write_Char(enteroc+48);
  2323  02E6  0879               	movf	_enteroc,w
  2324  02E7  3E30               	addlw	48
  2325  02E8  120A  118A  269C  120A  118A  	fcall	_Lcd_Write_Char
  2326  02ED                     l1673:
  2327                           
  2328                           ;ADC.c: 181:     Lcd_Write_Char(46);
  2329  02ED  302E               	movlw	46
  2330  02EE  120A  118A  269C  120A  118A  	fcall	_Lcd_Write_Char
  2331  02F3                     l1675:
  2332                           
  2333                           ;ADC.c: 182:     Lcd_Write_Char(centena1c+48);
  2334  02F3  0877               	movf	_centena1c,w
  2335  02F4  3E30               	addlw	48
  2336  02F5  120A  118A  269C  120A  118A  	fcall	_Lcd_Write_Char
  2337  02FA                     l1677:
  2338                           
  2339                           ;ADC.c: 183:     Lcd_Write_Char(centena2c+48);
  2340  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2341  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2342  02FC  085D               	movf	_centena2c,w
  2343  02FD  3E30               	addlw	48
  2344  02FE  120A  118A  269C  120A  118A  	fcall	_Lcd_Write_Char
  2345  0303                     l1679:
  2346                           
  2347                           ;ADC.c: 184:     Lcd_Write_Char(86);
  2348  0303  3056               	movlw	86
  2349  0304  120A  118A  269C  120A  118A  	fcall	_Lcd_Write_Char
  2350  0309                     l1681:
  2351                           
  2352                           ;ADC.c: 185:     display1();
  2353  0309  120A  118A  24EC  120A  118A  	fcall	_display1
  2354  030E                     l196:
  2355  030E  0008               	return
  2356  030F                     __end_of_Conversion1:
  2357                           
  2358                           	psect	text10
  2359  04EC                     __ptext10:	
  2360 ;; *************** function _display1 *****************
  2361 ;; Defined at:
  2362 ;;		line 205 in file "ADC.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;		None
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;		None
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0, pclath, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2376 ;;      Params:         0       0       0       0       0
  2377 ;;      Locals:         0       0       0       0       0
  2378 ;;      Temps:          0       0       0       0       0
  2379 ;;      Totals:         0       0       0       0       0
  2380 ;;Total ram usage:        0 bytes
  2381 ;; Hardware stack levels used:    1
  2382 ;; Hardware stack levels required when called:    3
  2383 ;; This function calls:
  2384 ;;		_dato_char
  2385 ;; This function is called by:
  2386 ;;		_Conversion1
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           
  2391                           ;psect for function _display1
  2392  04EC                     _display1:
  2393  04EC                     l1289:	
  2394                           ;incstack = 0
  2395                           ; Regs used in _display1: [wreg+status,2+status,0+pclath+cstack]
  2396                           
  2397                           
  2398                           ;ADC.c: 208:     {;ADC.c: 209:          dato_char (83);
  2399  04EC  3053               	movlw	83
  2400  04ED  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2401                           
  2402                           ;ADC.c: 210:          dato_char(49);
  2403  04F2  3031               	movlw	49
  2404  04F3  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2405                           
  2406                           ;ADC.c: 211:          dato_char(58);
  2407  04F8  303A               	movlw	58
  2408  04F9  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2409                           
  2410                           ;ADC.c: 212:          dato_char(enteroc+48);
  2411  04FE  0879               	movf	_enteroc,w
  2412  04FF  3E30               	addlw	48
  2413  0500  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2414                           
  2415                           ;ADC.c: 213:          dato_char(46);
  2416  0505  302E               	movlw	46
  2417  0506  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2418                           
  2419                           ;ADC.c: 214:          dato_char(centena1c+48);
  2420  050B  0877               	movf	_centena1c,w
  2421  050C  3E30               	addlw	48
  2422  050D  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2423                           
  2424                           ;ADC.c: 215:          dato_char(centena2c+48);
  2425  0512  1283               	bcf	3,5	;RP0=0, select bank0
  2426  0513  1303               	bcf	3,6	;RP1=0, select bank0
  2427  0514  085D               	movf	_centena2c,w
  2428  0515  3E30               	addlw	48
  2429  0516  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2430                           
  2431                           ;ADC.c: 216:          dato_char(86);
  2432  051B  3056               	movlw	86
  2433  051C  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2434                           
  2435                           ;ADC.c: 217:          dato_char(32);
  2436  0521  3020               	movlw	32
  2437  0522  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2438                           
  2439                           ;ADC.c: 218:          dato_char(32);
  2440  0527  3020               	movlw	32
  2441  0528  120A  118A  26C6  120A  118A  	fcall	_dato_char
  2442  052D                     l202:
  2443  052D  0008               	return
  2444  052E                     __end_of_display1:
  2445                           
  2446                           	psect	text11
  2447  06C6                     __ptext11:	
  2448 ;; *************** function _dato_char *****************
  2449 ;; Defined at:
  2450 ;;		line 113 in file "ADC.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;  valor           1    wreg     unsigned char 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  valor           1    4[COMMON] unsigned char 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;                  1    wreg      void 
  2457 ;; Registers used:
  2458 ;;		wreg
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2464 ;;      Params:         0       0       0       0       0
  2465 ;;      Locals:         1       0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0
  2467 ;;      Totals:         1       0       0       0       0
  2468 ;;Total ram usage:        1 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    2
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		_display1
  2475 ;;		_display2
  2476 ;;		_display3
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           
  2481                           ;psect for function _dato_char
  2482  06C6                     _dato_char:
  2483                           
  2484                           ;incstack = 0
  2485                           ; Regs used in _dato_char: [wreg]
  2486                           ;dato_char@valor stored from wreg
  2487  06C6  00F4               	movwf	dato_char@valor
  2488  06C7                     l1271:
  2489                           
  2490                           ;ADC.c: 113: void dato_char (uint8_t valor);ADC.c: 114: {;ADC.c: 115:     TXREG = valor;
  2491  06C7  0874               	movf	dato_char@valor,w
  2492  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2493  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2494  06CA  0099               	movwf	25	;volatile
  2495  06CB                     l175:	
  2496                           ;ADC.c: 116:     while (PIR1bits.TXIF == 0);
  2497                           
  2498  06CB  1E0C               	btfss	12,4	;volatile
  2499  06CC  2ECE               	goto	u551
  2500  06CD  2ECF               	goto	u550
  2501  06CE                     u551:
  2502  06CE  2ECB               	goto	l175
  2503  06CF                     u550:
  2504  06CF                     l178:
  2505  06CF  0008               	return
  2506  06D0                     __end_of_dato_char:
  2507                           
  2508                           	psect	text12
  2509  03FE                     __ptext12:	
  2510 ;; *************** function ___awmod *****************
  2511 ;; Defined at:
  2512 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  divisor         2    0[BANK0 ] int 
  2515 ;;  dividend        2    2[BANK0 ] int 
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;  sign            1    5[BANK0 ] unsigned char 
  2518 ;;  counter         1    4[BANK0 ] unsigned char 
  2519 ;; Return value:  Size  Location     Type
  2520 ;;                  2    0[BANK0 ] int 
  2521 ;; Registers used:
  2522 ;;		wreg, status,2, status,0
  2523 ;; Tracked objects:
  2524 ;;		On entry : 0/0
  2525 ;;		On exit  : 0/0
  2526 ;;		Unchanged: 0/0
  2527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2528 ;;      Params:         0       4       0       0       0
  2529 ;;      Locals:         0       2       0       0       0
  2530 ;;      Temps:          1       0       0       0       0
  2531 ;;      Totals:         1       6       0       0       0
  2532 ;;Total ram usage:        7 bytes
  2533 ;; Hardware stack levels used:    1
  2534 ;; Hardware stack levels required when called:    2
  2535 ;; This function calls:
  2536 ;;		Nothing
  2537 ;; This function is called by:
  2538 ;;		_conversion
  2539 ;;		_Conversion1
  2540 ;;		_Conversion2
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           
  2545                           ;psect for function ___awmod
  2546  03FE                     ___awmod:
  2547  03FE                     l1617:	
  2548                           ;incstack = 0
  2549                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2550                           
  2551  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2552  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2553  0400  01A5               	clrf	___awmod@sign
  2554  0401                     l1619:
  2555  0401  1FA3               	btfss	___awmod@dividend+1,7
  2556  0402  2C04               	goto	u1071
  2557  0403  2C05               	goto	u1070
  2558  0404                     u1071:
  2559  0404  2C0C               	goto	l1625
  2560  0405                     u1070:
  2561  0405                     l1621:
  2562  0405  09A2               	comf	___awmod@dividend,f
  2563  0406  09A3               	comf	___awmod@dividend+1,f
  2564  0407  0AA2               	incf	___awmod@dividend,f
  2565  0408  1903               	skipnz
  2566  0409  0AA3               	incf	___awmod@dividend+1,f
  2567  040A                     l1623:
  2568  040A  01A5               	clrf	___awmod@sign
  2569  040B  0AA5               	incf	___awmod@sign,f
  2570  040C                     l1625:
  2571  040C  1FA1               	btfss	___awmod@divisor+1,7
  2572  040D  2C0F               	goto	u1081
  2573  040E  2C10               	goto	u1080
  2574  040F                     u1081:
  2575  040F  2C15               	goto	l1629
  2576  0410                     u1080:
  2577  0410                     l1627:
  2578  0410  09A0               	comf	___awmod@divisor,f
  2579  0411  09A1               	comf	___awmod@divisor+1,f
  2580  0412  0AA0               	incf	___awmod@divisor,f
  2581  0413  1903               	skipnz
  2582  0414  0AA1               	incf	___awmod@divisor+1,f
  2583  0415                     l1629:
  2584  0415  0820               	movf	___awmod@divisor,w
  2585  0416  0421               	iorwf	___awmod@divisor+1,w
  2586  0417  1903               	btfsc	3,2
  2587  0418  2C1A               	goto	u1091
  2588  0419  2C1B               	goto	u1090
  2589  041A                     u1091:
  2590  041A  2C4A               	goto	l1647
  2591  041B                     u1090:
  2592  041B                     l1631:
  2593  041B  01A4               	clrf	___awmod@counter
  2594  041C  0AA4               	incf	___awmod@counter,f
  2595  041D  2C29               	goto	l1637
  2596  041E                     l1633:
  2597  041E  3001               	movlw	1
  2598  041F                     u1105:
  2599  041F  1003               	clrc
  2600  0420  0DA0               	rlf	___awmod@divisor,f
  2601  0421  0DA1               	rlf	___awmod@divisor+1,f
  2602  0422  3EFF               	addlw	-1
  2603  0423  1D03               	skipz
  2604  0424  2C1F               	goto	u1105
  2605  0425                     l1635:
  2606  0425  3001               	movlw	1
  2607  0426  00F4               	movwf	??___awmod
  2608  0427  0874               	movf	??___awmod,w
  2609  0428  07A4               	addwf	___awmod@counter,f
  2610  0429                     l1637:
  2611  0429  1FA1               	btfss	___awmod@divisor+1,7
  2612  042A  2C2C               	goto	u1111
  2613  042B  2C2D               	goto	u1110
  2614  042C                     u1111:
  2615  042C  2C1E               	goto	l1633
  2616  042D                     u1110:
  2617  042D                     l1639:
  2618  042D  0821               	movf	___awmod@divisor+1,w
  2619  042E  0223               	subwf	___awmod@dividend+1,w
  2620  042F  1D03               	skipz
  2621  0430  2C33               	goto	u1125
  2622  0431  0820               	movf	___awmod@divisor,w
  2623  0432  0222               	subwf	___awmod@dividend,w
  2624  0433                     u1125:
  2625  0433  1C03               	skipc
  2626  0434  2C36               	goto	u1121
  2627  0435  2C37               	goto	u1120
  2628  0436                     u1121:
  2629  0436  2C3D               	goto	l1643
  2630  0437                     u1120:
  2631  0437                     l1641:
  2632  0437  0820               	movf	___awmod@divisor,w
  2633  0438  02A2               	subwf	___awmod@dividend,f
  2634  0439  0821               	movf	___awmod@divisor+1,w
  2635  043A  1C03               	skipc
  2636  043B  03A3               	decf	___awmod@dividend+1,f
  2637  043C  02A3               	subwf	___awmod@dividend+1,f
  2638  043D                     l1643:
  2639  043D  3001               	movlw	1
  2640  043E                     u1135:
  2641  043E  1003               	clrc
  2642  043F  0CA1               	rrf	___awmod@divisor+1,f
  2643  0440  0CA0               	rrf	___awmod@divisor,f
  2644  0441  3EFF               	addlw	-1
  2645  0442  1D03               	skipz
  2646  0443  2C3E               	goto	u1135
  2647  0444                     l1645:
  2648  0444  3001               	movlw	1
  2649  0445  02A4               	subwf	___awmod@counter,f
  2650  0446  1D03               	btfss	3,2
  2651  0447  2C49               	goto	u1141
  2652  0448  2C4A               	goto	u1140
  2653  0449                     u1141:
  2654  0449  2C2D               	goto	l1639
  2655  044A                     u1140:
  2656  044A                     l1647:
  2657  044A  0825               	movf	___awmod@sign,w
  2658  044B  1903               	btfsc	3,2
  2659  044C  2C4E               	goto	u1151
  2660  044D  2C4F               	goto	u1150
  2661  044E                     u1151:
  2662  044E  2C54               	goto	l1651
  2663  044F                     u1150:
  2664  044F                     l1649:
  2665  044F  09A2               	comf	___awmod@dividend,f
  2666  0450  09A3               	comf	___awmod@dividend+1,f
  2667  0451  0AA2               	incf	___awmod@dividend,f
  2668  0452  1903               	skipnz
  2669  0453  0AA3               	incf	___awmod@dividend+1,f
  2670  0454                     l1651:
  2671  0454  0823               	movf	___awmod@dividend+1,w
  2672  0455  00A1               	movwf	?___awmod+1
  2673  0456  0822               	movf	___awmod@dividend,w
  2674  0457  00A0               	movwf	?___awmod
  2675  0458                     l511:
  2676  0458  0008               	return
  2677  0459                     __end_of___awmod:
  2678                           
  2679                           	psect	text13
  2680  0395                     __ptext13:	
  2681 ;; *************** function ___awdiv *****************
  2682 ;; Defined at:
  2683 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;  divisor         2    4[BANK0 ] int 
  2686 ;;  dividend        2    6[BANK0 ] int 
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  quotient        2   11[BANK0 ] int 
  2689 ;;  sign            1   10[BANK0 ] unsigned char 
  2690 ;;  counter         1    9[BANK0 ] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  2    4[BANK0 ] int 
  2693 ;; Registers used:
  2694 ;;		wreg, status,2, status,0
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2700 ;;      Params:         0       4       0       0       0
  2701 ;;      Locals:         0       4       0       0       0
  2702 ;;      Temps:          0       1       0       0       0
  2703 ;;      Totals:         0       9       0       0       0
  2704 ;;Total ram usage:        9 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    2
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_conversion
  2711 ;;		_Conversion1
  2712 ;;		_Conversion2
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           
  2717                           ;psect for function ___awdiv
  2718  0395                     ___awdiv:
  2719  0395                     l1299:	
  2720                           ;incstack = 0
  2721                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2722                           
  2723  0395  1283               	bcf	3,5	;RP0=0, select bank0
  2724  0396  1303               	bcf	3,6	;RP1=0, select bank0
  2725  0397  01AA               	clrf	___awdiv@sign
  2726  0398                     l1301:
  2727  0398  1FA5               	btfss	___awdiv@divisor+1,7
  2728  0399  2B9B               	goto	u571
  2729  039A  2B9C               	goto	u570
  2730  039B                     u571:
  2731  039B  2BA3               	goto	l1307
  2732  039C                     u570:
  2733  039C                     l1303:
  2734  039C  09A4               	comf	___awdiv@divisor,f
  2735  039D  09A5               	comf	___awdiv@divisor+1,f
  2736  039E  0AA4               	incf	___awdiv@divisor,f
  2737  039F  1903               	skipnz
  2738  03A0  0AA5               	incf	___awdiv@divisor+1,f
  2739  03A1                     l1305:
  2740  03A1  01AA               	clrf	___awdiv@sign
  2741  03A2  0AAA               	incf	___awdiv@sign,f
  2742  03A3                     l1307:
  2743  03A3  1FA7               	btfss	___awdiv@dividend+1,7
  2744  03A4  2BA6               	goto	u581
  2745  03A5  2BA7               	goto	u580
  2746  03A6                     u581:
  2747  03A6  2BB0               	goto	l1313
  2748  03A7                     u580:
  2749  03A7                     l1309:
  2750  03A7  09A6               	comf	___awdiv@dividend,f
  2751  03A8  09A7               	comf	___awdiv@dividend+1,f
  2752  03A9  0AA6               	incf	___awdiv@dividend,f
  2753  03AA  1903               	skipnz
  2754  03AB  0AA7               	incf	___awdiv@dividend+1,f
  2755  03AC                     l1311:
  2756  03AC  3001               	movlw	1
  2757  03AD  00A8               	movwf	??___awdiv
  2758  03AE  0828               	movf	??___awdiv,w
  2759  03AF  06AA               	xorwf	___awdiv@sign,f
  2760  03B0                     l1313:
  2761  03B0  01AB               	clrf	___awdiv@quotient
  2762  03B1  01AC               	clrf	___awdiv@quotient+1
  2763  03B2                     l1315:
  2764  03B2  0824               	movf	___awdiv@divisor,w
  2765  03B3  0425               	iorwf	___awdiv@divisor+1,w
  2766  03B4  1903               	btfsc	3,2
  2767  03B5  2BB7               	goto	u591
  2768  03B6  2BB8               	goto	u590
  2769  03B7                     u591:
  2770  03B7  2BEF               	goto	l1335
  2771  03B8                     u590:
  2772  03B8                     l1317:
  2773  03B8  01A9               	clrf	___awdiv@counter
  2774  03B9  0AA9               	incf	___awdiv@counter,f
  2775  03BA  2BC6               	goto	l1323
  2776  03BB                     l1319:
  2777  03BB  3001               	movlw	1
  2778  03BC                     u605:
  2779  03BC  1003               	clrc
  2780  03BD  0DA4               	rlf	___awdiv@divisor,f
  2781  03BE  0DA5               	rlf	___awdiv@divisor+1,f
  2782  03BF  3EFF               	addlw	-1
  2783  03C0  1D03               	skipz
  2784  03C1  2BBC               	goto	u605
  2785  03C2                     l1321:
  2786  03C2  3001               	movlw	1
  2787  03C3  00A8               	movwf	??___awdiv
  2788  03C4  0828               	movf	??___awdiv,w
  2789  03C5  07A9               	addwf	___awdiv@counter,f
  2790  03C6                     l1323:
  2791  03C6  1FA5               	btfss	___awdiv@divisor+1,7
  2792  03C7  2BC9               	goto	u611
  2793  03C8  2BCA               	goto	u610
  2794  03C9                     u611:
  2795  03C9  2BBB               	goto	l1319
  2796  03CA                     u610:
  2797  03CA                     l1325:
  2798  03CA  3001               	movlw	1
  2799  03CB                     u625:
  2800  03CB  1003               	clrc
  2801  03CC  0DAB               	rlf	___awdiv@quotient,f
  2802  03CD  0DAC               	rlf	___awdiv@quotient+1,f
  2803  03CE  3EFF               	addlw	-1
  2804  03CF  1D03               	skipz
  2805  03D0  2BCB               	goto	u625
  2806  03D1  0825               	movf	___awdiv@divisor+1,w
  2807  03D2  0227               	subwf	___awdiv@dividend+1,w
  2808  03D3  1D03               	skipz
  2809  03D4  2BD7               	goto	u635
  2810  03D5  0824               	movf	___awdiv@divisor,w
  2811  03D6  0226               	subwf	___awdiv@dividend,w
  2812  03D7                     u635:
  2813  03D7  1C03               	skipc
  2814  03D8  2BDA               	goto	u631
  2815  03D9  2BDB               	goto	u630
  2816  03DA                     u631:
  2817  03DA  2BE2               	goto	l1331
  2818  03DB                     u630:
  2819  03DB                     l1327:
  2820  03DB  0824               	movf	___awdiv@divisor,w
  2821  03DC  02A6               	subwf	___awdiv@dividend,f
  2822  03DD  0825               	movf	___awdiv@divisor+1,w
  2823  03DE  1C03               	skipc
  2824  03DF  03A7               	decf	___awdiv@dividend+1,f
  2825  03E0  02A7               	subwf	___awdiv@dividend+1,f
  2826  03E1                     l1329:
  2827  03E1  142B               	bsf	___awdiv@quotient,0
  2828  03E2                     l1331:
  2829  03E2  3001               	movlw	1
  2830  03E3                     u645:
  2831  03E3  1003               	clrc
  2832  03E4  0CA5               	rrf	___awdiv@divisor+1,f
  2833  03E5  0CA4               	rrf	___awdiv@divisor,f
  2834  03E6  3EFF               	addlw	-1
  2835  03E7  1D03               	skipz
  2836  03E8  2BE3               	goto	u645
  2837  03E9                     l1333:
  2838  03E9  3001               	movlw	1
  2839  03EA  02A9               	subwf	___awdiv@counter,f
  2840  03EB  1D03               	btfss	3,2
  2841  03EC  2BEE               	goto	u651
  2842  03ED  2BEF               	goto	u650
  2843  03EE                     u651:
  2844  03EE  2BCA               	goto	l1325
  2845  03EF                     u650:
  2846  03EF                     l1335:
  2847  03EF  082A               	movf	___awdiv@sign,w
  2848  03F0  1903               	btfsc	3,2
  2849  03F1  2BF3               	goto	u661
  2850  03F2  2BF4               	goto	u660
  2851  03F3                     u661:
  2852  03F3  2BF9               	goto	l1339
  2853  03F4                     u660:
  2854  03F4                     l1337:
  2855  03F4  09AB               	comf	___awdiv@quotient,f
  2856  03F5  09AC               	comf	___awdiv@quotient+1,f
  2857  03F6  0AAB               	incf	___awdiv@quotient,f
  2858  03F7  1903               	skipnz
  2859  03F8  0AAC               	incf	___awdiv@quotient+1,f
  2860  03F9                     l1339:
  2861  03F9  082C               	movf	___awdiv@quotient+1,w
  2862  03FA  00A5               	movwf	?___awdiv+1
  2863  03FB  082B               	movf	___awdiv@quotient,w
  2864  03FC  00A4               	movwf	?___awdiv
  2865  03FD                     l498:
  2866  03FD  0008               	return
  2867  03FE                     __end_of___awdiv:
  2868                           
  2869                           	psect	text14
  2870  065C                     __ptext14:	
  2871 ;; *************** function _config *****************
  2872 ;; Defined at:
  2873 ;;		line 39 in file "./Libreria.h"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;		None
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      void 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2887 ;;      Params:         0       0       0       0       0
  2888 ;;      Locals:         0       0       0       0       0
  2889 ;;      Temps:          0       0       0       0       0
  2890 ;;      Totals:         0       0       0       0       0
  2891 ;;Total ram usage:        0 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    2
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_main
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           
  2902                           ;psect for function _config
  2903  065C                     _config:
  2904  065C                     l1101:	
  2905                           ;incstack = 0
  2906                           ; Regs used in _config: [wreg+status,2]
  2907                           
  2908                           
  2909                           ;./Libreria.h: 41: 
  2910  065C  1683               	bsf	3,5	;RP0=1, select bank3
  2911  065D  1703               	bsf	3,6	;RP1=1, select bank3
  2912  065E  0188               	clrf	8	;volatile
  2913                           
  2914                           ;./Libreria.h: 42:     ADCON0bits.ADON=1;
  2915  065F  0189               	clrf	9	;volatile
  2916  0660                     l1103:
  2917                           
  2918                           ;./Libreria.h: 44: 
  2919  0660  3003               	movlw	3
  2920  0661  1683               	bsf	3,5	;RP0=1, select bank1
  2921  0662  1303               	bcf	3,6	;RP1=0, select bank1
  2922  0663  0085               	movwf	5	;volatile
  2923  0664                     l1105:
  2924                           
  2925                           ;./Libreria.h: 45:     INTCONbits.GIE = 1;
  2926  0664  0186               	clrf	6	;volatile
  2927  0665                     l1107:
  2928                           
  2929                           ;./Libreria.h: 46:     INTCONbits.PEIE = 1;
  2930  0665  0188               	clrf	8	;volatile
  2931  0666                     l1109:
  2932                           
  2933                           ;./Libreria.h: 48:     PIE1bits.ADIE = 1;
  2934  0666  1683               	bsf	3,5	;RP0=1, select bank3
  2935  0667  1703               	bsf	3,6	;RP1=1, select bank3
  2936  0668  1408               	bsf	8,0	;volatile
  2937  0669                     l1111:
  2938                           
  2939                           ;./Libreria.h: 49:     PIR1bits.ADIF = 0;
  2940  0669  1488               	bsf	8,1	;volatile
  2941  066A                     l1113:
  2942                           
  2943                           ;./Libreria.h: 52: }
  2944  066A  1283               	bcf	3,5	;RP0=0, select bank0
  2945  066B  1303               	bcf	3,6	;RP1=0, select bank0
  2946  066C  141F               	bsf	31,0	;volatile
  2947  066D                     l1115:
  2948                           
  2949                           ;./Libreria.h: 53: 
  2950  066D  1683               	bsf	3,5	;RP0=1, select bank1
  2951  066E  1303               	bcf	3,6	;RP1=0, select bank1
  2952  066F  139F               	bcf	31,7	;volatile
  2953  0670                     l1117:
  2954                           
  2955                           ;./Libreria.h: 55:  PORTDbits.RD2 =0;
  2956  0670  178B               	bsf	11,7	;volatile
  2957  0671                     l1119:
  2958                           
  2959                           ;./Libreria.h: 56:  PORTB=a;
  2960  0671  170B               	bsf	11,6	;volatile
  2961  0672                     l1121:
  2962                           
  2963                           ;./Libreria.h: 58:     _delay((unsigned long)((4)*(9000000/4000.0)));
  2964  0672  170C               	bsf	12,6	;volatile
  2965  0673                     l1123:
  2966                           
  2967                           ;./Libreria.h: 59:     PORTDbits.RD3=0;
  2968  0673  1283               	bcf	3,5	;RP0=0, select bank0
  2969  0674  1303               	bcf	3,6	;RP1=0, select bank0
  2970  0675  130C               	bcf	12,6	;volatile
  2971  0676                     l85:
  2972  0676  0008               	return
  2973  0677                     __end_of_config:
  2974                           
  2975                           	psect	text15
  2976  06D8                     __ptext15:	
  2977 ;; *************** function _USART_config *****************
  2978 ;; Defined at:
  2979 ;;		line 130 in file "ADC.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;		None
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;		None
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg, status,2, status,0, pclath, cstack
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2993 ;;      Params:         0       0       0       0       0
  2994 ;;      Locals:         0       0       0       0       0
  2995 ;;      Temps:          0       0       0       0       0
  2996 ;;      Totals:         0       0       0       0       0
  2997 ;;Total ram usage:        0 bytes
  2998 ;; Hardware stack levels used:    1
  2999 ;; Hardware stack levels required when called:    3
  3000 ;; This function calls:
  3001 ;;		_USART_lib_config
  3002 ;; This function is called by:
  3003 ;;		_main
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           
  3008                           ;psect for function _USART_config
  3009  06D8                     _USART_config:
  3010  06D8                     l1161:	
  3011                           ;incstack = 0
  3012                           ; Regs used in _USART_config: [wreg+status,2+status,0+pclath+cstack]
  3013                           
  3014                           
  3015                           ;ADC.c: 132:   USART_lib_config();
  3016  06D8  120A  118A  268A  120A  118A  	fcall	_USART_lib_config
  3017  06DD                     l185:
  3018  06DD  0008               	return
  3019  06DE                     __end_of_USART_config:
  3020                           
  3021                           	psect	text16
  3022  068A                     __ptext16:	
  3023 ;; *************** function _USART_lib_config *****************
  3024 ;; Defined at:
  3025 ;;		line 18 in file "./USART1.h"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3039 ;;      Params:         0       0       0       0       0
  3040 ;;      Locals:         0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0
  3042 ;;      Totals:         0       0       0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    2
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_USART_config
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           
  3054                           ;psect for function _USART_lib_config
  3055  068A                     _USART_lib_config:
  3056  068A                     l973:	
  3057                           ;incstack = 0
  3058                           ; Regs used in _USART_lib_config: [wreg]
  3059                           
  3060                           
  3061                           ;./USART1.h: 20:     SPBRG = 57;
  3062  068A  3039               	movlw	57
  3063  068B  1683               	bsf	3,5	;RP0=1, select bank1
  3064  068C  1303               	bcf	3,6	;RP1=0, select bank1
  3065  068D  0099               	movwf	25	;volatile
  3066  068E                     l975:
  3067                           
  3068                           ;./USART1.h: 22:     TXSTAbits.CSRC = 0;
  3069  068E  1398               	bcf	24,7	;volatile
  3070  068F                     l977:
  3071                           
  3072                           ;./USART1.h: 23:     TXSTAbits.TX9 = 0;
  3073  068F  1318               	bcf	24,6	;volatile
  3074  0690                     l979:
  3075                           
  3076                           ;./USART1.h: 24:     TXSTAbits.TXEN = 1;
  3077  0690  1698               	bsf	24,5	;volatile
  3078  0691                     l981:
  3079                           
  3080                           ;./USART1.h: 25:     TXSTAbits.SYNC = 0;
  3081  0691  1218               	bcf	24,4	;volatile
  3082  0692                     l983:
  3083                           
  3084                           ;./USART1.h: 26:     TXSTAbits.BRGH = 1;
  3085  0692  1518               	bsf	24,2	;volatile
  3086  0693                     l985:
  3087                           
  3088                           ;./USART1.h: 27:     RCSTAbits.SPEN = 1;
  3089  0693  1283               	bcf	3,5	;RP0=0, select bank0
  3090  0694  1303               	bcf	3,6	;RP1=0, select bank0
  3091  0695  1798               	bsf	24,7	;volatile
  3092  0696                     l987:
  3093                           
  3094                           ;./USART1.h: 28:     RCSTAbits.RX9 = 0;
  3095  0696  1318               	bcf	24,6	;volatile
  3096  0697                     l989:
  3097                           
  3098                           ;./USART1.h: 29:     RCSTAbits.SREN = 0;
  3099  0697  1298               	bcf	24,5	;volatile
  3100  0698                     l991:
  3101                           
  3102                           ;./USART1.h: 30:     RCSTAbits.CREN = 1;
  3103  0698  1618               	bsf	24,4	;volatile
  3104  0699                     l993:
  3105                           
  3106                           ;./USART1.h: 31:     PIR1bits.RCIF = 0;
  3107  0699  128C               	bcf	12,5	;volatile
  3108  069A                     l995:
  3109                           
  3110                           ;./USART1.h: 32:     PIR1bits.TXIF = 0;
  3111  069A  120C               	bcf	12,4	;volatile
  3112  069B                     l112:
  3113  069B  0008               	return
  3114  069C                     __end_of_USART_lib_config:
  3115                           
  3116                           	psect	text17
  3117  05CA                     __ptext17:	
  3118 ;; *************** function _Lcd_Write_String *****************
  3119 ;; Defined at:
  3120 ;;		line 107 in file "./Libreria.h"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  a               1    wreg     PTR unsigned char 
  3123 ;;		 -> STR_5(9), STR_4(6), STR_3(6), STR_2(13), 
  3124 ;;		 -> STR_1(10), 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  a               1    2[BANK0 ] PTR unsigned char 
  3127 ;;		 -> STR_5(9), STR_4(6), STR_3(6), STR_2(13), 
  3128 ;;		 -> STR_1(10), 
  3129 ;;  i               2    0[BANK0 ] int 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3139 ;;      Params:         0       0       0       0       0
  3140 ;;      Locals:         0       3       0       0       0
  3141 ;;      Temps:          0       0       0       0       0
  3142 ;;      Totals:         0       3       0       0       0
  3143 ;;Total ram usage:        3 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    3
  3146 ;; This function calls:
  3147 ;;		_Lcd_Write_Char
  3148 ;; This function is called by:
  3149 ;;		_main
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           
  3154                           ;psect for function _Lcd_Write_String
  3155  05CA                     _Lcd_Write_String:
  3156                           
  3157                           ;incstack = 0
  3158                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3159                           ;Lcd_Write_String@a stored from wreg
  3160  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  3161  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  3162  05CC  00A2               	movwf	Lcd_Write_String@a
  3163  05CD                     l1717:
  3164                           
  3165                           ;./Libreria.h: 107: ;./Libreria.h: 108:     Lcd_Cmd(0x00);;./Libreria.h: 109:     _delay
      +                          ((unsigned long)((15)*(9000000/4000.0)));;./Libreria.h: 110: 
  3166  05CD  01A0               	clrf	Lcd_Write_String@i
  3167  05CE  01A1               	clrf	Lcd_Write_String@i+1
  3168  05CF  2DE5               	goto	l1723
  3169  05D0                     l1719:
  3170                           
  3171                           ;./Libreria.h: 111: 
  3172  05D0  0820               	movf	Lcd_Write_String@i,w
  3173  05D1  0722               	addwf	Lcd_Write_String@a,w
  3174  05D2  0084               	movwf	4
  3175  05D3  120A  118A  2566  120A  118A  	fcall	stringdir
  3176  05D8  120A  118A  269C  120A  118A  	fcall	_Lcd_Write_Char
  3177  05DD                     l1721:
  3178  05DD  3001               	movlw	1
  3179  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  3180  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  3181  05E0  07A0               	addwf	Lcd_Write_String@i,f
  3182  05E1  1803               	skipnc
  3183  05E2  0AA1               	incf	Lcd_Write_String@i+1,f
  3184  05E3  3000               	movlw	0
  3185  05E4  07A1               	addwf	Lcd_Write_String@i+1,f
  3186  05E5                     l1723:
  3187  05E5  0820               	movf	Lcd_Write_String@i,w
  3188  05E6  0722               	addwf	Lcd_Write_String@a,w
  3189  05E7  0084               	movwf	4
  3190  05E8  120A  118A  2566  120A  118A  	fcall	stringdir
  3191  05ED  3A00               	xorlw	0
  3192  05EE  1D03               	skipz
  3193  05EF  2DF1               	goto	u1221
  3194  05F0  2DF2               	goto	u1220
  3195  05F1                     u1221:
  3196  05F1  2DD0               	goto	l1719
  3197  05F2                     u1220:
  3198  05F2                     l106:
  3199  05F2  0008               	return
  3200  05F3                     __end_of_Lcd_Write_String:
  3201                           
  3202                           	psect	text18
  3203  069C                     __ptext18:	
  3204 ;; *************** function _Lcd_Write_Char *****************
  3205 ;; Defined at:
  3206 ;;		line 99 in file "./Libreria.h"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  a               1    wreg     unsigned char 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;  a               1    5[COMMON] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3220 ;;      Params:         0       0       0       0       0
  3221 ;;      Locals:         1       0       0       0       0
  3222 ;;      Temps:          1       0       0       0       0
  3223 ;;      Totals:         2       0       0       0       0
  3224 ;;Total ram usage:        2 bytes
  3225 ;; Hardware stack levels used:    1
  3226 ;; Hardware stack levels required when called:    2
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_Lcd_Write_String
  3231 ;;		_conversion
  3232 ;;		_Conversion1
  3233 ;;		_Conversion2
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           
  3238                           ;psect for function _Lcd_Write_Char
  3239  069C                     _Lcd_Write_Char:
  3240                           
  3241                           ;incstack = 0
  3242                           ; Regs used in _Lcd_Write_Char: [wreg]
  3243                           ;Lcd_Write_Char@a stored from wreg
  3244  069C  00F5               	movwf	Lcd_Write_Char@a
  3245  069D                     l1609:
  3246                           
  3247                           ;./Libreria.h: 100:  for(i=0;a[i]!='\0';i++)
  3248  069D  1283               	bcf	3,5	;RP0=0, select bank0
  3249  069E  1303               	bcf	3,6	;RP1=0, select bank0
  3250  069F  1508               	bsf	8,2	;volatile
  3251  06A0                     l1611:
  3252                           
  3253                           ;./Libreria.h: 101:      Lcd_Write_Char(a[i]);
  3254  06A0  0875               	movf	Lcd_Write_Char@a,w
  3255  06A1  0086               	movwf	6	;volatile
  3256  06A2                     l1613:
  3257                           
  3258                           ;./Libreria.h: 102: }
  3259  06A2  1588               	bsf	8,3	;volatile
  3260                           
  3261                           ;./Libreria.h: 103: 
  3262  06A3  301D               	movlw	29
  3263  06A4  00F4               	movwf	??_Lcd_Write_Char
  3264  06A5                     u1287:
  3265  06A5  0BF4               	decfsz	??_Lcd_Write_Char,f
  3266  06A6  2EA5               	goto	u1287
  3267  06A7  2EA8               	nop2
  3268  06A8                     l1615:
  3269                           
  3270                           ;./Libreria.h: 104: void Lcd_Init(){
  3271  06A8  1283               	bcf	3,5	;RP0=0, select bank0
  3272  06A9  1303               	bcf	3,6	;RP1=0, select bank0
  3273  06AA  1188               	bcf	8,3	;volatile
  3274  06AB                     l100:
  3275  06AB  0008               	return
  3276  06AC                     __end_of_Lcd_Write_Char:
  3277                           
  3278                           	psect	text19
  3279  052E                     __ptext19:	
  3280 ;; *************** function _Lcd_Init *****************
  3281 ;; Defined at:
  3282 ;;		line 114 in file "./Libreria.h"
  3283 ;; Parameters:    Size  Location     Type
  3284 ;;		None
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;		None
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  1    wreg      void 
  3289 ;; Registers used:
  3290 ;;		wreg, status,2, status,0, pclath, cstack
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3296 ;;      Params:         0       0       0       0       0
  3297 ;;      Locals:         0       0       0       0       0
  3298 ;;      Temps:          0       2       0       0       0
  3299 ;;      Totals:         0       2       0       0       0
  3300 ;;Total ram usage:        2 bytes
  3301 ;; Hardware stack levels used:    1
  3302 ;; Hardware stack levels required when called:    3
  3303 ;; This function calls:
  3304 ;;		_Lcd_Cmd
  3305 ;; This function is called by:
  3306 ;;		_main
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           
  3311                           ;psect for function _Lcd_Init
  3312  052E                     _Lcd_Init:
  3313  052E                     l1725:	
  3314                           ;incstack = 0
  3315                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3316                           
  3317                           
  3318                           ;./Libreria.h: 116:     Lcd_Cmd(0x0D);
  3319  052E  1283               	bcf	3,5	;RP0=0, select bank0
  3320  052F  1303               	bcf	3,6	;RP1=0, select bank0
  3321  0530  1108               	bcf	8,2	;volatile
  3322  0531                     l1727:
  3323                           
  3324                           ;./Libreria.h: 118:     Lcd_Cmd(0x06);
  3325  0531  3000               	movlw	0
  3326  0532  120A  118A  2677  120A  118A  	fcall	_Lcd_Cmd
  3327  0537                     l1729:
  3328                           
  3329                           ;./Libreria.h: 119: 
  3330  0537  302C               	movlw	44
  3331  0538  1283               	bcf	3,5	;RP0=0, select bank0
  3332  0539  1303               	bcf	3,6	;RP1=0, select bank0
  3333  053A  00A2               	movwf	??_Lcd_Init+1
  3334  053B  30D3               	movlw	211
  3335  053C  00A1               	movwf	??_Lcd_Init
  3336  053D                     u1297:
  3337  053D  0BA1               	decfsz	??_Lcd_Init,f
  3338  053E  2D3D               	goto	u1297
  3339  053F  0BA2               	decfsz	??_Lcd_Init+1,f
  3340  0540  2D3D               	goto	u1297
  3341  0541                     l1731:
  3342  0541  3030               	movlw	48
  3343  0542  120A  118A  2677  120A  118A  	fcall	_Lcd_Cmd
  3344  0547  3077               	movlw	119
  3345  0548  1283               	bcf	3,5	;RP0=0, select bank0
  3346  0549  1303               	bcf	3,6	;RP1=0, select bank0
  3347  054A  00A1               	movwf	??_Lcd_Init
  3348  054B                     u1307:
  3349  054B  0BA1               	decfsz	??_Lcd_Init,f
  3350  054C  2D4B               	goto	u1307
  3351  054D                     l1733:
  3352  054D  3038               	movlw	56
  3353  054E  120A  118A  2677  120A  118A  	fcall	_Lcd_Cmd
  3354  0553                     l1735:
  3355  0553  300D               	movlw	13
  3356  0554  120A  118A  2677  120A  118A  	fcall	_Lcd_Cmd
  3357  0559                     l1737:
  3358  0559  3001               	movlw	1
  3359  055A  120A  118A  2677  120A  118A  	fcall	_Lcd_Cmd
  3360  055F                     l1739:
  3361  055F  3006               	movlw	6
  3362  0560  120A  118A  2677  120A  118A  	fcall	_Lcd_Cmd
  3363  0565                     l109:
  3364  0565  0008               	return
  3365  0566                     __end_of_Lcd_Init:
  3366                           
  3367                           	psect	text20
  3368  06AC                     __ptext20:	
  3369 ;; *************** function _Lcd_Clear *****************
  3370 ;; Defined at:
  3371 ;;		line 73 in file "./Libreria.h"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;		None
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;		None
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  2   90[None  ] int 
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, status,0, pclath, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3385 ;;      Params:         0       0       0       0       0
  3386 ;;      Locals:         0       0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0
  3388 ;;      Totals:         0       0       0       0       0
  3389 ;;Total ram usage:        0 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    3
  3392 ;; This function calls:
  3393 ;;		_Lcd_Cmd
  3394 ;; This function is called by:
  3395 ;;		_main
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           
  3400                           ;psect for function _Lcd_Clear
  3401  06AC                     _Lcd_Clear:
  3402  06AC                     l1715:	
  3403                           ;incstack = 0
  3404                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3405                           
  3406                           
  3407                           ;./Libreria.h: 74: 
  3408  06AC  3000               	movlw	0
  3409  06AD  120A  118A  2677  120A  118A  	fcall	_Lcd_Cmd
  3410                           
  3411                           ;./Libreria.h: 75: 
  3412  06B2  3001               	movlw	1
  3413  06B3  120A  118A  2677  120A  118A  	fcall	_Lcd_Cmd
  3414  06B8                     l91:
  3415  06B8  0008               	return
  3416  06B9                     __end_of_Lcd_Clear:
  3417                           
  3418                           	psect	text21
  3419  0677                     __ptext21:	
  3420 ;; *************** function _Lcd_Cmd *****************
  3421 ;; Defined at:
  3422 ;;		line 64 in file "./Libreria.h"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  a               1    wreg     unsigned char 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;  a               1    0[BANK0 ] unsigned char 
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1    wreg      void 
  3429 ;; Registers used:
  3430 ;;		wreg
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3436 ;;      Params:         0       0       0       0       0
  3437 ;;      Locals:         0       1       0       0       0
  3438 ;;      Temps:          2       0       0       0       0
  3439 ;;      Totals:         2       1       0       0       0
  3440 ;;Total ram usage:        3 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; Hardware stack levels required when called:    2
  3443 ;; This function calls:
  3444 ;;		Nothing
  3445 ;; This function is called by:
  3446 ;;		_Lcd_Clear
  3447 ;;		_Lcd_Set_Cursor
  3448 ;;		_Lcd_Init
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           
  3453                           ;psect for function _Lcd_Cmd
  3454  0677                     _Lcd_Cmd:
  3455                           
  3456                           ;incstack = 0
  3457                           ; Regs used in _Lcd_Cmd: [wreg]
  3458                           ;Lcd_Cmd@a stored from wreg
  3459  0677  1283               	bcf	3,5	;RP0=0, select bank0
  3460  0678  1303               	bcf	3,6	;RP1=0, select bank0
  3461  0679  00A0               	movwf	Lcd_Cmd@a
  3462  067A                     l1601:
  3463                           
  3464                           ;./Libreria.h: 65:  Lcd_Cmd(1);
  3465  067A  1108               	bcf	8,2	;volatile
  3466  067B                     l1603:
  3467                           
  3468                           ;./Libreria.h: 66: }
  3469  067B  0820               	movf	Lcd_Cmd@a,w
  3470  067C  0086               	movwf	6	;volatile
  3471  067D                     l1605:
  3472                           
  3473                           ;./Libreria.h: 67: 
  3474  067D  1588               	bsf	8,3	;volatile
  3475                           
  3476                           ;./Libreria.h: 68: void Lcd_Set_Cursor(char a, char b)
  3477  067E  300C               	movlw	12
  3478  067F  00F5               	movwf	??_Lcd_Cmd+1
  3479  0680  30AF               	movlw	175
  3480  0681  00F4               	movwf	??_Lcd_Cmd
  3481  0682                     u1317:
  3482  0682  0BF4               	decfsz	??_Lcd_Cmd,f
  3483  0683  2E82               	goto	u1317
  3484  0684  0BF5               	decfsz	??_Lcd_Cmd+1,f
  3485  0685  2E82               	goto	u1317
  3486  0686                     l1607:
  3487                           
  3488                           ;./Libreria.h: 69: {
  3489  0686  1283               	bcf	3,5	;RP0=0, select bank0
  3490  0687  1303               	bcf	3,6	;RP1=0, select bank0
  3491  0688  1188               	bcf	8,3	;volatile
  3492  0689                     l88:
  3493  0689  0008               	return
  3494  068A                     __end_of_Lcd_Cmd:
  3495                           
  3496                           	psect	text22
  3497  0598                     __ptext22:	
  3498 ;; *************** function _ISR *****************
  3499 ;; Defined at:
  3500 ;;		line 65 in file "ADC.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;		None
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;		None
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1    wreg      void 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0, pclath, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3514 ;;      Params:         0       0       0       0       0
  3515 ;;      Locals:         0       0       0       0       0
  3516 ;;      Temps:          3       0       0       0       0
  3517 ;;      Totals:         3       0       0       0       0
  3518 ;;Total ram usage:        3 bytes
  3519 ;; Hardware stack levels used:    1
  3520 ;; Hardware stack levels required when called:    1
  3521 ;; This function calls:
  3522 ;;		_revisa_char
  3523 ;;		_spiWrite
  3524 ;; This function is called by:
  3525 ;;		Interrupt level 1
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           
  3530                           ;psect for function _ISR
  3531  0598                     _ISR:
  3532  0598                     i1l1555:
  3533                           
  3534                           ;ADC.c: 68:     if(SSPIF == 1){
  3535  0598  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0599  1303               	bcf	3,6	;RP1=0, select bank0
  3537  059A  1D8C               	btfss	12,3	;volatile
  3538  059B  2D9D               	goto	u104_21
  3539  059C  2D9E               	goto	u104_20
  3540  059D                     u104_21:
  3541  059D  2DA7               	goto	i1l1561
  3542  059E                     u104_20:
  3543  059E                     i1l1557:
  3544                           
  3545                           ;ADC.c: 70:         spiWrite(c);
  3546  059E  0861               	movf	_c,w
  3547  059F  120A  118A  26DE  120A  118A  	fcall	_spiWrite
  3548  05A4                     i1l1559:
  3549                           
  3550                           ;ADC.c: 71:         SSPIF = 0;
  3551  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  3552  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  3553  05A6  118C               	bcf	12,3	;volatile
  3554  05A7                     i1l1561:
  3555                           
  3556                           ;ADC.c: 74:      if (PIR1bits.ADIF ==1){
  3557  05A7  1F0C               	btfss	12,6	;volatile
  3558  05A8  2DAA               	goto	u105_21
  3559  05A9  2DAB               	goto	u105_20
  3560  05AA                     u105_21:
  3561  05AA  2DB4               	goto	i1l1567
  3562  05AB                     u105_20:
  3563  05AB                     i1l1563:
  3564                           
  3565                           ;ADC.c: 75:         PIR1bits.ADIF = 0;
  3566  05AB  130C               	bcf	12,6	;volatile
  3567  05AC                     i1l1565:
  3568                           
  3569                           ;ADC.c: 77:         c = ADRESH;
  3570  05AC  081E               	movf	30,w	;volatile
  3571  05AD  00F1               	movwf	??_ISR
  3572  05AE  0871               	movf	??_ISR,w
  3573  05AF  00E1               	movwf	_c
  3574                           
  3575                           ;ADC.c: 78:         b = ADRESH;
  3576  05B0  081E               	movf	30,w	;volatile
  3577  05B1  00F1               	movwf	??_ISR
  3578  05B2  0871               	movf	??_ISR,w
  3579  05B3  00E0               	movwf	_b
  3580  05B4                     i1l1567:
  3581                           
  3582                           ;ADC.c: 81:     if (PIR1bits.RCIF == 1)
  3583  05B4  1E8C               	btfss	12,5	;volatile
  3584  05B5  2DB7               	goto	u106_21
  3585  05B6  2DB8               	goto	u106_20
  3586  05B7                     u106_21:
  3587  05B7  2DC3               	goto	i1l164
  3588  05B8                     u106_20:
  3589  05B8                     i1l1569:
  3590                           
  3591                           ;ADC.c: 82:     {;ADC.c: 83:         revisa = revisa_char();
  3592  05B8  120A  118A  26B9  120A  118A  	fcall	_revisa_char
  3593  05BD  00F1               	movwf	??_ISR
  3594  05BE  0871               	movf	??_ISR,w
  3595  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  3596  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  3597  05C1  00D4               	movwf	_revisa
  3598  05C2                     i1l1571:
  3599                           
  3600                           ;ADC.c: 84:         PIR1bits.RCIF = 0;
  3601  05C2  128C               	bcf	12,5	;volatile
  3602  05C3                     i1l164:
  3603  05C3  0873               	movf	??_ISR+2,w
  3604  05C4  008A               	movwf	10
  3605  05C5  0E72               	swapf	??_ISR+1,w
  3606  05C6  0083               	movwf	3
  3607  05C7  0EFE               	swapf	btemp,f
  3608  05C8  0E7E               	swapf	btemp,w
  3609  05C9  0009               	retfie
  3610  05CA                     __end_of_ISR:
  3611                           
  3612                           	psect	intentry
  3613  0004                     __pintentry:	
  3614                           ;incstack = 0
  3615                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  3616                           
  3617  0004                     interrupt_function:
  3618  007E                     saved_w	set	btemp
  3619  0004  00FE               	movwf	btemp
  3620  0005  0E03               	swapf	3,w
  3621  0006  00F2               	movwf	??_ISR+1
  3622  0007  080A               	movf	10,w
  3623  0008  00F3               	movwf	??_ISR+2
  3624  0009  120A  118A  2D98   	ljmp	_ISR
  3625                           
  3626                           	psect	text23
  3627  06DE                     __ptext23:	
  3628 ;; *************** function _spiWrite *****************
  3629 ;; Defined at:
  3630 ;;		line 33 in file "SPI2.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  dat             1    wreg     unsigned char 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  dat             1    0[COMMON] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  1    wreg      void 
  3637 ;; Registers used:
  3638 ;;		wreg
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3644 ;;      Params:         0       0       0       0       0
  3645 ;;      Locals:         1       0       0       0       0
  3646 ;;      Temps:          0       0       0       0       0
  3647 ;;      Totals:         1       0       0       0       0
  3648 ;;Total ram usage:        1 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; This function calls:
  3651 ;;		Nothing
  3652 ;; This function is called by:
  3653 ;;		_ISR
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           
  3658                           ;psect for function _spiWrite
  3659  06DE                     _spiWrite:
  3660                           
  3661                           ;incstack = 0
  3662                           ; Regs used in _spiWrite: [wreg]
  3663                           ;spiWrite@dat stored from wreg
  3664  06DE  00F0               	movwf	spiWrite@dat
  3665  06DF                     i1l1523:
  3666                           
  3667                           ;SPI2.c: 33: void spiWrite(char dat);SPI2.c: 34: {;SPI2.c: 35:     SSPBUF = dat;
  3668  06DF  0870               	movf	spiWrite@dat,w
  3669  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  3670  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  3671  06E2  0093               	movwf	19	;volatile
  3672  06E3                     i1l251:
  3673  06E3  0008               	return
  3674  06E4                     __end_of_spiWrite:
  3675                           
  3676                           	psect	text24
  3677  06B9                     __ptext24:	
  3678 ;; *************** function _revisa_char *****************
  3679 ;; Defined at:
  3680 ;;		line 119 in file "ADC.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;		None
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;                  1    wreg      unsigned char 
  3687 ;; Registers used:
  3688 ;;		wreg
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3694 ;;      Params:         0       0       0       0       0
  3695 ;;      Locals:         0       0       0       0       0
  3696 ;;      Temps:          0       0       0       0       0
  3697 ;;      Totals:         0       0       0       0       0
  3698 ;;Total ram usage:        0 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_ISR
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           
  3708                           ;psect for function _revisa_char
  3709  06B9                     _revisa_char:
  3710  06B9                     i1l1525:	
  3711                           ;incstack = 0
  3712                           ; Regs used in _revisa_char: [wreg]
  3713                           
  3714                           
  3715                           ;ADC.c: 121:     if (RCSTAbits.OERR ==0)
  3716  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  3717  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  3718  06BB  1898               	btfsc	24,1	;volatile
  3719  06BC  2EBE               	goto	u99_21
  3720  06BD  2EBF               	goto	u99_20
  3721  06BE                     u99_21:
  3722  06BE  2EC4               	goto	i1l1529
  3723  06BF                     u99_20:
  3724  06BF                     i1l1527:
  3725                           
  3726                           ;ADC.c: 122:     {;ADC.c: 123:         CREN = 0;
  3727  06BF  1218               	bcf	24,4	;volatile
  3728                           
  3729                           ;ADC.c: 124:         __nop();
  3730  06C0  0000               	nop
  3731                           
  3732                           ;ADC.c: 125:         CREN = 1;
  3733  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  3734  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  3735  06C3  1618               	bsf	24,4	;volatile
  3736  06C4                     i1l1529:
  3737                           
  3738                           ;ADC.c: 127:     return (RCREG);
  3739  06C4  081A               	movf	26,w	;volatile
  3740  06C5                     i1l182:
  3741  06C5  0008               	return
  3742  06C6                     __end_of_revisa_char:
  3743  007E                     btemp	set	126	;btemp
  3744  007E                     wtemp0	set	126
  3745                           
  3746                           	psect	config
  3747                           
  3748                           ;Config register CONFIG1 @ 0x2007
  3749                           ;	Oscillator Selection bits
  3750                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3751                           ;	Watchdog Timer Enable bit
  3752                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3753                           ;	Power-up Timer Enable bit
  3754                           ;	PWRTE = OFF, PWRT disabled
  3755                           ;	RE3/MCLR pin function select bit
  3756                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3757                           ;	Code Protection bit
  3758                           ;	CP = OFF, Program memory code protection is disabled
  3759                           ;	Data Code Protection bit
  3760                           ;	CPD = OFF, Data memory code protection is disabled
  3761                           ;	Brown Out Reset Selection bits
  3762                           ;	BOREN = OFF, BOR disabled
  3763                           ;	Internal External Switchover bit
  3764                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3765                           ;	Fail-Safe Clock Monitor Enabled bit
  3766                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3767                           ;	Low Voltage Programming Enable bit
  3768                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3769                           ;	In-Circuit Debugger Mode bit
  3770                           ;	DEBUG = 0x1, unprogrammed default
  3771  2007                     	org	8199
  3772  2007  20D4               	dw	8404
  3773                           
  3774                           ;Config register CONFIG2 @ 0x2008
  3775                           ;	Brown-out Reset Selection bit
  3776                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3777                           ;	Flash Program Memory Self Write Enable bits
  3778                           ;	WRT = OFF, Write protection off
  3779  2008                     	org	8200
  3780  2008  3FFF               	dw	16383

Data Sizes:
    Strings     44
    Constant    0
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     34      66
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 13
		 -> STR_5(CODE[9]), STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[13]), 
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _conversion->_Lcd_Write_Char
    _conversion->___wmul
    ___xxtofl->___wmul
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Conversion2->_Lcd_Write_Char
    _display3->_dato_char
    _display2->_dato_char
    _Conversion1->_Lcd_Write_Char
    _display1->_dato_char
    ___awdiv->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _main->_conversion
    _conversion->___xxtofl
    ___xxtofl->___awdiv
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Conversion2->___awdiv
    _Conversion1->___awdiv
    ___awdiv->___wmul
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   11751
                                             31 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                       _USART_config
                             _config
                         _conversion
 ---------------------------------------------------------------------------------
 (1) _conversion                                           4     4      0   10315
                                             27 BANK0      4     4      0
                        _Conversion1
                        _Conversion2
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                             ___wmul
                           ___xxtofl
                       _contador_lcd
 ---------------------------------------------------------------------------------
 (2) _contador_lcd                                         1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                             13 BANK0     14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     496
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1    1033
                                              1 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Conversion2                                          3     3      0    2772
                                             13 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                           _display2
                           _display3
 ---------------------------------------------------------------------------------
 (3) _display3                                             0     0      0      22
                          _dato_char
 ---------------------------------------------------------------------------------
 (3) _display2                                             0     0      0      22
                          _dato_char
 ---------------------------------------------------------------------------------
 (2) _Conversion1                                          3     3      0    2750
                                             13 BANK0      3     3      0
                     _Lcd_Write_Char
                            ___awdiv
                            ___awmod
                           _display1
 ---------------------------------------------------------------------------------
 (3) _display1                                             0     0      0      22
                          _dato_char
 ---------------------------------------------------------------------------------
 (4) _dato_char                                            1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1333
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1364
                                              4 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_config                                         0     0      0       0
                   _USART_lib_config
 ---------------------------------------------------------------------------------
 (2) _USART_lib_config                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     341
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      31
                                              1 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      31
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      31
                                              4 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0      22
                                              1 COMMON     3     3      0
                        _revisa_char
                           _spiWrite
 ---------------------------------------------------------------------------------
 (6) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _revisa_char                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   _USART_config
     _USART_lib_config
   _config
   _conversion
     _Conversion1
       _Lcd_Write_Char
       ___awdiv
         ___wmul (ARG)
       ___awmod
       _display1
         _dato_char
     _Conversion2
       _Lcd_Write_Char
       ___awdiv
         ___wmul (ARG)
       ___awmod
       _display2
         _dato_char
       _display3
         _dato_char
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_Char
     ___awdiv
       ___wmul (ARG)
     ___awmod
     ___wmul
     ___xxtofl
       ___awdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     _contador_lcd

 _ISR (ROOT)
   _revisa_char
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      4C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      42       5       82.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      4C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 03:47:39 2021

                        _a 0050                          _b 0060                          _c 0061  
                        pc 0002                _SSPSTATbits 0094                         l91 06B8  
                       l85 0676                         l88 0689                         l97 063F  
             ___awdiv@sign 002A                         _w1 0052                         _w2 0051  
                       fsr 0004        ___wmul@multiplicand 0022                        l100 06AB  
                      l112 069B                        l106 05F2                        l202 052D  
                      l210 04A7                        l109 0565                        l205 04EB  
                      l216 065B                        l511 0458                        l175 06CB  
                      _ADC 004C                        l185 06DD                        l345 0601  
                      l193 013B                        l178 06CF                        l347 0619  
                      l196 030E                        l199 0286                        l498 03FD  
                      l780 01F7                        l791 01C1                        l792 01CD  
                      l784 01A5                        l778 0160                        l981 0691  
                      l973 068A                        l991 0698                        l983 0692  
                      l975 068E                        l993 0699                        l985 0693  
                      l977 068F                        l995 069A                        l987 0696  
                      l979 0690                        l989 0697                        u610 03CA  
                      u611 03C9                        _ISR 0598                        u605 03BC  
                      u630 03DB                        u550 06CF                        u631 03DA  
                      u551 06CE                        u560 0461                        u625 03CB  
                      u561 0460                        u650 03EF                        u570 039C  
                      u651 03EE                        u635 03D7                        u571 039B  
                      u660 03F4                        u580 03A7                        u900 01AB  
                      u661 03F3                        u645 03E3                        u581 03A6  
                      u901 01AA                        u590 03B8                        u591 03B7  
                      u920 01BB                        u840 0144                        u921 01BA  
                      u841 0143                        u930 01C1                        u850 0148  
                      u931 01C0                        u915 01B0                        u851 0147  
                      u940 01C5                        u860 0168                        u780 0648  
                      u941 01C4                        u861 0167                        u781 0647  
                      u950 01DA                        u790 0655                        u791 0654  
                      u960 01EA                        u880 0189                        u961 01E9  
                      u881 0188                        u970 01EE                        u971 01ED  
                      u955 01D5                        u875 017B                        u895 019D  
         _USART_lib_config 068A              ??_Conversion1 002D              ??_Conversion2 002D  
                      fsr0 0004                        indf 0000               ___awmod@sign 0025  
                     ?_ISR 0070                       l1101 065C                       l1111 0669  
                     l1103 0660                       l1121 0672                       l1113 066A  
                     l1105 0664                       l1123 0673                       l1115 066D  
                     l1107 0665                       l1117 0670                       l1109 0666  
                     l1301 0398                       l1119 0671                       l1311 03AC  
                     l1303 039C                       l1161 06D8                       l1321 03C2  
                     l1313 03B0                       l1305 03A1                       l1331 03E2  
                     l1323 03C6                       l1315 03B2                       l1307 03A3  
                     l1333 03E9                       l1325 03CA                       l1317 03B8  
                     l1309 03A7                       l1327 03DB                       l1319 03BB  
                     l1335 03EF                       l1271 06C7                       l1431 064D  
                     l1601 067A                       l1337 03F4                       l1329 03E1  
                     l1433 064F                       l1603 067B                       l1611 06A0  
                     l1339 03F9                       l1291 04A8                       l1435 0655  
                     l1427 0640              ?_contador_lcd 0070                       l1605 067D  
                     l1613 06A2                       l1621 0405                       l1293 0459  
                     l1701 05F3                       l1461 0168                       l1453 013F  
                     l1429 0648                       l1607 0686                       l1615 06A8  
                     l1631 041B                       l1623 040A                       l1295 0461  
                     l1711 0615                       l1703 05F5                       l1471 018A  
                     l1455 0144                       l1609 069D                       l1721 05DD  
                     l1641 0437                       l1633 041E                       l1625 040C  
                     l1617 03FE                       l1289 04EC                       l1297 0483  
                     l1705 05FB                       l1481 01BB                       l1473 018E  
                     l1465 0171                       l1457 0148                       l1715 06AC  
                     l1731 0541                       l1723 05E5                       l1299 0395  
                     l1651 0454                       l1643 043D                       l1635 0425  
                     l1627 0410                       l1619 0401                       l1707 0608  
                     l1491 01EE                       l1483 01C5                       l1475 019C  
                     l1467 0176                       l1459 0158                       l1733 054D  
                     l1725 052E                       l1717 05CD                       l1645 0444  
                     l1637 0429                       l1629 0415                       l1661 062E  
                     l1709 060F                       l1493 01EF                       l1485 01CF  
                     l1477 01AC                       l1469 0183                       l1741 0023  
                     l1735 0553                       l1727 0531                       l1719 05D0  
                     l1639 042D                       l1647 044A                       l1671 02E6  
                     l1663 0634                       l1655 061D                       l1487 01E5  
                     l1479 01B7                       l1751 0080                       l1743 002C  
                     l1737 0559                       l1729 0537                       l1649 044F  
                     l1681 0309                       l1673 02ED                       l1665 0639  
                     l1657 0622                       l1489 01EA                       l1761 00F3  
                     l1753 00C9                       l1745 0030                       l1739 055F  
                     l1675 02F3                       l1667 0287                       l1691 0264  
                     l1683 01F8                       l1659 0627                       l1755 00D1  
                     l1747 0035                       l1771 0347                       l1763 030F  
                     l1677 02FA                       l1669 02E2                       l1693 026D  
                     l1685 0253                       l1757 00D9                       l1749 007C  
                     l1781 036E                       l1773 034C                       l1765 0323  
                     l1679 0303                       l1695 0276                       l1687 0257  
                     l1759 00ED                       l1783 037A                       l1775 0356  
                     l1767 0329                       l1697 027C                       l1689 025E  
                     l1785 0380                       l1777 035C                       l1769 0339  
                     l1699 0281                       l1787 0385                       l1779 0368  
                     l1789 038B                       STR_1 0579                       STR_2 056C  
                     STR_3 058C                       STR_4 0592                       STR_5 0583  
                     _CREN 00C4                       u1110 042D                       u1111 042C  
                     u1120 0437                       u1121 0436                       u1105 041F  
                     u1210 0615                       u1211 0614                       u1220 05F2  
                     u1140 044A                       u1221 05F1                       u1141 0449  
                     u1125 0433                       u1205 0609                       u1150 044F  
                     u1070 0405                       u1230 0030                       u1151 044E  
                     u1135 043E                       u1071 0404                       u1231 002F  
                     u1080 0410                       u1160 0622                       u1240 0035  
                     u1081 040F                       u1161 0621                       u1241 0034  
                     u1090 041B                       u1170 0634                       u1250 00D9  
                     u1307 054B                       u1091 041A                       u1171 0633  
                     u1251 00D8                       u1180 05FB                       u1260 00F3  
                     u1317 0682                       u1181 05FA                       u1261 00F2  
                     u1195 0602                       u1277 0341                       u1287 06A5  
                     u1297 053D          ?_Lcd_Write_String 0070                       _main 030F  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0076  
          __end_of_Lcd_Cmd 068A                      ??_ISR 0071                      ?_main 0070  
          __end_of___awdiv 03FE            __end_of___awmod 0459                      _ANSEL 0188  
          ___awdiv@divisor 0024                      i1l251 06E3                      i1l164 05C3  
                    i1l182 06C5            ___awdiv@counter 0029                      _RCREG 001A  
                    _SPBRG 0099                      _PORTB 0006                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 0026                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _SSPIF 0063                      _TXREG 0019  
                    u99_20 06BF                      u99_21 06BE             ??_contador_lcd 0074  
                    _valor 0053                      _vpot1 0046                      _vpot2 0042  
      __end_of_Conversion1 030F        __end_of_Conversion2 0287                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 0566  
          __initialization 000F             dato_char@valor 0074               __end_of_main 0395  
                   ??_main 003F         __size_of_Lcd_Clear 000D                     _ADRESH 001E  
         ___awdiv@dividend 0026                     _ANSELH 0189                     u104_20 059E  
                   u104_21 059D                     i1l1523 06DF                     i1l1525 06B9  
                   i1l1527 06BF                     u105_20 05AB                     i1l1529 06C4  
                   u105_21 05AA                     i1l1561 05A7                     i1l1571 05C2  
                   i1l1563 05AB                     i1l1555 0598                     i1l1565 05AC  
                   i1l1557 059E                     i1l1567 05B4                     i1l1559 05A4  
                   u106_20 05B8                     i1l1569 05B8                     u106_21 05B7  
                ??_Lcd_Cmd 0074    __size_of_Lcd_Write_Char 0010                     _TRISC3 043B  
                   _TRISC5 043D                     _SSPCON 0014                     _SSPBUF 0013  
         __end_of___xxtofl 01F8           __end_of_display1 052E           __end_of_display2 04EC  
         __end_of_display3 04A8                     ___wmul 05F3                  ??___awdiv 0028  
                ??___awmod 0074                     _config 065C                     _buffer 005F  
             ?_revisa_char 0070           ___awdiv@quotient 002B            ___awmod@divisor 0020  
                   _revisa 0054            ___awmod@counter 0024                _Conversion1 0287  
              _Conversion2 01F8                     saved_w 007E           __end_of_spiWrite 06E4  
          Lcd_Set_Cursor@a 0023            Lcd_Set_Cursor@b 0021               ___xxtofl@arg 0037  
             ___xxtofl@exp 0036               ___xxtofl@val 002D    __end_of__initialization 001C  
        __end_of_Lcd_Clear 06B9   __end_of_USART_lib_config 069C             __pcstackCOMMON 0070  
     __end_of_contador_lcd 065C         __size_of_dato_char 000A             _Lcd_Set_Cursor 061A  
             _ANTIREBOTEA2 004A                  ?_Lcd_Init 0070                 __pbssBANK0 0042  
               __pmaintext 030F                    ?___wmul 0020                 __pintentry 0004  
                  ?_config 0070  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 0640  
                ?___xxtofl 002D                 ??_Lcd_Init 0021                  ?_display1 0070  
                ?_display2 0070                  ?_display3 0070                    _SSPSTAT 0094  
               __stringtab 0566             _Lcd_Write_Char 069C                    _Lcd_Cmd 0677  
               _conversion 0020          __end_of_dato_char 06D0                  ?_spiWrite 0070  
                  ___awdiv 0395                    ___awmod 03FE            __size_of___wmul 0027  
          __size_of_config 001B                  _ANSELbits 0188            ?_Lcd_Set_Cursor 0021  
                  __ptext1 0020                    __ptext2 0640                    __ptext3 013C  
                  __ptext4 05F3                    __ptext5 061A                    __ptext6 01F8  
                  __ptext7 0459                    __ptext8 04A8                    __ptext9 0287  
     __size_of_revisa_char 000D               __size_of_ISR 0032                    _enterob 0076  
                  _enteroc 0079                 ??___xxtofl 0031           ___awmod@dividend 0022  
                  clrloop0 06D1                 ??_display1 0075                 ??_display2 0075  
               ??_display3 0075     __end_of_Lcd_Write_Char 06AC       end_of_initialization 001C  
    __size_of_contador_lcd 001C                  _RCSTAbits 0018                 ??_spiWrite 0070  
               _velocidad1 0058                 _velocidad2 0057                 _velocidad3 0056  
                _PORTDbits 0008               ?_Conversion1 0070               ?_Conversion2 0070  
            ___xxtofl@sign 0035                  _TRISAbits 0085                spiWrite@dat 0070  
          ?_Lcd_Write_Char 0070               _contador_lcd 0640          Lcd_Write_String@a 0022  
        Lcd_Write_String@i 0020                ?_conversion 0070                  _TXSTAbits 0098  
        ?_USART_lib_config 0070              ?_USART_config 0070                  _Lcd_Clear 06AC  
       ??_USART_lib_config 0074             __end_of___wmul 061A           _Lcd_Write_String 05CA  
           __end_of_config 0677        start_initialization 000F                __end_of_ISR 05CA  
        __size_of_Lcd_Init 0038        conversion@puertoANL 003E             ??_USART_config 0074  
               ?_Lcd_Clear 0070                   ??___wmul 0074                   ??_config 0074  
          Lcd_Write_Char@a 0075        __size_of_conversion 011C                __pbssCOMMON 0076  
                ___latbits 0002              __pcstackBANK0 0020          __size_of___xxtofl 00BC  
              _ANTIREBOTEA 004E                   ?_Lcd_Cmd 0070          __size_of_display1 0042  
        __size_of_display2 0044          __size_of_display3 004F                  _dato_char 06C6  
                _centena1b 005B                  _centena1c 0077                  _centena2b 0059  
                _centena2c 005D           ??_Lcd_Set_Cursor 0022                   ?___awdiv 0024  
                 ?___awmod 0020          __size_of_spiWrite 0006                  __pstrings 0566  
     __size_of_Conversion1 0088       __size_of_Conversion2 008F          interrupt_function 0004  
           ___wmul@product 0074                  clear_ram0 06D0                   _PIE1bits 008C  
                 Lcd_Cmd@a 0020                   _PIR1bits 000C                 ?_dato_char 0070  
              ??_Lcd_Clear 0076              ??_revisa_char 0070                 _ADCON0bits 001F  
              __stringbase 056B                 _ADCON1bits 009F          ___wmul@multiplier 0020  
         ??_Lcd_Write_Char 0074       __end_of_USART_config 06DE                   _Lcd_Init 052E  
 __end_of_Lcd_Write_String 05F3               ??_conversion 003B           __size_of_Lcd_Cmd 0013  
         __size_of___awdiv 0069           __size_of___awmod 005B         __end_of__stringtab 056C  
__size_of_USART_lib_config 0012                   _decima1b 005C                   _decima1c 0078  
                 _decima2b 005A                   _decima2c 005E         __end_of_conversion 013C  
                 ___xxtofl 013C        __end_of_revisa_char 06C6                   __ptext10 04EC  
                 __ptext11 06C6                   __ptext20 06AC                   __ptext12 03FE  
                 __ptext21 0677                   __ptext13 0395                   __ptext22 0598  
                 __ptext14 065C                   __ptext23 06DE                   __ptext15 06D8  
                 __ptext24 06B9                   __ptext16 068A                   __ptext17 05CA  
                 __ptext18 069C                   __ptext19 052E                   _display1 04EC  
                 _display2 04A8                   _display3 0459                   _contador 0055  
            __size_of_main 0086                ??_dato_char 0074                   _spiWrite 06DE  
               _INTCONbits 000B                   intlevel1 0000                  stringcode 0566  
              _revisa_char 06B9         Lcd_Set_Cursor@temp 0024      __size_of_USART_config 0006  
                 stringdir 0566                   stringtab 0566               _USART_config 06D8  
