

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 24 03:11:17 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F887 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  0105                     	;# 
   150  0107                     	;# 
   151  0108                     	;# 
   152  0109                     	;# 
   153  010C                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  0185                     	;# 
   159  0187                     	;# 
   160  0188                     	;# 
   161  0189                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  0105                     	;# 
   228  0107                     	;# 
   229  0108                     	;# 
   230  0109                     	;# 
   231  010C                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  0185                     	;# 
   237  0187                     	;# 
   238  0188                     	;# 
   239  0189                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242                           
   243                           	psect	strings
   244  0800                     __pstrings:
   245  0800                     stringtab:
   246  0800                     __stringtab:
   247                           
   248                           ;	String table - string pointers are 1 byte each
   249  0800  1BFF               	btfsc	btemp+1,7
   250  0801  280A               	ljmp	stringcode
   251  0802  1383               	bcf	3,7
   252  0803  187F               	btfsc	btemp+1,0
   253  0804  1783               	bsf	3,7
   254  0805  0800               	movf	0,w
   255  0806  0A84               	incf	4,f
   256  0807  1903               	skipnz
   257  0808  0AFF               	incf	btemp+1,f
   258  0809  0008               	return
   259  080A                     stringcode:
   260  080A                     stringdir:
   261  080A  3008               	movlw	high stringdir
   262  080B  008A               	movwf	10
   263  080C  0804               	movf	4,w
   264  080D  0A84               	incf	4,f
   265  080E  0782               	addwf	2,f
   266  080F                     __stringbase:
   267  080F  3400               	retlw	0
   268  0810                     __end_of__stringtab:
   269  0810                     __powers_:
   270  0810  3400               	retlw	0
   271  0811  3400               	retlw	0
   272  0812  3480               	retlw	128
   273  0813  343F               	retlw	63
   274  0814  3400               	retlw	0
   275  0815  3400               	retlw	0
   276  0816  3420               	retlw	32
   277  0817  3441               	retlw	65
   278  0818  3400               	retlw	0
   279  0819  3400               	retlw	0
   280  081A  34C8               	retlw	200
   281  081B  3442               	retlw	66
   282  081C  3400               	retlw	0
   283  081D  3400               	retlw	0
   284  081E  347A               	retlw	122
   285  081F  3444               	retlw	68
   286  0820  3400               	retlw	0
   287  0821  3440               	retlw	64
   288  0822  341C               	retlw	28
   289  0823  3446               	retlw	70
   290  0824  3400               	retlw	0
   291  0825  3450               	retlw	80
   292  0826  34C3               	retlw	195
   293  0827  3447               	retlw	71
   294  0828  3400               	retlw	0
   295  0829  3424               	retlw	36
   296  082A  3474               	retlw	116
   297  082B  3449               	retlw	73
   298  082C  3480               	retlw	128
   299  082D  3496               	retlw	150
   300  082E  3418               	retlw	24
   301  082F  344B               	retlw	75
   302  0830  3420               	retlw	32
   303  0831  34BC               	retlw	188
   304  0832  34BE               	retlw	190
   305  0833  344C               	retlw	76
   306  0834  3428               	retlw	40
   307  0835  346B               	retlw	107
   308  0836  346E               	retlw	110
   309  0837  344E               	retlw	78
   310  0838  34F9               	retlw	249
   311  0839  3402               	retlw	2
   312  083A  3415               	retlw	21
   313  083B  3450               	retlw	80
   314  083C  34EC               	retlw	236
   315  083D  3478               	retlw	120
   316  083E  34AD               	retlw	173
   317  083F  3460               	retlw	96
   318  0840  34CA               	retlw	202
   319  0841  34F2               	retlw	242
   320  0842  3449               	retlw	73
   321  0843  3471               	retlw	113
   322  0844                     __end_of__powers_:
   323  0844                     __npowers_:
   324  0844  3400               	retlw	0
   325  0845  3400               	retlw	0
   326  0846  3480               	retlw	128
   327  0847  343F               	retlw	63
   328  0848  34CD               	retlw	205
   329  0849  34CC               	retlw	204
   330  084A  34CC               	retlw	204
   331  084B  343D               	retlw	61
   332  084C  340A               	retlw	10
   333  084D  34D7               	retlw	215
   334  084E  3423               	retlw	35
   335  084F  343C               	retlw	60
   336  0850  346F               	retlw	111
   337  0851  3412               	retlw	18
   338  0852  3483               	retlw	131
   339  0853  343A               	retlw	58
   340  0854  3417               	retlw	23
   341  0855  34B7               	retlw	183
   342  0856  34D1               	retlw	209
   343  0857  3438               	retlw	56
   344  0858  34AC               	retlw	172
   345  0859  34C5               	retlw	197
   346  085A  3427               	retlw	39
   347  085B  3437               	retlw	55
   348  085C  34BD               	retlw	189
   349  085D  3437               	retlw	55
   350  085E  3486               	retlw	134
   351  085F  3435               	retlw	53
   352  0860  3495               	retlw	149
   353  0861  34BF               	retlw	191
   354  0862  34D6               	retlw	214
   355  0863  3433               	retlw	51
   356  0864  3477               	retlw	119
   357  0865  34CC               	retlw	204
   358  0866  342B               	retlw	43
   359  0867  3432               	retlw	50
   360  0868  345F               	retlw	95
   361  0869  3470               	retlw	112
   362  086A  3489               	retlw	137
   363  086B  3430               	retlw	48
   364  086C  34FF               	retlw	255
   365  086D  34E6               	retlw	230
   366  086E  34DB               	retlw	219
   367  086F  342E               	retlw	46
   368  0870  3408               	retlw	8
   369  0871  34E5               	retlw	229
   370  0872  343C               	retlw	60
   371  0873  341E               	retlw	30
   372  0874  3460               	retlw	96
   373  0875  3442               	retlw	66
   374  0876  34A2               	retlw	162
   375  0877  340D               	retlw	13
   376  0878                     __end_of__npowers_:
   377  0878                     _dpowers:
   378  0878  3401               	retlw	1
   379  0879  3400               	retlw	0
   380  087A  3400               	retlw	0
   381  087B  3400               	retlw	0
   382  087C  340A               	retlw	10
   383  087D  3400               	retlw	0
   384  087E  3400               	retlw	0
   385  087F  3400               	retlw	0
   386  0880  3464               	retlw	100
   387  0881  3400               	retlw	0
   388  0882  3400               	retlw	0
   389  0883  3400               	retlw	0
   390  0884  34E8               	retlw	232
   391  0885  3403               	retlw	3
   392  0886  3400               	retlw	0
   393  0887  3400               	retlw	0
   394  0888  3410               	retlw	16
   395  0889  3427               	retlw	39
   396  088A  3400               	retlw	0
   397  088B  3400               	retlw	0
   398  088C  34A0               	retlw	160
   399  088D  3486               	retlw	134
   400  088E  3401               	retlw	1
   401  088F  3400               	retlw	0
   402  0890  3440               	retlw	64
   403  0891  3442               	retlw	66
   404  0892  340F               	retlw	15
   405  0893  3400               	retlw	0
   406  0894  3480               	retlw	128
   407  0895  3496               	retlw	150
   408  0896  3498               	retlw	152
   409  0897  3400               	retlw	0
   410  0898  3400               	retlw	0
   411  0899  34E1               	retlw	225
   412  089A  34F5               	retlw	245
   413  089B  3405               	retlw	5
   414  089C  3400               	retlw	0
   415  089D  34CA               	retlw	202
   416  089E  349A               	retlw	154
   417  089F  343B               	retlw	59
   418  08A0                     __end_of_dpowers:
   419  0013                     _SSPBUF	set	19
   420  0014                     _SSPCON	set	20
   421  0005                     _PORTA	set	5
   422  0008                     _PORTD	set	8
   423  0007                     _PORTCbits	set	7
   424  0006                     _PORTB	set	6
   425  0008                     _PORTDbits	set	8
   426  0094                     _SSPSTATbits	set	148
   427  0094                     _SSPSTAT	set	148
   428  0085                     _TRISA	set	133
   429  0088                     _TRISD	set	136
   430  0086                     _TRISB	set	134
   431  043B                     _TRISC3	set	1083
   432  043D                     _TRISC5	set	1085
   433  0438                     _TRISC0	set	1080
   434  0439                     _TRISC1	set	1081
   435  043A                     _TRISC2	set	1082
   436  0189                     _ANSELH	set	393
   437  0188                     _ANSEL	set	392
   438  08A0                     STR_2:
   439  08A0  3452               	retlw	82	;'R'
   440  08A1  3441               	retlw	65	;'A'
   441  08A2  3455               	retlw	85	;'U'
   442  08A3  344C               	retlw	76	;'L'
   443  08A4  3420               	retlw	32	;' '
   444  08A5  3441               	retlw	65	;'A'
   445  08A6  3447               	retlw	71	;'G'
   446  08A7  3455               	retlw	85	;'U'
   447  08A8  3449               	retlw	73	;'I'
   448  08A9  344C               	retlw	76	;'L'
   449  08AA  3441               	retlw	65	;'A'
   450  08AB  3452               	retlw	82	;'R'
   451  08AC  3400               	retlw	0
   452  08AD                     STR_1:
   453  08AD  3444               	retlw	68	;'D'
   454  08AE  3449               	retlw	73	;'I'
   455  08AF  3447               	retlw	71	;'G'
   456  08B0  3449               	retlw	73	;'I'
   457  08B1  3454               	retlw	84	;'T'
   458  08B2  3441               	retlw	65	;'A'
   459  08B3  344C               	retlw	76	;'L'
   460  08B4  3420               	retlw	32	;' '
   461  08B5  3432               	retlw	50	;'2'
   462  08B6  3400               	retlw	0
   463  08B7                     STR_8:
   464  08B7  3425               	retlw	37	;'%'
   465  08B8  342E               	retlw	46	;'.'
   466  08B9  3431               	retlw	49	;'1'
   467  08BA  3466               	retlw	102	;'f'
   468  08BB  3400               	retlw	0
   469  08BC                     STR_7:
   470  08BC  3425               	retlw	37	;'%'
   471  08BD  342E               	retlw	46	;'.'
   472  08BE  3432               	retlw	50	;'2'
   473  08BF  3466               	retlw	102	;'f'
   474  08C0  3400               	retlw	0
   475  08C1                     STR_6:
   476  08C1  3425               	retlw	37	;'%'
   477  08C2  342E               	retlw	46	;'.'
   478  08C3  3433               	retlw	51	;'3'
   479  08C4  3466               	retlw	102	;'f'
   480  08C5  3400               	retlw	0
   481  08C6                     STR_5:
   482  08C6  3454               	retlw	84	;'T'
   483  08C7  3465               	retlw	101	;'e'
   484  08C8  346D               	retlw	109	;'m'
   485  08C9  3470               	retlw	112	;'p'
   486  08CA  3400               	retlw	0
   487  08CB                     STR_3:
   488  08CB  3443               	retlw	67	;'C'
   489  08CC  346F               	retlw	111	;'o'
   490  08CD  346E               	retlw	110	;'n'
   491  08CE  3474               	retlw	116	;'t'
   492  08CF  3400               	retlw	0
   493  08D0                     STR_4:
   494  08D0  3441               	retlw	65	;'A'
   495  08D1  3444               	retlw	68	;'D'
   496  08D2  3443               	retlw	67	;'C'
   497  08D3  3400               	retlw	0
   498                           
   499                           	psect	cinit
   500  07F3                     start_initialization:	
   501                           ; #config settings
   502                           
   503  07F3                     __initialization:
   504                           
   505                           ; Clear objects allocated to BANK1
   506  07F3  1383               	bcf	3,7	;select IRP bank0
   507  07F4  30D8               	movlw	low __pbssBANK1
   508  07F5  0084               	movwf	4
   509  07F6  30EB               	movlw	low (__pbssBANK1+19)
   510  07F7  120A  118A  2003  120A  118A  	fcall	clear_ram0
   511  07FC                     end_of_initialization:	
   512                           ;End of C runtime variable initialization code
   513                           
   514  07FC                     __end_of__initialization:
   515  07FC  0183               	clrf	3
   516  07FD  120A  118A  284F   	ljmp	_main	;jump to C main() function
   517                           
   518                           	psect	bssBANK1
   519  00D8                     __pbssBANK1:
   520  00D8                     _contm:
   521  00D8                     	ds	4
   522  00DC                     _vpot1:
   523  00DC                     	ds	4
   524  00E0                     _tempt:
   525  00E0                     	ds	4
   526  00E4                     _cc:
   527  00E4                     	ds	2
   528  00E6                     _c:
   529  00E6                     	ds	2
   530  00E8                     _buffer3:
   531  00E8                     	ds	1
   532  00E9                     _buffer2:
   533  00E9                     	ds	1
   534  00EA                     _buffer1:
   535  00EA                     	ds	1
   536                           
   537                           	psect	clrtext
   538  0003                     clear_ram0:	
   539                           ;	Called with FSR containing the base address, and
   540                           ;	W with the last address+1
   541                           
   542  0003  0064               	clrwdt	;clear the watchdog before getting into this loop
   543  0004                     clrloop0:
   544  0004  0180               	clrf	0	;clear RAM location pointed to by FSR
   545  0005  0A84               	incf	4,f	;increment pointer
   546  0006  0604               	xorwf	4,w	;XOR with final address
   547  0007  1903               	btfsc	3,2	;have we reached the end yet?
   548  0008  3400               	retlw	0	;all done for this memory range, return
   549  0009  0604               	xorwf	4,w	;XOR again to restore value
   550  000A  2804               	goto	clrloop0	;do the next byte
   551                           
   552                           	psect	cstackBANK1
   553  00A0                     __pcstackBANK1:
   554  00A0                     ___fladd@signs:
   555                           
   556                           ; 1 bytes @ 0x0
   557  00A0                     	ds	1
   558  00A1                     ___fladd@aexp:
   559                           
   560                           ; 1 bytes @ 0x1
   561  00A1                     	ds	1
   562  00A2                     ___fladd@bexp:
   563                           
   564                           ; 1 bytes @ 0x2
   565  00A2                     	ds	1
   566  00A3                     ___fladd@grs:
   567                           
   568                           ; 1 bytes @ 0x3
   569  00A3                     	ds	1
   570  00A4                     ?___flsub:
   571  00A4                     ___flsub@a:	
   572                           ; 4 bytes @ 0x4
   573                           
   574                           
   575                           ; 4 bytes @ 0x4
   576  00A4                     	ds	4
   577  00A8                     ___flsub@b:
   578                           
   579                           ; 4 bytes @ 0x8
   580  00A8                     	ds	4
   581  00AC                     ?_sprintf:
   582  00AC                     sprintf@f:	
   583                           ; 2 bytes @ 0xC
   584                           
   585                           
   586                           ; 1 bytes @ 0xC
   587  00AC                     	ds	5
   588  00B1                     ??_sprintf:
   589                           
   590                           ; 1 bytes @ 0x11
   591  00B1                     	ds	5
   592  00B6                     _sprintf$1008:
   593                           
   594                           ; 4 bytes @ 0x16
   595  00B6                     	ds	4
   596  00BA                     sprintf@ap:
   597                           
   598                           ; 1 bytes @ 0x1A
   599  00BA                     	ds	1
   600  00BB                     sprintf@flag:
   601                           
   602                           ; 2 bytes @ 0x1B
   603  00BB                     	ds	2
   604  00BD                     sprintf@val:
   605                           
   606                           ; 4 bytes @ 0x1D
   607  00BD                     	ds	4
   608  00C1                     sprintf@eexp:
   609                           
   610                           ; 2 bytes @ 0x21
   611  00C1                     	ds	2
   612  00C3                     sprintf@tmpval:
   613                           
   614                           ; 4 bytes @ 0x23
   615  00C3                     	ds	4
   616  00C7                     sprintf@prec:
   617                           
   618                           ; 2 bytes @ 0x27
   619  00C7                     	ds	2
   620  00C9                     sprintf@sp:
   621                           
   622                           ; 1 bytes @ 0x29
   623  00C9                     	ds	1
   624  00CA                     sprintf@fval:
   625                           
   626                           ; 4 bytes @ 0x2A
   627  00CA                     	ds	4
   628  00CE                     sprintf@c:
   629                           
   630                           ; 1 bytes @ 0x2E
   631  00CE                     	ds	1
   632  00CF                     ??_Contador:
   633  00CF                     ??_conversion:	
   634                           ; 1 bytes @ 0x2F
   635                           
   636  00CF                     ??_temperaturac:	
   637                           ; 1 bytes @ 0x2F
   638                           
   639                           
   640                           ; 1 bytes @ 0x2F
   641  00CF                     	ds	1
   642  00D0                     _temperaturac$1004:
   643                           
   644                           ; 4 bytes @ 0x30
   645  00D0                     	ds	4
   646  00D4                     ??_main:
   647                           
   648                           ; 1 bytes @ 0x34
   649  00D4                     	ds	4
   650                           
   651                           	psect	cstackCOMMON
   652  0070                     __pcstackCOMMON:
   653  0070                     ?_isdigit:
   654  0070                     ?___fleq:	
   655                           ; 1 bit 
   656                           
   657  0070                     ?___flge:	
   658                           ; 1 bit 
   659                           
   660  0070                     ?_setup:	
   661                           ; 1 bit 
   662                           
   663  0070                     ?_spiWrite:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ??_spiWrite:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_spiRead:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ??_spiRead:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_Contador:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_conversion:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_temperaturac:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_spiInit:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ??_isdigit:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_Lcd_Cmd:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ??_Lcd_Cmd:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_Lcd_Write_Char:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ??_Lcd_Write_Char:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_Lcd_Init:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_main:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_spiReceiveWait:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ??_spiReceiveWait:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?__Umul8_16:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_Lcd_Clear:	
   718                           ; 2 bytes @ 0x0
   719                           
   720  0070                     ?___wmul:	
   721                           ; 2 bytes @ 0x0
   722                           
   723  0070                     ?___awmod:	
   724                           ; 2 bytes @ 0x0
   725                           
   726  0070                     ?___lwmod:	
   727                           ; 2 bytes @ 0x0
   728                           
   729  0070                     ?__tdiv_to_l_:	
   730                           ; 2 bytes @ 0x0
   731                           
   732  0070                     ?__div_to_l_:	
   733                           ; 4 bytes @ 0x0
   734                           
   735  0070                     ?___lldiv:	
   736                           ; 4 bytes @ 0x0
   737                           
   738  0070                     ?___flneg:	
   739                           ; 4 bytes @ 0x0
   740                           
   741  0070                     ?___llmod:	
   742                           ; 4 bytes @ 0x0
   743                           
   744  0070                     spiInit@sDataSample:	
   745                           ; 4 bytes @ 0x0
   746                           
   747  0070                     spiWrite@dat:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     __Umul8_16@multiplicand:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     _isdigit$821:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ___wmul@multiplier:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ___awmod@divisor:	
   760                           ; 2 bytes @ 0x0
   761                           
   762  0070                     ___lwmod@divisor:	
   763                           ; 2 bytes @ 0x0
   764                           
   765  0070                     ___lldiv@divisor:	
   766                           ; 2 bytes @ 0x0
   767                           
   768  0070                     __div_to_l_@f1:	
   769                           ; 4 bytes @ 0x0
   770                           
   771  0070                     ___fleq@ff1:	
   772                           ; 4 bytes @ 0x0
   773                           
   774  0070                     ___flge@ff1:	
   775                           ; 4 bytes @ 0x0
   776                           
   777  0070                     ___flneg@f1:	
   778                           ; 4 bytes @ 0x0
   779                           
   780  0070                     __tdiv_to_l_@f1:	
   781                           ; 4 bytes @ 0x0
   782                           
   783  0070                     ___llmod@divisor:	
   784                           ; 4 bytes @ 0x0
   785                           
   786                           
   787                           ; 4 bytes @ 0x0
   788  0070                     	ds	1
   789  0071                     Lcd_Write_Char@a:
   790  0071                     spiInit@sClockIdle:	
   791                           ; 1 bytes @ 0x1
   792                           
   793  0071                     isdigit@c:	
   794                           ; 1 bytes @ 0x1
   795                           
   796                           
   797                           ; 1 bytes @ 0x1
   798  0071                     	ds	1
   799  0072                     ??__Umul8_16:
   800  0072                     ?_Lcd_Write_String:	
   801                           ; 1 bytes @ 0x2
   802                           
   803  0072                     Lcd_Cmd@a:	
   804                           ; 1 bytes @ 0x2
   805                           
   806  0072                     spiInit@sTransmitEdge:	
   807                           ; 1 bytes @ 0x2
   808                           
   809  0072                     Lcd_Write_String@a:	
   810                           ; 1 bytes @ 0x2
   811                           
   812  0072                     ___wmul@multiplicand:	
   813                           ; 2 bytes @ 0x2
   814                           
   815  0072                     ___awmod@dividend:	
   816                           ; 2 bytes @ 0x2
   817                           
   818  0072                     ___lwmod@dividend:	
   819                           ; 2 bytes @ 0x2
   820                           
   821                           
   822                           ; 2 bytes @ 0x2
   823  0072                     	ds	1
   824  0073                     ??_spiInit:
   825  0073                     ??_Lcd_Clear:	
   826                           ; 1 bytes @ 0x3
   827                           
   828  0073                     ?_Lcd_Set_Cursor:	
   829                           ; 1 bytes @ 0x3
   830                           
   831  0073                     ??_Lcd_Init:	
   832                           ; 1 bytes @ 0x3
   833                           
   834  0073                     Lcd_Set_Cursor@b:	
   835                           ; 1 bytes @ 0x3
   836                           
   837  0073                     spiInit@sType:	
   838                           ; 1 bytes @ 0x3
   839                           
   840                           
   841                           ; 1 bytes @ 0x3
   842  0073                     	ds	1
   843  0074                     ??_setup:
   844  0074                     ??_Lcd_Set_Cursor:	
   845                           ; 1 bytes @ 0x4
   846                           
   847  0074                     ??_Lcd_Write_String:	
   848                           ; 1 bytes @ 0x4
   849                           
   850  0074                     ??___wmul:	
   851                           ; 1 bytes @ 0x4
   852                           
   853  0074                     ??___awmod:	
   854                           ; 1 bytes @ 0x4
   855                           
   856  0074                     ??___flneg:	
   857                           ; 1 bytes @ 0x4
   858                           
   859  0074                     ??___lwmod:	
   860                           ; 1 bytes @ 0x4
   861                           
   862  0074                     ___wmul@product:	
   863                           ; 1 bytes @ 0x4
   864                           
   865  0074                     __Umul8_16@product:	
   866                           ; 2 bytes @ 0x4
   867                           
   868  0074                     ___lldiv@dividend:	
   869                           ; 2 bytes @ 0x4
   870                           
   871  0074                     __div_to_l_@f2:	
   872                           ; 4 bytes @ 0x4
   873                           
   874  0074                     ___fleq@ff2:	
   875                           ; 4 bytes @ 0x4
   876                           
   877  0074                     ___flge@ff2:	
   878                           ; 4 bytes @ 0x4
   879                           
   880  0074                     __tdiv_to_l_@f2:	
   881                           ; 4 bytes @ 0x4
   882                           
   883  0074                     ___llmod@dividend:	
   884                           ; 4 bytes @ 0x4
   885                           
   886                           
   887                           ; 4 bytes @ 0x4
   888  0074                     	ds	1
   889  0075                     Lcd_Set_Cursor@a:
   890  0075                     ___awmod@counter:	
   891                           ; 1 bytes @ 0x5
   892                           
   893  0075                     ___lwmod@counter:	
   894                           ; 1 bytes @ 0x5
   895                           
   896                           
   897                           ; 1 bytes @ 0x5
   898  0075                     	ds	1
   899  0076                     ?___lwdiv:
   900  0076                     Lcd_Set_Cursor@temp:	
   901                           ; 2 bytes @ 0x6
   902                           
   903  0076                     ___awmod@sign:	
   904                           ; 1 bytes @ 0x6
   905                           
   906  0076                     ___lwdiv@divisor:	
   907                           ; 1 bytes @ 0x6
   908                           
   909  0076                     __Umul8_16@word_mpld:	
   910                           ; 2 bytes @ 0x6
   911                           
   912                           
   913                           ; 2 bytes @ 0x6
   914  0076                     	ds	1
   915  0077                     ?___awdiv:
   916  0077                     Lcd_Write_String@i:	
   917                           ; 2 bytes @ 0x7
   918                           
   919  0077                     ___awdiv@divisor:	
   920                           ; 2 bytes @ 0x7
   921                           
   922                           
   923                           ; 2 bytes @ 0x7
   924  0077                     	ds	1
   925  0078                     ??__tdiv_to_l_:
   926  0078                     ??__div_to_l_:	
   927                           ; 1 bytes @ 0x8
   928                           
   929  0078                     ??___lldiv:	
   930                           ; 1 bytes @ 0x8
   931                           
   932  0078                     ??___fleq:	
   933                           ; 1 bytes @ 0x8
   934                           
   935  0078                     ??___flge:	
   936                           ; 1 bytes @ 0x8
   937                           
   938  0078                     ??___llmod:	
   939                           ; 1 bytes @ 0x8
   940                           
   941  0078                     __Umul8_16@multiplier:	
   942                           ; 1 bytes @ 0x8
   943                           
   944  0078                     ___lwdiv@dividend:	
   945                           ; 1 bytes @ 0x8
   946                           
   947                           
   948                           ; 2 bytes @ 0x8
   949  0078                     	ds	1
   950  0079                     ___llmod@counter:
   951  0079                     ___awdiv@dividend:	
   952                           ; 1 bytes @ 0x9
   953                           
   954  0079                     ___lldiv@quotient:	
   955                           ; 2 bytes @ 0x9
   956                           
   957                           
   958                           ; 4 bytes @ 0x9
   959  0079                     	ds	1
   960  007A                     ??___lwdiv:
   961                           
   962                           ; 1 bytes @ 0xA
   963  007A                     	ds	1
   964  007B                     ??___awdiv:
   965  007B                     ___lwdiv@quotient:	
   966                           ; 1 bytes @ 0xB
   967                           
   968                           
   969                           ; 2 bytes @ 0xB
   970  007B                     	ds	2
   971  007D                     ___lldiv@counter:
   972  007D                     ___lwdiv@counter:	
   973                           ; 1 bytes @ 0xD
   974                           
   975                           
   976                           ; 1 bytes @ 0xD
   977  007D                     	ds	1
   978  007E                     ??___flsub:
   979                           
   980                           	psect	cstackBANK0
   981  0020                     __pcstackBANK0:	
   982                           ; 1 bytes @ 0xE
   983                           
   984  0020                     ___awdiv@counter:
   985  0020                     __div_to_l_@quot:	
   986                           ; 1 bytes @ 0x0
   987                           
   988  0020                     __tdiv_to_l_@quot:	
   989                           ; 4 bytes @ 0x0
   990                           
   991                           
   992                           ; 4 bytes @ 0x0
   993  0020                     	ds	1
   994  0021                     ___awdiv@sign:
   995                           
   996                           ; 1 bytes @ 0x1
   997  0021                     	ds	1
   998  0022                     ___awdiv@quotient:
   999                           
  1000                           ; 2 bytes @ 0x2
  1001  0022                     	ds	2
  1002  0024                     ?___xxtofl:
  1003  0024                     __div_to_l_@cntr:	
  1004                           ; 4 bytes @ 0x4
  1005                           
  1006  0024                     __tdiv_to_l_@cntr:	
  1007                           ; 1 bytes @ 0x4
  1008                           
  1009  0024                     ___xxtofl@val:	
  1010                           ; 1 bytes @ 0x4
  1011                           
  1012                           
  1013                           ; 4 bytes @ 0x4
  1014  0024                     	ds	1
  1015  0025                     __div_to_l_@exp1:
  1016  0025                     __tdiv_to_l_@exp1:	
  1017                           ; 1 bytes @ 0x5
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0x5
  1021  0025                     	ds	3
  1022  0028                     ??___xxtofl:
  1023                           
  1024                           ; 1 bytes @ 0x8
  1025  0028                     	ds	4
  1026  002C                     ___xxtofl@sign:
  1027                           
  1028                           ; 1 bytes @ 0xC
  1029  002C                     	ds	1
  1030  002D                     ___xxtofl@exp:
  1031                           
  1032                           ; 1 bytes @ 0xD
  1033  002D                     	ds	1
  1034  002E                     ___xxtofl@arg:
  1035                           
  1036                           ; 4 bytes @ 0xE
  1037  002E                     	ds	4
  1038  0032                     ?___flmul:
  1039  0032                     ___flmul@b:	
  1040                           ; 4 bytes @ 0x12
  1041                           
  1042                           
  1043                           ; 4 bytes @ 0x12
  1044  0032                     	ds	4
  1045  0036                     ___flmul@a:
  1046                           
  1047                           ; 4 bytes @ 0x16
  1048  0036                     	ds	4
  1049  003A                     ??___flmul:
  1050                           
  1051                           ; 1 bytes @ 0x1A
  1052  003A                     	ds	5
  1053  003F                     ___flmul@sign:
  1054                           
  1055                           ; 1 bytes @ 0x1F
  1056  003F                     	ds	1
  1057  0040                     ___flmul@grs:
  1058                           
  1059                           ; 4 bytes @ 0x20
  1060  0040                     	ds	4
  1061  0044                     ___flmul@aexp:
  1062                           
  1063                           ; 1 bytes @ 0x24
  1064  0044                     	ds	1
  1065  0045                     ___flmul@bexp:
  1066                           
  1067                           ; 1 bytes @ 0x25
  1068  0045                     	ds	1
  1069  0046                     ___flmul@prod:
  1070                           
  1071                           ; 4 bytes @ 0x26
  1072  0046                     	ds	4
  1073  004A                     ___flmul@temp:
  1074                           
  1075                           ; 2 bytes @ 0x2A
  1076  004A                     	ds	2
  1077  004C                     ?_fround:
  1078  004C                     ?_scale:	
  1079                           ; 4 bytes @ 0x2C
  1080                           
  1081  004C                     ?___fldiv:	
  1082                           ; 4 bytes @ 0x2C
  1083                           
  1084  004C                     ___fldiv@a:	
  1085                           ; 4 bytes @ 0x2C
  1086                           
  1087                           
  1088                           ; 4 bytes @ 0x2C
  1089  004C                     	ds	4
  1090  0050                     ??_fround:
  1091  0050                     ??_scale:	
  1092                           ; 1 bytes @ 0x30
  1093                           
  1094  0050                     ___fldiv@b:	
  1095                           ; 1 bytes @ 0x30
  1096                           
  1097                           
  1098                           ; 4 bytes @ 0x30
  1099  0050                     	ds	4
  1100  0054                     ??___fldiv:
  1101                           
  1102                           ; 1 bytes @ 0x34
  1103  0054                     	ds	3
  1104  0057                     _fround$1006:
  1105                           
  1106                           ; 4 bytes @ 0x37
  1107  0057                     	ds	2
  1108  0059                     ___fldiv@rem:
  1109                           
  1110                           ; 4 bytes @ 0x39
  1111  0059                     	ds	1
  1112  005A                     _scale$1007:
  1113                           
  1114                           ; 4 bytes @ 0x3A
  1115  005A                     	ds	1
  1116  005B                     _fround$1005:
  1117                           
  1118                           ; 4 bytes @ 0x3B
  1119  005B                     	ds	2
  1120  005D                     ___fldiv@sign:
  1121                           
  1122                           ; 1 bytes @ 0x3D
  1123  005D                     	ds	1
  1124  005E                     scale@scl:
  1125  005E                     ___fldiv@new_exp:	
  1126                           ; 1 bytes @ 0x3E
  1127                           
  1128                           
  1129                           ; 2 bytes @ 0x3E
  1130  005E                     	ds	1
  1131  005F                     ?___fltol:
  1132  005F                     fround@prec:	
  1133                           ; 4 bytes @ 0x3F
  1134                           
  1135  005F                     ___fltol@f1:	
  1136                           ; 1 bytes @ 0x3F
  1137                           
  1138                           
  1139                           ; 4 bytes @ 0x3F
  1140  005F                     	ds	1
  1141  0060                     ?___fladd:
  1142  0060                     ___fladd@b:	
  1143                           ; 4 bytes @ 0x40
  1144                           
  1145  0060                     ___fldiv@grs:	
  1146                           ; 4 bytes @ 0x40
  1147                           
  1148                           
  1149                           ; 4 bytes @ 0x40
  1150  0060                     	ds	3
  1151  0063                     ??___fltol:
  1152                           
  1153                           ; 1 bytes @ 0x43
  1154  0063                     	ds	1
  1155  0064                     ___fldiv@bexp:
  1156  0064                     ___fladd@a:	
  1157                           ; 1 bytes @ 0x44
  1158                           
  1159                           
  1160                           ; 4 bytes @ 0x44
  1161  0064                     	ds	1
  1162  0065                     ___fldiv@aexp:
  1163                           
  1164                           ; 1 bytes @ 0x45
  1165  0065                     	ds	3
  1166  0068                     ??___fladd:
  1167  0068                     ___fltol@sign1:	
  1168                           ; 1 bytes @ 0x48
  1169                           
  1170                           
  1171                           ; 1 bytes @ 0x48
  1172  0068                     	ds	1
  1173  0069                     ___fltol@exp1:
  1174                           
  1175                           ; 1 bytes @ 0x49
  1176  0069                     	ds	7
  1177                           
  1178                           	psect	maintext
  1179  004F                     __pmaintext:	
  1180 ;;
  1181 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1182 ;;
  1183 ;; *************** function _main *****************
  1184 ;; Defined at:
  1185 ;;		line 30 in file "Main.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : B00/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1199 ;;      Params:         0       0       0       0       0
  1200 ;;      Locals:         0       0       0       0       0
  1201 ;;      Temps:          0       0       4       0       0
  1202 ;;      Totals:         0       0       4       0       0
  1203 ;;Total ram usage:        4 bytes
  1204 ;; Hardware stack levels required when called:    5
  1205 ;; This function calls:
  1206 ;;		_Contador
  1207 ;;		_Lcd_Clear
  1208 ;;		_Lcd_Init
  1209 ;;		_Lcd_Set_Cursor
  1210 ;;		_Lcd_Write_String
  1211 ;;		___xxtofl
  1212 ;;		_conversion
  1213 ;;		_setup
  1214 ;;		_spiRead
  1215 ;;		_spiWrite
  1216 ;;		_temperaturac
  1217 ;; This function is called by:
  1218 ;;		Startup code after reset
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           
  1223                           ;psect for function _main
  1224  004F                     _main:
  1225  004F                     l3568:	
  1226                           ;incstack = 0
  1227                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1228                           
  1229                           
  1230                           ;Main.c: 32:     setup();
  1231  004F  160A  158A  2127  120A  118A  	fcall	_setup
  1232                           
  1233                           ;Main.c: 33:     Lcd_Init();
  1234  0054  160A  158A  21DB  120A  118A  	fcall	_Lcd_Init
  1235                           
  1236                           ;Main.c: 34:     Lcd_Set_Cursor(1,1);
  1237  0059  01F3               	clrf	Lcd_Set_Cursor@b
  1238  005A  0AF3               	incf	Lcd_Set_Cursor@b,f
  1239  005B  3001               	movlw	1
  1240  005C  160A  158A  2145  120A  118A  	fcall	_Lcd_Set_Cursor
  1241  0061                     l3570:
  1242                           
  1243                           ;Main.c: 35:     Lcd_Write_String("DIGITAL 2");
  1244  0061  309E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1245  0062  00F2               	movwf	Lcd_Write_String@a
  1246  0063  3080               	movlw	128
  1247  0064  00F3               	movwf	Lcd_Write_String@a+1
  1248  0065  160A  158A  224B  120A  118A  	fcall	_Lcd_Write_String
  1249  006A                     l3572:
  1250                           
  1251                           ;Main.c: 36:     Lcd_Set_Cursor(2,1);
  1252  006A  01F3               	clrf	Lcd_Set_Cursor@b
  1253  006B  0AF3               	incf	Lcd_Set_Cursor@b,f
  1254  006C  3002               	movlw	2
  1255  006D  160A  158A  2145  120A  118A  	fcall	_Lcd_Set_Cursor
  1256                           
  1257                           ;Main.c: 37:     Lcd_Write_String("RAUL AGUILAR");
  1258  0072  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1259  0073  00F2               	movwf	Lcd_Write_String@a
  1260  0074  3080               	movlw	128
  1261  0075  00F3               	movwf	Lcd_Write_String@a+1
  1262  0076  160A  158A  224B  120A  118A  	fcall	_Lcd_Write_String
  1263  007B                     l3574:
  1264                           
  1265                           ;Main.c: 38:     _delay((unsigned long)((100)*(9000000/4000.0)));
  1266  007B  3002               	movlw	2
  1267  007C  1683               	bsf	3,5	;RP0=1, select bank1
  1268  007D  1303               	bcf	3,6	;RP1=0, select bank1
  1269  007E  00D6               	movwf	(??_main^(0+128)+2)
  1270  007F  3025               	movlw	37
  1271  0080  00D5               	movwf	(??_main^(0+128)+1)
  1272  0081  3031               	movlw	49
  1273  0082  00D4               	movwf	??_main^(0+128)
  1274  0083                     u5897:
  1275  0083  0BD4               	decfsz	??_main^(0+128),f
  1276  0084  2883               	goto	u5897
  1277  0085  0BD5               	decfsz	(??_main^(0+128)+1),f
  1278  0086  2883               	goto	u5897
  1279  0087  0BD6               	decfsz	(??_main^(0+128)+2),f
  1280  0088  2883               	goto	u5897
  1281  0089                     l3576:
  1282                           
  1283                           ;Main.c: 39:     Lcd_Clear();
  1284  0089  160A  158A  20E1  120A  118A  	fcall	_Lcd_Clear
  1285  008E                     l3578:
  1286                           
  1287                           ;Main.c: 41:      Lcd_Set_Cursor(1,1);
  1288  008E  01F3               	clrf	Lcd_Set_Cursor@b
  1289  008F  0AF3               	incf	Lcd_Set_Cursor@b,f
  1290  0090  3001               	movlw	1
  1291  0091  160A  158A  2145  120A  118A  	fcall	_Lcd_Set_Cursor
  1292  0096                     l3580:
  1293                           
  1294                           ;Main.c: 42:      Lcd_Write_String("Cont");
  1295  0096  30BC               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1296  0097  00F2               	movwf	Lcd_Write_String@a
  1297  0098  3080               	movlw	128
  1298  0099  00F3               	movwf	Lcd_Write_String@a+1
  1299  009A  160A  158A  224B  120A  118A  	fcall	_Lcd_Write_String
  1300  009F                     l3582:
  1301                           
  1302                           ;Main.c: 43:      Lcd_Set_Cursor(1,8);
  1303  009F  3008               	movlw	8
  1304  00A0  1683               	bsf	3,5	;RP0=1, select bank1
  1305  00A1  1303               	bcf	3,6	;RP1=0, select bank1
  1306  00A2  00D4               	movwf	??_main^(0+128)
  1307  00A3  0854               	movf	??_main^(0+128),w
  1308  00A4  00F3               	movwf	Lcd_Set_Cursor@b
  1309  00A5  3001               	movlw	1
  1310  00A6  160A  158A  2145  120A  118A  	fcall	_Lcd_Set_Cursor
  1311  00AB                     l3584:
  1312                           
  1313                           ;Main.c: 44:      Lcd_Write_String("ADC");
  1314  00AB  30C1               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1315  00AC  00F2               	movwf	Lcd_Write_String@a
  1316  00AD  3080               	movlw	128
  1317  00AE  00F3               	movwf	Lcd_Write_String@a+1
  1318  00AF  160A  158A  224B  120A  118A  	fcall	_Lcd_Write_String
  1319  00B4                     l3586:
  1320                           
  1321                           ;Main.c: 45:       Lcd_Set_Cursor(1,14);
  1322  00B4  300E               	movlw	14
  1323  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  1324  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  1325  00B7  00D4               	movwf	??_main^(0+128)
  1326  00B8  0854               	movf	??_main^(0+128),w
  1327  00B9  00F3               	movwf	Lcd_Set_Cursor@b
  1328  00BA  3001               	movlw	1
  1329  00BB  160A  158A  2145  120A  118A  	fcall	_Lcd_Set_Cursor
  1330  00C0                     l3588:
  1331                           
  1332                           ;Main.c: 46:      Lcd_Write_String("Temp");
  1333  00C0  30B7               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1334  00C1  00F2               	movwf	Lcd_Write_String@a
  1335  00C2  3080               	movlw	128
  1336  00C3  00F3               	movwf	Lcd_Write_String@a+1
  1337  00C4  160A  158A  224B  120A  118A  	fcall	_Lcd_Write_String
  1338  00C9                     l3590:
  1339                           
  1340                           ;Main.c: 51:         PORTCbits.RC2 = 0;
  1341  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1342  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1343  00CB  1107               	bcf	7,2	;volatile
  1344                           
  1345                           ;Main.c: 52:        _delay((unsigned long)((5)*(9000000/4000.0)));
  1346  00CC  300F               	movlw	15
  1347  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  1348  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  1349  00CF  00D5               	movwf	(??_main^(0+128)+1)
  1350  00D0  309A               	movlw	154
  1351  00D1  00D4               	movwf	??_main^(0+128)
  1352  00D2                     u5907:
  1353  00D2  0BD4               	decfsz	??_main^(0+128),f
  1354  00D3  28D2               	goto	u5907
  1355  00D4  0BD5               	decfsz	(??_main^(0+128)+1),f
  1356  00D5  28D2               	goto	u5907
  1357  00D6  0000               	nop
  1358  00D7                     l3592:
  1359                           
  1360                           ;Main.c: 53:        spiWrite(PORTB);
  1361  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1362  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1363  00D9  0806               	movf	6,w	;volatile
  1364  00DA  160A  158A  20C0  120A  118A  	fcall	_spiWrite
  1365  00DF                     l3594:
  1366                           
  1367                           ;Main.c: 54:        contm = spiRead();
  1368  00DF  160A  158A  20CD  120A  118A  	fcall	_spiRead
  1369  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  1370  00E5  1303               	bcf	3,6	;RP1=0, select bank1
  1371  00E6  00D4               	movwf	??_main^(0+128)
  1372  00E7  01D5               	clrf	(??_main^(0+128)+1)
  1373  00E8  01D6               	clrf	(??_main^(0+128)+2)
  1374  00E9  01D7               	clrf	(??_main^(0+128)+3)
  1375  00EA  0857               	movf	(??_main+3)^(0+128),w
  1376  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1377  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1378  00ED  00A7               	movwf	___xxtofl@val+3
  1379  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  1380  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  1381  00F0  0856               	movf	(??_main+2)^(0+128),w
  1382  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1383  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1384  00F3  00A6               	movwf	___xxtofl@val+2
  1385  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  1386  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  1387  00F6  0855               	movf	(??_main+1)^(0+128),w
  1388  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1389  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1390  00F9  00A5               	movwf	___xxtofl@val+1
  1391  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  1392  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  1393  00FC  0854               	movf	??_main^(0+128),w
  1394  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1395  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1396  00FF  00A4               	movwf	___xxtofl@val
  1397  0100  3000               	movlw	0
  1398  0101  160A  158A  25C9  120A  118A  	fcall	___xxtofl
  1399  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1400  0107  1303               	bcf	3,6	;RP1=0, select bank0
  1401  0108  0827               	movf	?___xxtofl+3,w
  1402  0109  1683               	bsf	3,5	;RP0=1, select bank1
  1403  010A  1303               	bcf	3,6	;RP1=0, select bank1
  1404  010B  00DB               	movwf	(_contm+3)^(0+128)
  1405  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1406  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1407  010E  0826               	movf	?___xxtofl+2,w
  1408  010F  1683               	bsf	3,5	;RP0=1, select bank1
  1409  0110  1303               	bcf	3,6	;RP1=0, select bank1
  1410  0111  00DA               	movwf	(_contm+2)^(0+128)
  1411  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1412  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1413  0114  0825               	movf	?___xxtofl+1,w
  1414  0115  1683               	bsf	3,5	;RP0=1, select bank1
  1415  0116  1303               	bcf	3,6	;RP1=0, select bank1
  1416  0117  00D9               	movwf	(_contm+1)^(0+128)
  1417  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1419  011A  0824               	movf	?___xxtofl,w
  1420  011B  1683               	bsf	3,5	;RP0=1, select bank1
  1421  011C  1303               	bcf	3,6	;RP1=0, select bank1
  1422  011D  00D8               	movwf	_contm^(0+128)
  1423  011E                     l3596:
  1424                           
  1425                           ;Main.c: 55:        Contador();
  1426  011E  160A  158A  218E  120A  118A  	fcall	_Contador
  1427  0123                     l3598:
  1428                           
  1429                           ;Main.c: 56:        _delay((unsigned long)((5)*(9000000/4000.0)));
  1430  0123  300F               	movlw	15
  1431  0124  1683               	bsf	3,5	;RP0=1, select bank1
  1432  0125  1303               	bcf	3,6	;RP1=0, select bank1
  1433  0126  00D5               	movwf	(??_main^(0+128)+1)
  1434  0127  309A               	movlw	154
  1435  0128  00D4               	movwf	??_main^(0+128)
  1436  0129                     u5917:
  1437  0129  0BD4               	decfsz	??_main^(0+128),f
  1438  012A  2929               	goto	u5917
  1439  012B  0BD5               	decfsz	(??_main^(0+128)+1),f
  1440  012C  2929               	goto	u5917
  1441  012D  0000               	nop
  1442  012E                     l3600:
  1443                           
  1444                           ;Main.c: 57:        PORTCbits.RC2 = 1;
  1445  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1446  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1447  0130  1507               	bsf	7,2	;volatile
  1448  0131                     l3602:
  1449                           
  1450                           ;Main.c: 59:        PORTCbits.RC1 = 0;
  1451  0131  1087               	bcf	7,1	;volatile
  1452  0132                     l3604:
  1453                           
  1454                           ;Main.c: 60:         _delay((unsigned long)((5)*(9000000/4000.0)));
  1455  0132  300F               	movlw	15
  1456  0133  1683               	bsf	3,5	;RP0=1, select bank1
  1457  0134  1303               	bcf	3,6	;RP1=0, select bank1
  1458  0135  00D5               	movwf	(??_main^(0+128)+1)
  1459  0136  309A               	movlw	154
  1460  0137  00D4               	movwf	??_main^(0+128)
  1461  0138                     u5927:
  1462  0138  0BD4               	decfsz	??_main^(0+128),f
  1463  0139  2938               	goto	u5927
  1464  013A  0BD5               	decfsz	(??_main^(0+128)+1),f
  1465  013B  2938               	goto	u5927
  1466  013C  0000               	nop
  1467  013D                     l3606:
  1468                           
  1469                           ;Main.c: 61:         spiWrite(PORTB);
  1470  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1471  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1472  013F  0806               	movf	6,w	;volatile
  1473  0140  160A  158A  20C0  120A  118A  	fcall	_spiWrite
  1474  0145                     l3608:
  1475                           
  1476                           ;Main.c: 62:         c = spiRead();
  1477  0145  160A  158A  20CD  120A  118A  	fcall	_spiRead
  1478  014A  1683               	bsf	3,5	;RP0=1, select bank1
  1479  014B  1303               	bcf	3,6	;RP1=0, select bank1
  1480  014C  00D4               	movwf	??_main^(0+128)
  1481  014D  01D5               	clrf	(??_main^(0+128)+1)
  1482  014E  0854               	movf	??_main^(0+128),w
  1483  014F  00E6               	movwf	_c^(0+128)
  1484  0150  0855               	movf	(??_main+1)^(0+128),w
  1485  0151  00E7               	movwf	(_c+1)^(0+128)
  1486  0152                     l3610:
  1487                           
  1488                           ;Main.c: 63:         conversion();
  1489  0152  160A  158A  243E  120A  118A  	fcall	_conversion
  1490                           
  1491                           ;Main.c: 64:         _delay((unsigned long)((5)*(9000000/4000.0)));
  1492  0157  300F               	movlw	15
  1493  0158  1683               	bsf	3,5	;RP0=1, select bank1
  1494  0159  1303               	bcf	3,6	;RP1=0, select bank1
  1495  015A  00D5               	movwf	(??_main^(0+128)+1)
  1496  015B  309A               	movlw	154
  1497  015C  00D4               	movwf	??_main^(0+128)
  1498  015D                     u5937:
  1499  015D  0BD4               	decfsz	??_main^(0+128),f
  1500  015E  295D               	goto	u5937
  1501  015F  0BD5               	decfsz	(??_main^(0+128)+1),f
  1502  0160  295D               	goto	u5937
  1503  0161  0000               	nop
  1504  0162                     l3612:
  1505                           
  1506                           ;Main.c: 65:       PORTCbits.RC1 = 1;
  1507  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0164  1487               	bsf	7,1	;volatile
  1510  0165                     l3614:
  1511                           
  1512                           ;Main.c: 67:       PORTCbits.RC0 = 0;
  1513  0165  1007               	bcf	7,0	;volatile
  1514                           
  1515                           ;Main.c: 68:         _delay((unsigned long)((5)*(9000000/4000.0)));
  1516  0166  300F               	movlw	15
  1517  0167  1683               	bsf	3,5	;RP0=1, select bank1
  1518  0168  1303               	bcf	3,6	;RP1=0, select bank1
  1519  0169  00D5               	movwf	(??_main^(0+128)+1)
  1520  016A  309A               	movlw	154
  1521  016B  00D4               	movwf	??_main^(0+128)
  1522  016C                     u5947:
  1523  016C  0BD4               	decfsz	??_main^(0+128),f
  1524  016D  296C               	goto	u5947
  1525  016E  0BD5               	decfsz	(??_main^(0+128)+1),f
  1526  016F  296C               	goto	u5947
  1527  0170  0000               	nop
  1528  0171                     l3616:
  1529                           
  1530                           ;Main.c: 69:         spiWrite(PORTB);
  1531  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1533  0173  0806               	movf	6,w	;volatile
  1534  0174  160A  158A  20C0  120A  118A  	fcall	_spiWrite
  1535  0179                     l3618:
  1536                           
  1537                           ;Main.c: 70:         cc = spiRead();
  1538  0179  160A  158A  20CD  120A  118A  	fcall	_spiRead
  1539  017E  1683               	bsf	3,5	;RP0=1, select bank1
  1540  017F  1303               	bcf	3,6	;RP1=0, select bank1
  1541  0180  00D4               	movwf	??_main^(0+128)
  1542  0181  01D5               	clrf	(??_main^(0+128)+1)
  1543  0182  0854               	movf	??_main^(0+128),w
  1544  0183  00E4               	movwf	_cc^(0+128)
  1545  0184  0855               	movf	(??_main+1)^(0+128),w
  1546  0185  00E5               	movwf	(_cc+1)^(0+128)
  1547  0186                     l3620:
  1548                           
  1549                           ;Main.c: 71:         temperaturac();
  1550  0186  160A  118A  2012  120A  118A  	fcall	_temperaturac
  1551  018B                     l3622:
  1552                           
  1553                           ;Main.c: 72:         _delay((unsigned long)((5)*(9000000/4000.0)));
  1554  018B  300F               	movlw	15
  1555  018C  1683               	bsf	3,5	;RP0=1, select bank1
  1556  018D  1303               	bcf	3,6	;RP1=0, select bank1
  1557  018E  00D5               	movwf	(??_main^(0+128)+1)
  1558  018F  309A               	movlw	154
  1559  0190  00D4               	movwf	??_main^(0+128)
  1560  0191                     u5957:
  1561  0191  0BD4               	decfsz	??_main^(0+128),f
  1562  0192  2991               	goto	u5957
  1563  0193  0BD5               	decfsz	(??_main^(0+128)+1),f
  1564  0194  2991               	goto	u5957
  1565  0195  0000               	nop
  1566  0196                     l3624:
  1567                           
  1568                           ;Main.c: 73:       PORTCbits.RC0 = 1;
  1569  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1570  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1571  0198  1407               	bsf	7,0	;volatile
  1572  0199  28C9               	goto	l3590
  1573  019A  120A  118A  2800   	ljmp	start
  1574  019D                     __end_of_main:
  1575                           
  1576                           	psect	text1
  1577  1012                     __ptext1:	
  1578 ;; *************** function _temperaturac *****************
  1579 ;; Defined at:
  1580 ;;		line 158 in file "Main.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1594 ;;      Params:         0       0       0       0       0
  1595 ;;      Locals:         0       0       4       0       0
  1596 ;;      Temps:          0       0       1       0       0
  1597 ;;      Totals:         0       0       5       0       0
  1598 ;;Total ram usage:        5 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    4
  1601 ;; This function calls:
  1602 ;;		_Lcd_Set_Cursor
  1603 ;;		_Lcd_Write_String
  1604 ;;		___fldiv
  1605 ;;		___flmul
  1606 ;;		___xxtofl
  1607 ;;		_sprintf
  1608 ;; This function is called by:
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           
  1614                           ;psect for function _temperaturac
  1615  1012                     _temperaturac:
  1616  1012                     l3560:	
  1617                           ;incstack = 0
  1618                           ; Regs used in _temperaturac: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1619                           
  1620                           
  1621                           ;Main.c: 159:         tempt = (cc*5.0/255)*100;
  1622  1012  3043               	movlw	67
  1623  1013  1283               	bcf	3,5	;RP0=0, select bank0
  1624  1014  1303               	bcf	3,6	;RP1=0, select bank0
  1625  1015  00CF               	movwf	___fldiv@a+3
  1626  1016  307F               	movlw	127
  1627  1017  00CE               	movwf	___fldiv@a+2
  1628  1018  3000               	movlw	0
  1629  1019  00CD               	movwf	___fldiv@a+1
  1630  101A  3000               	movlw	0
  1631  101B  00CC               	movwf	___fldiv@a
  1632  101C  3040               	movlw	64
  1633  101D  00B5               	movwf	___flmul@b+3
  1634  101E  30A0               	movlw	160
  1635  101F  00B4               	movwf	___flmul@b+2
  1636  1020  3000               	movlw	0
  1637  1021  00B3               	movwf	___flmul@b+1
  1638  1022  3000               	movlw	0
  1639  1023  00B2               	movwf	___flmul@b
  1640  1024  1683               	bsf	3,5	;RP0=1, select bank1
  1641  1025  1303               	bcf	3,6	;RP1=0, select bank1
  1642  1026  0864               	movf	_cc^(0+128),w
  1643  1027  1283               	bcf	3,5	;RP0=0, select bank0
  1644  1028  1303               	bcf	3,6	;RP1=0, select bank0
  1645  1029  00A4               	movwf	___xxtofl@val
  1646  102A  1683               	bsf	3,5	;RP0=1, select bank1
  1647  102B  1303               	bcf	3,6	;RP1=0, select bank1
  1648  102C  0865               	movf	(_cc+1)^(0+128),w
  1649  102D  1283               	bcf	3,5	;RP0=0, select bank0
  1650  102E  1303               	bcf	3,6	;RP1=0, select bank0
  1651  102F  00A5               	movwf	___xxtofl@val+1
  1652  1030  3000               	movlw	0
  1653  1031  1BA5               	btfsc	___xxtofl@val+1,7
  1654  1032  30FF               	movlw	255
  1655  1033  00A6               	movwf	___xxtofl@val+2
  1656  1034  00A7               	movwf	___xxtofl@val+3
  1657  1035  3001               	movlw	1
  1658  1036  160A  158A  25C9  160A  118A  	fcall	___xxtofl
  1659  103B  1283               	bcf	3,5	;RP0=0, select bank0
  1660  103C  1303               	bcf	3,6	;RP1=0, select bank0
  1661  103D  0827               	movf	?___xxtofl+3,w
  1662  103E  00B9               	movwf	___flmul@a+3
  1663  103F  0826               	movf	?___xxtofl+2,w
  1664  1040  00B8               	movwf	___flmul@a+2
  1665  1041  0825               	movf	?___xxtofl+1,w
  1666  1042  00B7               	movwf	___flmul@a+1
  1667  1043  0824               	movf	?___xxtofl,w
  1668  1044  00B6               	movwf	___flmul@a
  1669  1045  120A  158A  249F  160A  118A  	fcall	___flmul
  1670  104A  1283               	bcf	3,5	;RP0=0, select bank0
  1671  104B  1303               	bcf	3,6	;RP1=0, select bank0
  1672  104C  0835               	movf	?___flmul+3,w
  1673  104D  00D3               	movwf	___fldiv@b+3
  1674  104E  0834               	movf	?___flmul+2,w
  1675  104F  00D2               	movwf	___fldiv@b+2
  1676  1050  0833               	movf	?___flmul+1,w
  1677  1051  00D1               	movwf	___fldiv@b+1
  1678  1052  0832               	movf	?___flmul,w
  1679  1053  00D0               	movwf	___fldiv@b
  1680  1054  160A  118A  20D8  160A  118A  	fcall	___fldiv
  1681  1059  1283               	bcf	3,5	;RP0=0, select bank0
  1682  105A  1303               	bcf	3,6	;RP1=0, select bank0
  1683  105B  084F               	movf	?___fldiv+3,w
  1684  105C  1683               	bsf	3,5	;RP0=1, select bank1
  1685  105D  1303               	bcf	3,6	;RP1=0, select bank1
  1686  105E  00D3               	movwf	(_temperaturac$1004+3)^(0+128)
  1687  105F  1283               	bcf	3,5	;RP0=0, select bank0
  1688  1060  1303               	bcf	3,6	;RP1=0, select bank0
  1689  1061  084E               	movf	?___fldiv+2,w
  1690  1062  1683               	bsf	3,5	;RP0=1, select bank1
  1691  1063  1303               	bcf	3,6	;RP1=0, select bank1
  1692  1064  00D2               	movwf	(_temperaturac$1004+2)^(0+128)
  1693  1065  1283               	bcf	3,5	;RP0=0, select bank0
  1694  1066  1303               	bcf	3,6	;RP1=0, select bank0
  1695  1067  084D               	movf	?___fldiv+1,w
  1696  1068  1683               	bsf	3,5	;RP0=1, select bank1
  1697  1069  1303               	bcf	3,6	;RP1=0, select bank1
  1698  106A  00D1               	movwf	(_temperaturac$1004+1)^(0+128)
  1699  106B  1283               	bcf	3,5	;RP0=0, select bank0
  1700  106C  1303               	bcf	3,6	;RP1=0, select bank0
  1701  106D  084C               	movf	?___fldiv,w
  1702  106E  1683               	bsf	3,5	;RP0=1, select bank1
  1703  106F  1303               	bcf	3,6	;RP1=0, select bank1
  1704  1070  00D0               	movwf	_temperaturac$1004^(0+128)
  1705                           
  1706                           ;Main.c: 159:         tempt = (cc*5.0/255)*100;
  1707  1071  3042               	movlw	66
  1708  1072  1283               	bcf	3,5	;RP0=0, select bank0
  1709  1073  1303               	bcf	3,6	;RP1=0, select bank0
  1710  1074  00B5               	movwf	___flmul@b+3
  1711  1075  30C8               	movlw	200
  1712  1076  00B4               	movwf	___flmul@b+2
  1713  1077  3000               	movlw	0
  1714  1078  00B3               	movwf	___flmul@b+1
  1715  1079  3000               	movlw	0
  1716  107A  00B2               	movwf	___flmul@b
  1717  107B  1683               	bsf	3,5	;RP0=1, select bank1
  1718  107C  1303               	bcf	3,6	;RP1=0, select bank1
  1719  107D  0853               	movf	(_temperaturac$1004+3)^(0+128),w
  1720  107E  1283               	bcf	3,5	;RP0=0, select bank0
  1721  107F  1303               	bcf	3,6	;RP1=0, select bank0
  1722  1080  00B9               	movwf	___flmul@a+3
  1723  1081  1683               	bsf	3,5	;RP0=1, select bank1
  1724  1082  1303               	bcf	3,6	;RP1=0, select bank1
  1725  1083  0852               	movf	(_temperaturac$1004+2)^(0+128),w
  1726  1084  1283               	bcf	3,5	;RP0=0, select bank0
  1727  1085  1303               	bcf	3,6	;RP1=0, select bank0
  1728  1086  00B8               	movwf	___flmul@a+2
  1729  1087  1683               	bsf	3,5	;RP0=1, select bank1
  1730  1088  1303               	bcf	3,6	;RP1=0, select bank1
  1731  1089  0851               	movf	(_temperaturac$1004+1)^(0+128),w
  1732  108A  1283               	bcf	3,5	;RP0=0, select bank0
  1733  108B  1303               	bcf	3,6	;RP1=0, select bank0
  1734  108C  00B7               	movwf	___flmul@a+1
  1735  108D  1683               	bsf	3,5	;RP0=1, select bank1
  1736  108E  1303               	bcf	3,6	;RP1=0, select bank1
  1737  108F  0850               	movf	_temperaturac$1004^(0+128),w
  1738  1090  1283               	bcf	3,5	;RP0=0, select bank0
  1739  1091  1303               	bcf	3,6	;RP1=0, select bank0
  1740  1092  00B6               	movwf	___flmul@a
  1741  1093  120A  158A  249F  160A  118A  	fcall	___flmul
  1742  1098  1283               	bcf	3,5	;RP0=0, select bank0
  1743  1099  1303               	bcf	3,6	;RP1=0, select bank0
  1744  109A  0835               	movf	?___flmul+3,w
  1745  109B  1683               	bsf	3,5	;RP0=1, select bank1
  1746  109C  1303               	bcf	3,6	;RP1=0, select bank1
  1747  109D  00E3               	movwf	(_tempt+3)^(0+128)
  1748  109E  1283               	bcf	3,5	;RP0=0, select bank0
  1749  109F  1303               	bcf	3,6	;RP1=0, select bank0
  1750  10A0  0834               	movf	?___flmul+2,w
  1751  10A1  1683               	bsf	3,5	;RP0=1, select bank1
  1752  10A2  1303               	bcf	3,6	;RP1=0, select bank1
  1753  10A3  00E2               	movwf	(_tempt+2)^(0+128)
  1754  10A4  1283               	bcf	3,5	;RP0=0, select bank0
  1755  10A5  1303               	bcf	3,6	;RP1=0, select bank0
  1756  10A6  0833               	movf	?___flmul+1,w
  1757  10A7  1683               	bsf	3,5	;RP0=1, select bank1
  1758  10A8  1303               	bcf	3,6	;RP1=0, select bank1
  1759  10A9  00E1               	movwf	(_tempt+1)^(0+128)
  1760  10AA  1283               	bcf	3,5	;RP0=0, select bank0
  1761  10AB  1303               	bcf	3,6	;RP1=0, select bank0
  1762  10AC  0832               	movf	?___flmul,w
  1763  10AD  1683               	bsf	3,5	;RP0=1, select bank1
  1764  10AE  1303               	bcf	3,6	;RP1=0, select bank1
  1765  10AF  00E0               	movwf	_tempt^(0+128)
  1766  10B0                     l3562:
  1767                           
  1768                           ;Main.c: 160:         sprintf(buffer3, "%.1f", tempt);
  1769  10B0  30A8               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1770  10B1  00CF               	movwf	??_temperaturac^(0+128)
  1771  10B2  084F               	movf	??_temperaturac^(0+128),w
  1772  10B3  00AC               	movwf	sprintf@f^(0+128)
  1773  10B4  0863               	movf	(_tempt+3)^(0+128),w
  1774  10B5  00B0               	movwf	((?_sprintf+3)^(0+128)+1)
  1775  10B6  0862               	movf	(_tempt+2)^(0+128),w
  1776  10B7  00AF               	movwf	((?_sprintf+2)^(0+128)+1)
  1777  10B8  0861               	movf	(_tempt+1)^(0+128),w
  1778  10B9  00AE               	movwf	((?_sprintf+1)^(0+128)+1)
  1779  10BA  0860               	movf	_tempt^(0+128),w
  1780  10BB  00AD               	movwf	(?_sprintf^(0+128)+1)
  1781  10BC  30E8               	movlw	(low (_buffer3| 0))& (0+255)
  1782  10BD  120A  118A  219D  160A  118A  	fcall	_sprintf
  1783  10C2                     l3564:
  1784                           
  1785                           ;Main.c: 161:         Lcd_Set_Cursor(2,13);
  1786  10C2  300D               	movlw	13
  1787  10C3  1683               	bsf	3,5	;RP0=1, select bank1
  1788  10C4  1303               	bcf	3,6	;RP1=0, select bank1
  1789  10C5  00CF               	movwf	??_temperaturac^(0+128)
  1790  10C6  084F               	movf	??_temperaturac^(0+128),w
  1791  10C7  00F3               	movwf	Lcd_Set_Cursor@b
  1792  10C8  3002               	movlw	2
  1793  10C9  160A  158A  2145  160A  118A  	fcall	_Lcd_Set_Cursor
  1794  10CE                     l3566:
  1795                           
  1796                           ;Main.c: 162:         Lcd_Write_String(buffer3);
  1797  10CE  30E8               	movlw	(low (_buffer3| 0))& (0+255)
  1798  10CF  00F2               	movwf	Lcd_Write_String@a
  1799  10D0  3000               	movlw	0
  1800  10D1  00F3               	movwf	Lcd_Write_String@a+1
  1801  10D2  160A  158A  224B  160A  118A  	fcall	_Lcd_Write_String
  1802  10D7                     l138:
  1803  10D7  0008               	return
  1804  10D8                     __end_of_temperaturac:
  1805                           
  1806                           	psect	text2
  1807  10D8                     __ptext2:	
  1808 ;; *************** function ___fldiv *****************
  1809 ;; Defined at:
  1810 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  a               4   44[BANK0 ] void 
  1813 ;;  b               4   48[BANK0 ] void 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  grs             4   64[BANK0 ] unsigned long 
  1816 ;;  rem             4   57[BANK0 ] unsigned long 
  1817 ;;  new_exp         2   62[BANK0 ] int 
  1818 ;;  aexp            1   69[BANK0 ] unsigned char 
  1819 ;;  bexp            1   68[BANK0 ] unsigned char 
  1820 ;;  sign            1   61[BANK0 ] unsigned char 
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  4   44[BANK0 ] unsigned char 
  1823 ;; Registers used:
  1824 ;;		wreg, status,2, status,0, btemp+1
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1830 ;;      Params:         0       8       0       0       0
  1831 ;;      Locals:         0      13       0       0       0
  1832 ;;      Temps:          0       5       0       0       0
  1833 ;;      Totals:         0      26       0       0       0
  1834 ;;Total ram usage:       26 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; This function calls:
  1837 ;;		Nothing
  1838 ;; This function is called by:
  1839 ;;		_temperaturac
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           
  1844                           ;psect for function ___fldiv
  1845  10D8                     ___fldiv:
  1846  10D8                     l3364:	
  1847                           ;incstack = 0
  1848                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  1849                           
  1850  10D8  1283               	bcf	3,5	;RP0=0, select bank0
  1851  10D9  1303               	bcf	3,6	;RP1=0, select bank0
  1852  10DA  0853               	movf	___fldiv@b+3,w
  1853  10DB  3980               	andlw	128
  1854  10DC  00D4               	movwf	??___fldiv
  1855  10DD  0854               	movf	??___fldiv,w
  1856  10DE  00DD               	movwf	___fldiv@sign
  1857  10DF                     l3366:
  1858  10DF  0853               	movf	___fldiv@b+3,w
  1859  10E0  00D4               	movwf	??___fldiv
  1860  10E1  0754               	addwf	??___fldiv,w
  1861  10E2  00D5               	movwf	??___fldiv+1
  1862  10E3  0855               	movf	??___fldiv+1,w
  1863  10E4  00E4               	movwf	___fldiv@bexp
  1864  10E5                     l3368:
  1865  10E5  1FD2               	btfss	___fldiv@b+2,7
  1866  10E6  28E8               	goto	u5601
  1867  10E7  28E9               	goto	u5600
  1868  10E8                     u5601:
  1869  10E8  28EA               	goto	l3372
  1870  10E9                     u5600:
  1871  10E9                     l3370:
  1872  10E9  1464               	bsf	___fldiv@bexp,0
  1873  10EA                     l3372:
  1874  10EA  0864               	movf	___fldiv@bexp,w
  1875  10EB  1903               	btfsc	3,2
  1876  10EC  28EE               	goto	u5611
  1877  10ED  28EF               	goto	u5610
  1878  10EE                     u5611:
  1879  10EE  28FF               	goto	l3382
  1880  10EF                     u5610:
  1881  10EF                     l3374:
  1882  10EF  0A64               	incf	___fldiv@bexp,w
  1883  10F0  1D03               	btfss	3,2
  1884  10F1  28F3               	goto	u5621
  1885  10F2  28F4               	goto	u5620
  1886  10F3                     u5621:
  1887  10F3  28FC               	goto	l3378
  1888  10F4                     u5620:
  1889  10F4                     l3376:
  1890  10F4  3000               	movlw	0
  1891  10F5  00D3               	movwf	___fldiv@b+3
  1892  10F6  3000               	movlw	0
  1893  10F7  00D2               	movwf	___fldiv@b+2
  1894  10F8  3000               	movlw	0
  1895  10F9  00D1               	movwf	___fldiv@b+1
  1896  10FA  3000               	movlw	0
  1897  10FB  00D0               	movwf	___fldiv@b
  1898  10FC                     l3378:
  1899  10FC  17D2               	bsf	___fldiv@b+2,7
  1900  10FD                     l3380:
  1901  10FD  01D3               	clrf	___fldiv@b+3
  1902  10FE  2907               	goto	l3384
  1903  10FF                     l3382:
  1904  10FF  3000               	movlw	0
  1905  1100  00D3               	movwf	___fldiv@b+3
  1906  1101  3000               	movlw	0
  1907  1102  00D2               	movwf	___fldiv@b+2
  1908  1103  3000               	movlw	0
  1909  1104  00D1               	movwf	___fldiv@b+1
  1910  1105  3000               	movlw	0
  1911  1106  00D0               	movwf	___fldiv@b
  1912  1107                     l3384:
  1913  1107  084F               	movf	___fldiv@a+3,w
  1914  1108  3980               	andlw	128
  1915  1109  00D4               	movwf	??___fldiv
  1916  110A  0854               	movf	??___fldiv,w
  1917  110B  06DD               	xorwf	___fldiv@sign,f
  1918  110C                     l3386:
  1919  110C  084F               	movf	___fldiv@a+3,w
  1920  110D  00D4               	movwf	??___fldiv
  1921  110E  0754               	addwf	??___fldiv,w
  1922  110F  00D5               	movwf	??___fldiv+1
  1923  1110  0855               	movf	??___fldiv+1,w
  1924  1111  00E5               	movwf	___fldiv@aexp
  1925  1112                     l3388:
  1926  1112  1FCE               	btfss	___fldiv@a+2,7
  1927  1113  2915               	goto	u5631
  1928  1114  2916               	goto	u5630
  1929  1115                     u5631:
  1930  1115  2917               	goto	l3392
  1931  1116                     u5630:
  1932  1116                     l3390:
  1933  1116  1465               	bsf	___fldiv@aexp,0
  1934  1117                     l3392:
  1935  1117  0865               	movf	___fldiv@aexp,w
  1936  1118  1903               	btfsc	3,2
  1937  1119  291B               	goto	u5641
  1938  111A  291C               	goto	u5640
  1939  111B                     u5641:
  1940  111B  292C               	goto	l3402
  1941  111C                     u5640:
  1942  111C                     l3394:
  1943  111C  0A65               	incf	___fldiv@aexp,w
  1944  111D  1D03               	btfss	3,2
  1945  111E  2920               	goto	u5651
  1946  111F  2921               	goto	u5650
  1947  1120                     u5651:
  1948  1120  2929               	goto	l3398
  1949  1121                     u5650:
  1950  1121                     l3396:
  1951  1121  3000               	movlw	0
  1952  1122  00CF               	movwf	___fldiv@a+3
  1953  1123  3000               	movlw	0
  1954  1124  00CE               	movwf	___fldiv@a+2
  1955  1125  3000               	movlw	0
  1956  1126  00CD               	movwf	___fldiv@a+1
  1957  1127  3000               	movlw	0
  1958  1128  00CC               	movwf	___fldiv@a
  1959  1129                     l3398:
  1960  1129  17CE               	bsf	___fldiv@a+2,7
  1961  112A                     l3400:
  1962  112A  01CF               	clrf	___fldiv@a+3
  1963  112B  2934               	goto	l700
  1964  112C                     l3402:
  1965  112C  3000               	movlw	0
  1966  112D  00CF               	movwf	___fldiv@a+3
  1967  112E  3000               	movlw	0
  1968  112F  00CE               	movwf	___fldiv@a+2
  1969  1130  3000               	movlw	0
  1970  1131  00CD               	movwf	___fldiv@a+1
  1971  1132  3000               	movlw	0
  1972  1133  00CC               	movwf	___fldiv@a
  1973  1134                     l700:
  1974  1134  084F               	movf	___fldiv@a+3,w
  1975  1135  044E               	iorwf	___fldiv@a+2,w
  1976  1136  044D               	iorwf	___fldiv@a+1,w
  1977  1137  044C               	iorwf	___fldiv@a,w
  1978  1138  1D03               	skipz
  1979  1139  293B               	goto	u5661
  1980  113A  293C               	goto	u5660
  1981  113B                     u5661:
  1982  113B  2955               	goto	l3412
  1983  113C                     u5660:
  1984  113C                     l3404:
  1985  113C  3000               	movlw	0
  1986  113D  00D3               	movwf	___fldiv@b+3
  1987  113E  3000               	movlw	0
  1988  113F  00D2               	movwf	___fldiv@b+2
  1989  1140  3000               	movlw	0
  1990  1141  00D1               	movwf	___fldiv@b+1
  1991  1142  3000               	movlw	0
  1992  1143  00D0               	movwf	___fldiv@b
  1993  1144  3080               	movlw	128
  1994  1145  04D2               	iorwf	___fldiv@b+2,f
  1995  1146  307F               	movlw	127
  1996  1147  04D3               	iorwf	___fldiv@b+3,f
  1997  1148                     l3406:
  1998  1148  085D               	movf	___fldiv@sign,w
  1999  1149  00D4               	movwf	??___fldiv
  2000  114A  0854               	movf	??___fldiv,w
  2001  114B  04D3               	iorwf	___fldiv@b+3,f
  2002  114C                     l3408:
  2003  114C  0853               	movf	___fldiv@b+3,w
  2004  114D  00CF               	movwf	?___fldiv+3
  2005  114E  0852               	movf	___fldiv@b+2,w
  2006  114F  00CE               	movwf	?___fldiv+2
  2007  1150  0851               	movf	___fldiv@b+1,w
  2008  1151  00CD               	movwf	?___fldiv+1
  2009  1152  0850               	movf	___fldiv@b,w
  2010  1153  00CC               	movwf	?___fldiv
  2011  1154  2AB4               	goto	l702
  2012  1155                     l3412:
  2013  1155  0864               	movf	___fldiv@bexp,w
  2014  1156  1D03               	btfss	3,2
  2015  1157  2959               	goto	u5671
  2016  1158  295A               	goto	u5670
  2017  1159                     u5671:
  2018  1159  2963               	goto	l3418
  2019  115A                     u5670:
  2020  115A                     l3414:
  2021  115A  3000               	movlw	0
  2022  115B  00CF               	movwf	?___fldiv+3
  2023  115C  3000               	movlw	0
  2024  115D  00CE               	movwf	?___fldiv+2
  2025  115E  3000               	movlw	0
  2026  115F  00CD               	movwf	?___fldiv+1
  2027  1160  3000               	movlw	0
  2028  1161  00CC               	movwf	?___fldiv
  2029  1162  2AB4               	goto	l702
  2030  1163                     l3418:
  2031  1163  0864               	movf	___fldiv@bexp,w
  2032  1164  00D4               	movwf	??___fldiv
  2033  1165  01D5               	clrf	??___fldiv+1
  2034  1166  0855               	movf	??___fldiv+1,w
  2035  1167  00D7               	movwf	??___fldiv+3
  2036  1168  0865               	movf	___fldiv@aexp,w
  2037  1169  0254               	subwf	??___fldiv,w
  2038  116A  00D6               	movwf	??___fldiv+2
  2039  116B  1C03               	skipc
  2040  116C  03D7               	decf	??___fldiv+3,f
  2041  116D  0856               	movf	??___fldiv+2,w
  2042  116E  3E7F               	addlw	127
  2043  116F  00DE               	movwf	___fldiv@new_exp
  2044  1170  0857               	movf	??___fldiv+3,w
  2045  1171  1803               	skipnc
  2046  1172  3E01               	addlw	1
  2047  1173  3E00               	addlw	0
  2048  1174  00DF               	movwf	___fldiv@new_exp+1
  2049  1175                     l3420:
  2050  1175  0853               	movf	___fldiv@b+3,w
  2051  1176  00DC               	movwf	___fldiv@rem+3
  2052  1177  0852               	movf	___fldiv@b+2,w
  2053  1178  00DB               	movwf	___fldiv@rem+2
  2054  1179  0851               	movf	___fldiv@b+1,w
  2055  117A  00DA               	movwf	___fldiv@rem+1
  2056  117B  0850               	movf	___fldiv@b,w
  2057  117C  00D9               	movwf	___fldiv@rem
  2058  117D                     l3422:
  2059  117D  3000               	movlw	0
  2060  117E  00D3               	movwf	___fldiv@b+3
  2061  117F  3000               	movlw	0
  2062  1180  00D2               	movwf	___fldiv@b+2
  2063  1181  3000               	movlw	0
  2064  1182  00D1               	movwf	___fldiv@b+1
  2065  1183  3000               	movlw	0
  2066  1184  00D0               	movwf	___fldiv@b
  2067  1185                     l3424:
  2068  1185  3000               	movlw	0
  2069  1186  00E3               	movwf	___fldiv@grs+3
  2070  1187  3000               	movlw	0
  2071  1188  00E2               	movwf	___fldiv@grs+2
  2072  1189  3000               	movlw	0
  2073  118A  00E1               	movwf	___fldiv@grs+1
  2074  118B  3000               	movlw	0
  2075  118C  00E0               	movwf	___fldiv@grs
  2076  118D                     l3426:
  2077  118D  01E5               	clrf	___fldiv@aexp
  2078  118E  29D9               	goto	l3446
  2079  118F                     l3428:
  2080  118F  0865               	movf	___fldiv@aexp,w
  2081  1190  1903               	btfsc	3,2
  2082  1191  2993               	goto	u5681
  2083  1192  2994               	goto	u5680
  2084  1193                     u5681:
  2085  1193  29B4               	goto	l3438
  2086  1194                     u5680:
  2087  1194                     l3430:
  2088  1194  3001               	movlw	1
  2089  1195  00D4               	movwf	??___fldiv
  2090  1196                     u5695:
  2091  1196  1003               	clrc
  2092  1197  0DD9               	rlf	___fldiv@rem,f
  2093  1198  0DDA               	rlf	___fldiv@rem+1,f
  2094  1199  0DDB               	rlf	___fldiv@rem+2,f
  2095  119A  0DDC               	rlf	___fldiv@rem+3,f
  2096  119B  0BD4               	decfsz	??___fldiv,f
  2097  119C  2996               	goto	u5695
  2098  119D  3001               	movlw	1
  2099  119E  00D4               	movwf	??___fldiv
  2100  119F                     u5705:
  2101  119F  1003               	clrc
  2102  11A0  0DD0               	rlf	___fldiv@b,f
  2103  11A1  0DD1               	rlf	___fldiv@b+1,f
  2104  11A2  0DD2               	rlf	___fldiv@b+2,f
  2105  11A3  0DD3               	rlf	___fldiv@b+3,f
  2106  11A4  0BD4               	decfsz	??___fldiv,f
  2107  11A5  299F               	goto	u5705
  2108  11A6                     l3432:
  2109  11A6  1FE3               	btfss	___fldiv@grs+3,7
  2110  11A7  29A9               	goto	u5711
  2111  11A8  29AA               	goto	u5710
  2112  11A9                     u5711:
  2113  11A9  29AB               	goto	l3436
  2114  11AA                     u5710:
  2115  11AA                     l3434:
  2116  11AA  1450               	bsf	___fldiv@b,0
  2117  11AB                     l3436:
  2118  11AB  3001               	movlw	1
  2119  11AC  00D4               	movwf	??___fldiv
  2120  11AD                     u5725:
  2121  11AD  1003               	clrc
  2122  11AE  0DE0               	rlf	___fldiv@grs,f
  2123  11AF  0DE1               	rlf	___fldiv@grs+1,f
  2124  11B0  0DE2               	rlf	___fldiv@grs+2,f
  2125  11B1  0DE3               	rlf	___fldiv@grs+3,f
  2126  11B2  0BD4               	decfsz	??___fldiv,f
  2127  11B3  29AD               	goto	u5725
  2128  11B4                     l3438:
  2129  11B4  084F               	movf	___fldiv@a+3,w
  2130  11B5  025C               	subwf	___fldiv@rem+3,w
  2131  11B6  1D03               	skipz
  2132  11B7  29C2               	goto	u5735
  2133  11B8  084E               	movf	___fldiv@a+2,w
  2134  11B9  025B               	subwf	___fldiv@rem+2,w
  2135  11BA  1D03               	skipz
  2136  11BB  29C2               	goto	u5735
  2137  11BC  084D               	movf	___fldiv@a+1,w
  2138  11BD  025A               	subwf	___fldiv@rem+1,w
  2139  11BE  1D03               	skipz
  2140  11BF  29C2               	goto	u5735
  2141  11C0  084C               	movf	___fldiv@a,w
  2142  11C1  0259               	subwf	___fldiv@rem,w
  2143  11C2                     u5735:
  2144  11C2  1C03               	skipc
  2145  11C3  29C5               	goto	u5731
  2146  11C4  29C6               	goto	u5730
  2147  11C5                     u5731:
  2148  11C5  29D5               	goto	l3444
  2149  11C6                     u5730:
  2150  11C6                     l3440:
  2151  11C6  1763               	bsf	___fldiv@grs+3,6
  2152  11C7                     l3442:
  2153  11C7  084C               	movf	___fldiv@a,w
  2154  11C8  02D9               	subwf	___fldiv@rem,f
  2155  11C9  084D               	movf	___fldiv@a+1,w
  2156  11CA  1C03               	skipc
  2157  11CB  0F4D               	incfsz	___fldiv@a+1,w
  2158  11CC  02DA               	subwf	___fldiv@rem+1,f
  2159  11CD  084E               	movf	___fldiv@a+2,w
  2160  11CE  1C03               	skipc
  2161  11CF  0F4E               	incfsz	___fldiv@a+2,w
  2162  11D0  02DB               	subwf	___fldiv@rem+2,f
  2163  11D1  084F               	movf	___fldiv@a+3,w
  2164  11D2  1C03               	skipc
  2165  11D3  0F4F               	incfsz	___fldiv@a+3,w
  2166  11D4  02DC               	subwf	___fldiv@rem+3,f
  2167  11D5                     l3444:
  2168  11D5  3001               	movlw	1
  2169  11D6  00D4               	movwf	??___fldiv
  2170  11D7  0854               	movf	??___fldiv,w
  2171  11D8  07E5               	addwf	___fldiv@aexp,f
  2172  11D9                     l3446:
  2173  11D9  301A               	movlw	26
  2174  11DA  0265               	subwf	___fldiv@aexp,w
  2175  11DB  1C03               	skipc
  2176  11DC  29DE               	goto	u5741
  2177  11DD  29DF               	goto	u5740
  2178  11DE                     u5741:
  2179  11DE  298F               	goto	l3428
  2180  11DF                     u5740:
  2181  11DF                     l3448:
  2182  11DF  085C               	movf	___fldiv@rem+3,w
  2183  11E0  045B               	iorwf	___fldiv@rem+2,w
  2184  11E1  045A               	iorwf	___fldiv@rem+1,w
  2185  11E2  0459               	iorwf	___fldiv@rem,w
  2186  11E3  1903               	skipnz
  2187  11E4  29E6               	goto	u5751
  2188  11E5  29E7               	goto	u5750
  2189  11E6                     u5751:
  2190  11E6  2A06               	goto	l3462
  2191  11E7                     u5750:
  2192  11E7                     l3450:
  2193  11E7  1460               	bsf	___fldiv@grs,0
  2194  11E8  2A06               	goto	l3462
  2195  11E9                     l3452:
  2196  11E9  3001               	movlw	1
  2197  11EA  00D4               	movwf	??___fldiv
  2198  11EB                     u5765:
  2199  11EB  1003               	clrc
  2200  11EC  0DD0               	rlf	___fldiv@b,f
  2201  11ED  0DD1               	rlf	___fldiv@b+1,f
  2202  11EE  0DD2               	rlf	___fldiv@b+2,f
  2203  11EF  0DD3               	rlf	___fldiv@b+3,f
  2204  11F0  0BD4               	decfsz	??___fldiv,f
  2205  11F1  29EB               	goto	u5765
  2206  11F2                     l3454:
  2207  11F2  1FE3               	btfss	___fldiv@grs+3,7
  2208  11F3  29F5               	goto	u5771
  2209  11F4  29F6               	goto	u5770
  2210  11F5                     u5771:
  2211  11F5  29F7               	goto	l3458
  2212  11F6                     u5770:
  2213  11F6                     l3456:
  2214  11F6  1450               	bsf	___fldiv@b,0
  2215  11F7                     l3458:
  2216  11F7  3001               	movlw	1
  2217  11F8  00D4               	movwf	??___fldiv
  2218  11F9                     u5785:
  2219  11F9  1003               	clrc
  2220  11FA  0DE0               	rlf	___fldiv@grs,f
  2221  11FB  0DE1               	rlf	___fldiv@grs+1,f
  2222  11FC  0DE2               	rlf	___fldiv@grs+2,f
  2223  11FD  0DE3               	rlf	___fldiv@grs+3,f
  2224  11FE  0BD4               	decfsz	??___fldiv,f
  2225  11FF  29F9               	goto	u5785
  2226  1200                     l3460:
  2227  1200  30FF               	movlw	255
  2228  1201  07DE               	addwf	___fldiv@new_exp,f
  2229  1202  1803               	skipnc
  2230  1203  0ADF               	incf	___fldiv@new_exp+1,f
  2231  1204  30FF               	movlw	255
  2232  1205  07DF               	addwf	___fldiv@new_exp+1,f
  2233  1206                     l3462:
  2234  1206  1FD2               	btfss	___fldiv@b+2,7
  2235  1207  2A09               	goto	u5791
  2236  1208  2A0A               	goto	u5790
  2237  1209                     u5791:
  2238  1209  29E9               	goto	l3452
  2239  120A                     u5790:
  2240  120A                     l3464:
  2241  120A  01E5               	clrf	___fldiv@aexp
  2242  120B                     l3466:
  2243  120B  1FE3               	btfss	___fldiv@grs+3,7
  2244  120C  2A0E               	goto	u5801
  2245  120D  2A0F               	goto	u5800
  2246  120E                     u5801:
  2247  120E  2A2B               	goto	l3474
  2248  120F                     u5800:
  2249  120F                     l3468:
  2250  120F  30FF               	movlw	255
  2251  1210  0560               	andwf	___fldiv@grs,w
  2252  1211  00D4               	movwf	??___fldiv
  2253  1212  30FF               	movlw	255
  2254  1213  0561               	andwf	___fldiv@grs+1,w
  2255  1214  00D5               	movwf	??___fldiv+1
  2256  1215  30FF               	movlw	255
  2257  1216  0562               	andwf	___fldiv@grs+2,w
  2258  1217  00D6               	movwf	??___fldiv+2
  2259  1218  307F               	movlw	127
  2260  1219  0563               	andwf	___fldiv@grs+3,w
  2261  121A  00D7               	movwf	??___fldiv+3
  2262  121B  0857               	movf	??___fldiv+3,w
  2263  121C  0456               	iorwf	??___fldiv+2,w
  2264  121D  0455               	iorwf	??___fldiv+1,w
  2265  121E  0454               	iorwf	??___fldiv,w
  2266  121F  1903               	skipnz
  2267  1220  2A22               	goto	u5811
  2268  1221  2A23               	goto	u5810
  2269  1222                     u5811:
  2270  1222  2A26               	goto	l716
  2271  1223                     u5810:
  2272  1223                     l3470:
  2273  1223  01E5               	clrf	___fldiv@aexp
  2274  1224  0AE5               	incf	___fldiv@aexp,f
  2275  1225  2A2B               	goto	l3474
  2276  1226                     l716:
  2277  1226  1C50               	btfss	___fldiv@b,0
  2278  1227  2A29               	goto	u5821
  2279  1228  2A2A               	goto	u5820
  2280  1229                     u5821:
  2281  1229  2A2B               	goto	l3474
  2282  122A                     u5820:
  2283  122A  2A23               	goto	l3470
  2284  122B                     l3474:
  2285  122B  0865               	movf	___fldiv@aexp,w
  2286  122C  1903               	btfsc	3,2
  2287  122D  2A2F               	goto	u5831
  2288  122E  2A30               	goto	u5830
  2289  122F                     u5831:
  2290  122F  2A61               	goto	l3484
  2291  1230                     u5830:
  2292  1230                     l3476:
  2293  1230  3001               	movlw	1
  2294  1231  07D0               	addwf	___fldiv@b,f
  2295  1232  3000               	movlw	0
  2296  1233  1803               	skipnc
  2297  1234  3001               	movlw	1
  2298  1235  07D1               	addwf	___fldiv@b+1,f
  2299  1236  3000               	movlw	0
  2300  1237  1803               	skipnc
  2301  1238  3001               	movlw	1
  2302  1239  07D2               	addwf	___fldiv@b+2,f
  2303  123A  3000               	movlw	0
  2304  123B  1803               	skipnc
  2305  123C  3001               	movlw	1
  2306  123D  07D3               	addwf	___fldiv@b+3,f
  2307  123E                     l3478:
  2308  123E  1C53               	btfss	___fldiv@b+3,0
  2309  123F  2A41               	goto	u5841
  2310  1240  2A42               	goto	u5840
  2311  1241                     u5841:
  2312  1241  2A61               	goto	l3484
  2313  1242                     u5840:
  2314  1242                     l3480:
  2315  1242  0850               	movf	___fldiv@b,w
  2316  1243  00D4               	movwf	??___fldiv
  2317  1244  0851               	movf	___fldiv@b+1,w
  2318  1245  00D5               	movwf	??___fldiv+1
  2319  1246  0852               	movf	___fldiv@b+2,w
  2320  1247  00D6               	movwf	??___fldiv+2
  2321  1248  0853               	movf	___fldiv@b+3,w
  2322  1249  00D7               	movwf	??___fldiv+3
  2323  124A  3001               	movlw	1
  2324  124B  00D8               	movwf	??___fldiv+4
  2325  124C                     u5855:
  2326  124C  0D57               	rlf	??___fldiv+3,w
  2327  124D  0CD7               	rrf	??___fldiv+3,f
  2328  124E  0CD6               	rrf	??___fldiv+2,f
  2329  124F  0CD5               	rrf	??___fldiv+1,f
  2330  1250  0CD4               	rrf	??___fldiv,f
  2331  1251                     u5850:
  2332  1251  0BD8               	decfsz	??___fldiv+4,f
  2333  1252  2A4C               	goto	u5855
  2334  1253  0857               	movf	??___fldiv+3,w
  2335  1254  00D3               	movwf	___fldiv@b+3
  2336  1255  0856               	movf	??___fldiv+2,w
  2337  1256  00D2               	movwf	___fldiv@b+2
  2338  1257  0855               	movf	??___fldiv+1,w
  2339  1258  00D1               	movwf	___fldiv@b+1
  2340  1259  0854               	movf	??___fldiv,w
  2341  125A  00D0               	movwf	___fldiv@b
  2342  125B                     l3482:
  2343  125B  3001               	movlw	1
  2344  125C  07DE               	addwf	___fldiv@new_exp,f
  2345  125D  1803               	skipnc
  2346  125E  0ADF               	incf	___fldiv@new_exp+1,f
  2347  125F  3000               	movlw	0
  2348  1260  07DF               	addwf	___fldiv@new_exp+1,f
  2349  1261                     l3484:
  2350  1261  085F               	movf	___fldiv@new_exp+1,w
  2351  1262  3A80               	xorlw	128
  2352  1263  00FF               	movwf	btemp+1
  2353  1264  3080               	movlw	128
  2354  1265  027F               	subwf	btemp+1,w
  2355  1266  1D03               	skipz
  2356  1267  2A6A               	goto	u5865
  2357  1268  30FF               	movlw	255
  2358  1269  025E               	subwf	___fldiv@new_exp,w
  2359  126A                     u5865:
  2360  126A  1C03               	skipc
  2361  126B  2A6D               	goto	u5861
  2362  126C  2A6E               	goto	u5860
  2363  126D                     u5861:
  2364  126D  2A7C               	goto	l3488
  2365  126E                     u5860:
  2366  126E                     l3486:
  2367  126E  30FF               	movlw	255
  2368  126F  1283               	bcf	3,5	;RP0=0, select bank0
  2369  1270  1303               	bcf	3,6	;RP1=0, select bank0
  2370  1271  00DE               	movwf	___fldiv@new_exp
  2371  1272  3000               	movlw	0
  2372  1273  00DF               	movwf	___fldiv@new_exp+1
  2373  1274  3000               	movlw	0
  2374  1275  00D3               	movwf	___fldiv@b+3
  2375  1276  3000               	movlw	0
  2376  1277  00D2               	movwf	___fldiv@b+2
  2377  1278  3000               	movlw	0
  2378  1279  00D1               	movwf	___fldiv@b+1
  2379  127A  3000               	movlw	0
  2380  127B  00D0               	movwf	___fldiv@b
  2381  127C                     l3488:
  2382  127C  1283               	bcf	3,5	;RP0=0, select bank0
  2383  127D  1303               	bcf	3,6	;RP1=0, select bank0
  2384  127E  085F               	movf	___fldiv@new_exp+1,w
  2385  127F  3A80               	xorlw	128
  2386  1280  00FF               	movwf	btemp+1
  2387  1281  3080               	movlw	128
  2388  1282  027F               	subwf	btemp+1,w
  2389  1283  1D03               	skipz
  2390  1284  2A87               	goto	u5875
  2391  1285  3001               	movlw	1
  2392  1286  025E               	subwf	___fldiv@new_exp,w
  2393  1287                     u5875:
  2394  1287  1803               	skipnc
  2395  1288  2A8A               	goto	u5871
  2396  1289  2A8B               	goto	u5870
  2397  128A                     u5871:
  2398  128A  2A98               	goto	l722
  2399  128B                     u5870:
  2400  128B                     l3490:
  2401  128B  1283               	bcf	3,5	;RP0=0, select bank0
  2402  128C  1303               	bcf	3,6	;RP1=0, select bank0
  2403  128D  01DE               	clrf	___fldiv@new_exp
  2404  128E  01DF               	clrf	___fldiv@new_exp+1
  2405  128F                     l3492:
  2406  128F  3000               	movlw	0
  2407  1290  00D3               	movwf	___fldiv@b+3
  2408  1291  3000               	movlw	0
  2409  1292  00D2               	movwf	___fldiv@b+2
  2410  1293  3000               	movlw	0
  2411  1294  00D1               	movwf	___fldiv@b+1
  2412  1295  3000               	movlw	0
  2413  1296  00D0               	movwf	___fldiv@b
  2414  1297                     l3494:
  2415  1297  01DD               	clrf	___fldiv@sign
  2416  1298                     l722:
  2417  1298  1283               	bcf	3,5	;RP0=0, select bank0
  2418  1299  1303               	bcf	3,6	;RP1=0, select bank0
  2419  129A  085E               	movf	___fldiv@new_exp,w
  2420  129B  00D4               	movwf	??___fldiv
  2421  129C  0854               	movf	??___fldiv,w
  2422  129D  00E4               	movwf	___fldiv@bexp
  2423  129E                     l3496:
  2424  129E  1C64               	btfss	___fldiv@bexp,0
  2425  129F  2AA1               	goto	u5881
  2426  12A0  2AA2               	goto	u5880
  2427  12A1                     u5881:
  2428  12A1  2AA4               	goto	l3500
  2429  12A2                     u5880:
  2430  12A2                     l3498:
  2431  12A2  17D2               	bsf	___fldiv@b+2,7
  2432  12A3  2AA8               	goto	l724
  2433  12A4                     l3500:
  2434  12A4  307F               	movlw	127
  2435  12A5  00D4               	movwf	??___fldiv
  2436  12A6  0854               	movf	??___fldiv,w
  2437  12A7  05D2               	andwf	___fldiv@b+2,f
  2438  12A8                     l724:
  2439  12A8  0864               	movf	___fldiv@bexp,w
  2440  12A9  00D4               	movwf	??___fldiv
  2441  12AA  1003               	clrc
  2442  12AB  0C54               	rrf	??___fldiv,w
  2443  12AC  00D5               	movwf	??___fldiv+1
  2444  12AD  0855               	movf	??___fldiv+1,w
  2445  12AE  00D3               	movwf	___fldiv@b+3
  2446  12AF  085D               	movf	___fldiv@sign,w
  2447  12B0  00D4               	movwf	??___fldiv
  2448  12B1  0854               	movf	??___fldiv,w
  2449  12B2  04D3               	iorwf	___fldiv@b+3,f
  2450  12B3  294C               	goto	l3408
  2451  12B4                     l702:
  2452  12B4  0008               	return
  2453  12B5                     __end_of___fldiv:
  2454                           
  2455                           	psect	text3
  2456  18C0                     __ptext3:	
  2457 ;; *************** function _spiWrite *****************
  2458 ;; Defined at:
  2459 ;;		line 125 in file "Main.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  dat             1    wreg     unsigned char 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  dat             1    0[COMMON] unsigned char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2473 ;;      Params:         0       0       0       0       0
  2474 ;;      Locals:         1       0       0       0       0
  2475 ;;      Temps:          0       0       0       0       0
  2476 ;;      Totals:         1       0       0       0       0
  2477 ;;Total ram usage:        1 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; This function calls:
  2480 ;;		Nothing
  2481 ;; This function is called by:
  2482 ;;		_main
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           
  2487                           ;psect for function _spiWrite
  2488  18C0                     _spiWrite:
  2489                           
  2490                           ;incstack = 0
  2491                           ; Regs used in _spiWrite: [wreg]
  2492                           ;spiWrite@dat stored from wreg
  2493  18C0  00F0               	movwf	spiWrite@dat
  2494  18C1                     l3540:
  2495                           
  2496                           ;Main.c: 125: void spiWrite(char dat);Main.c: 126: {;Main.c: 127:     SSPBUF = dat;
  2497  18C1  0870               	movf	spiWrite@dat,w
  2498  18C2  1283               	bcf	3,5	;RP0=0, select bank0
  2499  18C3  1303               	bcf	3,6	;RP1=0, select bank0
  2500  18C4  0093               	movwf	19	;volatile
  2501  18C5                     l121:
  2502  18C5  0008               	return
  2503  18C6                     __end_of_spiWrite:
  2504                           
  2505                           	psect	text4
  2506  18CD                     __ptext4:	
  2507 ;; *************** function _spiRead *****************
  2508 ;; Defined at:
  2509 ;;		line 138 in file "Main.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;		None
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;		None
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      unsigned char 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0, pclath, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2523 ;;      Params:         0       0       0       0       0
  2524 ;;      Locals:         0       0       0       0       0
  2525 ;;      Temps:          0       0       0       0       0
  2526 ;;      Totals:         0       0       0       0       0
  2527 ;;Total ram usage:        0 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    1
  2530 ;; This function calls:
  2531 ;;		_spiReceiveWait
  2532 ;; This function is called by:
  2533 ;;		_main
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           
  2538                           ;psect for function _spiRead
  2539  18CD                     _spiRead:
  2540  18CD                     l3542:	
  2541                           ;incstack = 0
  2542                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2543                           
  2544                           
  2545                           ;Main.c: 140:     spiReceiveWait();
  2546  18CD  160A  158A  20C6  160A  158A  	fcall	_spiReceiveWait
  2547  18D2                     l3544:
  2548                           
  2549                           ;Main.c: 141:     return(SSPBUF);
  2550  18D2  1283               	bcf	3,5	;RP0=0, select bank0
  2551  18D3  1303               	bcf	3,6	;RP1=0, select bank0
  2552  18D4  0813               	movf	19,w	;volatile
  2553  18D5                     l129:
  2554  18D5  0008               	return
  2555  18D6                     __end_of_spiRead:
  2556                           
  2557                           	psect	text5
  2558  18C6                     __ptext5:	
  2559 ;; *************** function _spiReceiveWait *****************
  2560 ;; Defined at:
  2561 ;;		line 120 in file "Main.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;		None
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		None
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2575 ;;      Params:         0       0       0       0       0
  2576 ;;      Locals:         0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0
  2578 ;;      Totals:         0       0       0       0       0
  2579 ;;Total ram usage:        0 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; This function calls:
  2582 ;;		Nothing
  2583 ;; This function is called by:
  2584 ;;		_spiRead
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           
  2589                           ;psect for function _spiReceiveWait
  2590  18C6                     _spiReceiveWait:
  2591  18C6                     l3156:	
  2592                           ;incstack = 0
  2593                           ; Regs used in _spiReceiveWait: []
  2594                           
  2595  18C6                     l115:	
  2596                           ;Main.c: 122:     while ( !SSPSTATbits.BF );
  2597                           
  2598  18C6  1683               	bsf	3,5	;RP0=1, select bank1
  2599  18C7  1303               	bcf	3,6	;RP1=0, select bank1
  2600  18C8  1C14               	btfss	20,0	;volatile
  2601  18C9  28CB               	goto	u5241
  2602  18CA  28CC               	goto	u5240
  2603  18CB                     u5241:
  2604  18CB  28C6               	goto	l115
  2605  18CC                     u5240:
  2606  18CC                     l118:
  2607  18CC  0008               	return
  2608  18CD                     __end_of_spiReceiveWait:
  2609                           
  2610                           	psect	text6
  2611  1927                     __ptext6:	
  2612 ;; *************** function _setup *****************
  2613 ;; Defined at:
  2614 ;;		line 80 in file "Main.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      void 
  2621 ;; Registers used:
  2622 ;;		wreg, status,2, status,0, pclath, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2628 ;;      Params:         0       0       0       0       0
  2629 ;;      Locals:         0       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0
  2631 ;;      Totals:         0       0       0       0       0
  2632 ;;Total ram usage:        0 bytes
  2633 ;; Hardware stack levels used:    1
  2634 ;; Hardware stack levels required when called:    1
  2635 ;; This function calls:
  2636 ;;		_spiInit
  2637 ;; This function is called by:
  2638 ;;		_main
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           
  2643                           ;psect for function _setup
  2644  1927                     _setup:
  2645  1927                     l3524:	
  2646                           ;incstack = 0
  2647                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2648                           
  2649                           
  2650                           ;Main.c: 81:     ANSEL = 0;
  2651  1927  1683               	bsf	3,5	;RP0=1, select bank3
  2652  1928  1703               	bsf	3,6	;RP1=1, select bank3
  2653  1929  0188               	clrf	8	;volatile
  2654                           
  2655                           ;Main.c: 82:     ANSELH = 0;
  2656  192A  0189               	clrf	9	;volatile
  2657  192B                     l3526:
  2658                           
  2659                           ;Main.c: 84:     TRISC2 = 0;
  2660  192B  1683               	bsf	3,5	;RP0=1, select bank1
  2661  192C  1303               	bcf	3,6	;RP1=0, select bank1
  2662  192D  1107               	bcf	7,2	;volatile
  2663  192E                     l3528:
  2664                           
  2665                           ;Main.c: 85:     TRISC1 = 0;
  2666  192E  1087               	bcf	7,1	;volatile
  2667  192F                     l3530:
  2668                           
  2669                           ;Main.c: 86:     TRISC0 = 0;
  2670  192F  1007               	bcf	7,0	;volatile
  2671                           
  2672                           ;Main.c: 88:     TRISB = 0;
  2673  1930  0186               	clrf	6	;volatile
  2674                           
  2675                           ;Main.c: 89:     TRISD = 0;
  2676  1931  0188               	clrf	8	;volatile
  2677                           
  2678                           ;Main.c: 90:     TRISA = 0;
  2679  1932  0185               	clrf	5	;volatile
  2680                           
  2681                           ;Main.c: 92:     PORTB = 0;
  2682  1933  1283               	bcf	3,5	;RP0=0, select bank0
  2683  1934  1303               	bcf	3,6	;RP1=0, select bank0
  2684  1935  0186               	clrf	6	;volatile
  2685                           
  2686                           ;Main.c: 93:     PORTD = 0;
  2687  1936  0188               	clrf	8	;volatile
  2688                           
  2689                           ;Main.c: 94:     PORTA = 0;
  2690  1937  0185               	clrf	5	;volatile
  2691  1938                     l3532:
  2692                           
  2693                           ;Main.c: 96:     PORTCbits.RC2 = 0;
  2694  1938  1107               	bcf	7,2	;volatile
  2695  1939                     l3534:
  2696                           
  2697                           ;Main.c: 97:     PORTCbits.RC1 = 0;
  2698  1939  1087               	bcf	7,1	;volatile
  2699  193A                     l3536:
  2700                           
  2701                           ;Main.c: 98:     PORTCbits.RC0 = 0;
  2702  193A  1007               	bcf	7,0	;volatile
  2703  193B                     l3538:
  2704                           
  2705                           ;Main.c: 99:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
  2706  193B  01F0               	clrf	spiInit@sDataSample
  2707  193C  01F1               	clrf	spiInit@sClockIdle
  2708  193D  01F2               	clrf	spiInit@sTransmitEdge
  2709  193E  3020               	movlw	32
  2710  193F  160A  158A  2111  160A  158A  	fcall	_spiInit
  2711  1944                     l107:
  2712  1944  0008               	return
  2713  1945                     __end_of_setup:
  2714                           
  2715                           	psect	text7
  2716  1911                     __ptext7:	
  2717 ;; *************** function _spiInit *****************
  2718 ;; Defined at:
  2719 ;;		line 103 in file "Main.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  sType           1    wreg     enum E1264
  2722 ;;  sDataSample     1    0[COMMON] enum E1272
  2723 ;;  sClockIdle      1    1[COMMON] enum E1276
  2724 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;  sType           1    3[COMMON] enum E1264
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, status,2, status,0
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2736 ;;      Params:         3       0       0       0       0
  2737 ;;      Locals:         1       0       0       0       0
  2738 ;;      Temps:          0       0       0       0       0
  2739 ;;      Totals:         4       0       0       0       0
  2740 ;;Total ram usage:        4 bytes
  2741 ;; Hardware stack levels used:    1
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_setup
  2746 ;; This function uses a non-reentrant model
  2747 ;;
  2748                           
  2749                           
  2750                           ;psect for function _spiInit
  2751  1911                     _spiInit:
  2752                           
  2753                           ;incstack = 0
  2754                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  2755                           ;spiInit@sType stored from wreg
  2756  1911  00F3               	movwf	spiInit@sType
  2757  1912                     l3146:
  2758                           
  2759                           ;Main.c: 103: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle s
      +                          ClockIdle, Spi_Transmit_Edge sTransmitEdge);Main.c: 104: {;Main.c: 105:     TRISC5 = 0;
  2760  1912  1683               	bsf	3,5	;RP0=1, select bank1
  2761  1913  1303               	bcf	3,6	;RP1=0, select bank1
  2762  1914  1287               	bcf	7,5	;volatile
  2763                           
  2764                           ;Main.c: 106:     if(sType & 0b00000100)
  2765  1915  1D73               	btfss	spiInit@sType,2
  2766  1916  2918               	goto	u5231
  2767  1917  2919               	goto	u5230
  2768  1918                     u5231:
  2769  1918  291D               	goto	l3152
  2770  1919                     u5230:
  2771  1919                     l3148:
  2772                           
  2773                           ;Main.c: 107:     {;Main.c: 108:         SSPSTAT = sTransmitEdge;
  2774  1919  0872               	movf	spiInit@sTransmitEdge,w
  2775  191A  0094               	movwf	20	;volatile
  2776  191B                     l3150:
  2777                           
  2778                           ;Main.c: 109:         TRISC3 = 1;
  2779  191B  1587               	bsf	7,3	;volatile
  2780                           
  2781                           ;Main.c: 110:     }
  2782  191C  2921               	goto	l111
  2783  191D                     l3152:
  2784                           
  2785                           ;Main.c: 112:     {;Main.c: 113:         SSPSTAT = sDataSample | sTransmitEdge;
  2786  191D  0870               	movf	spiInit@sDataSample,w
  2787  191E  0472               	iorwf	spiInit@sTransmitEdge,w
  2788  191F  0094               	movwf	20	;volatile
  2789  1920                     l3154:
  2790                           
  2791                           ;Main.c: 114:         TRISC3 = 0;
  2792  1920  1187               	bcf	7,3	;volatile
  2793  1921                     l111:	
  2794                           ;Main.c: 115:     }
  2795                           
  2796                           
  2797                           ;Main.c: 117:     SSPCON = sType | sClockIdle;
  2798  1921  0873               	movf	spiInit@sType,w
  2799  1922  0471               	iorwf	spiInit@sClockIdle,w
  2800  1923  1283               	bcf	3,5	;RP0=0, select bank0
  2801  1924  1303               	bcf	3,6	;RP1=0, select bank0
  2802  1925  0094               	movwf	20	;volatile
  2803  1926                     l112:
  2804  1926  0008               	return
  2805  1927                     __end_of_spiInit:
  2806                           
  2807                           	psect	text8
  2808  1C3E                     __ptext8:	
  2809 ;; *************** function _conversion *****************
  2810 ;; Defined at:
  2811 ;;		line 151 in file "Main.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;		None
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2825 ;;      Params:         0       0       0       0       0
  2826 ;;      Locals:         0       0       0       0       0
  2827 ;;      Temps:          0       0       1       0       0
  2828 ;;      Totals:         0       0       1       0       0
  2829 ;;Total ram usage:        1 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    4
  2832 ;; This function calls:
  2833 ;;		_Lcd_Set_Cursor
  2834 ;;		_Lcd_Write_String
  2835 ;;		___awdiv
  2836 ;;		___wmul
  2837 ;;		___xxtofl
  2838 ;;		_sprintf
  2839 ;; This function is called by:
  2840 ;;		_main
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           
  2845                           ;psect for function _conversion
  2846  1C3E                     _conversion:
  2847  1C3E                     l3554:	
  2848                           ;incstack = 0
  2849                           ; Regs used in _conversion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2850                           
  2851                           
  2852                           ;Main.c: 153:         vpot1 = (5*c)/255;
  2853  1C3E  3005               	movlw	5
  2854  1C3F  00F2               	movwf	___wmul@multiplicand
  2855  1C40  3000               	movlw	0
  2856  1C41  00F3               	movwf	___wmul@multiplicand+1
  2857  1C42  1683               	bsf	3,5	;RP0=1, select bank1
  2858  1C43  1303               	bcf	3,6	;RP1=0, select bank1
  2859  1C44  0867               	movf	(_c+1)^(0+128),w
  2860  1C45  00F1               	movwf	___wmul@multiplier+1
  2861  1C46  0866               	movf	_c^(0+128),w
  2862  1C47  00F0               	movwf	___wmul@multiplier
  2863  1C48  160A  158A  2169  160A  158A  	fcall	___wmul
  2864  1C4D  0871               	movf	?___wmul+1,w
  2865  1C4E  00FA               	movwf	___awdiv@dividend+1
  2866  1C4F  0870               	movf	?___wmul,w
  2867  1C50  00F9               	movwf	___awdiv@dividend
  2868  1C51  30FF               	movlw	255
  2869  1C52  00F7               	movwf	___awdiv@divisor
  2870  1C53  3000               	movlw	0
  2871  1C54  00F8               	movwf	___awdiv@divisor+1
  2872  1C55  120A  158A  20D7  160A  158A  	fcall	___awdiv
  2873  1C5A  0877               	movf	?___awdiv,w
  2874  1C5B  1283               	bcf	3,5	;RP0=0, select bank0
  2875  1C5C  1303               	bcf	3,6	;RP1=0, select bank0
  2876  1C5D  00A4               	movwf	___xxtofl@val
  2877  1C5E  0878               	movf	?___awdiv+1,w
  2878  1C5F  00A5               	movwf	___xxtofl@val+1
  2879  1C60  3000               	movlw	0
  2880  1C61  1BA5               	btfsc	___xxtofl@val+1,7
  2881  1C62  30FF               	movlw	255
  2882  1C63  00A6               	movwf	___xxtofl@val+2
  2883  1C64  00A7               	movwf	___xxtofl@val+3
  2884  1C65  3001               	movlw	1
  2885  1C66  160A  158A  25C9  160A  158A  	fcall	___xxtofl
  2886  1C6B  1283               	bcf	3,5	;RP0=0, select bank0
  2887  1C6C  1303               	bcf	3,6	;RP1=0, select bank0
  2888  1C6D  0827               	movf	?___xxtofl+3,w
  2889  1C6E  1683               	bsf	3,5	;RP0=1, select bank1
  2890  1C6F  1303               	bcf	3,6	;RP1=0, select bank1
  2891  1C70  00DF               	movwf	(_vpot1+3)^(0+128)
  2892  1C71  1283               	bcf	3,5	;RP0=0, select bank0
  2893  1C72  1303               	bcf	3,6	;RP1=0, select bank0
  2894  1C73  0826               	movf	?___xxtofl+2,w
  2895  1C74  1683               	bsf	3,5	;RP0=1, select bank1
  2896  1C75  1303               	bcf	3,6	;RP1=0, select bank1
  2897  1C76  00DE               	movwf	(_vpot1+2)^(0+128)
  2898  1C77  1283               	bcf	3,5	;RP0=0, select bank0
  2899  1C78  1303               	bcf	3,6	;RP1=0, select bank0
  2900  1C79  0825               	movf	?___xxtofl+1,w
  2901  1C7A  1683               	bsf	3,5	;RP0=1, select bank1
  2902  1C7B  1303               	bcf	3,6	;RP1=0, select bank1
  2903  1C7C  00DD               	movwf	(_vpot1+1)^(0+128)
  2904  1C7D  1283               	bcf	3,5	;RP0=0, select bank0
  2905  1C7E  1303               	bcf	3,6	;RP1=0, select bank0
  2906  1C7F  0824               	movf	?___xxtofl,w
  2907  1C80  1683               	bsf	3,5	;RP0=1, select bank1
  2908  1C81  1303               	bcf	3,6	;RP1=0, select bank1
  2909  1C82  00DC               	movwf	_vpot1^(0+128)
  2910  1C83                     l3556:
  2911                           
  2912                           ;Main.c: 154:         sprintf(buffer2, "%.2f", vpot1);
  2913  1C83  30AD               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2914  1C84  00CF               	movwf	??_conversion^(0+128)
  2915  1C85  084F               	movf	??_conversion^(0+128),w
  2916  1C86  00AC               	movwf	sprintf@f^(0+128)
  2917  1C87  085F               	movf	(_vpot1+3)^(0+128),w
  2918  1C88  00B0               	movwf	((?_sprintf+3)^(0+128)+1)
  2919  1C89  085E               	movf	(_vpot1+2)^(0+128),w
  2920  1C8A  00AF               	movwf	((?_sprintf+2)^(0+128)+1)
  2921  1C8B  085D               	movf	(_vpot1+1)^(0+128),w
  2922  1C8C  00AE               	movwf	((?_sprintf+1)^(0+128)+1)
  2923  1C8D  085C               	movf	_vpot1^(0+128),w
  2924  1C8E  00AD               	movwf	(?_sprintf^(0+128)+1)
  2925  1C8F  30E9               	movlw	(low (_buffer2| 0))& (0+255)
  2926  1C90  120A  118A  219D  160A  158A  	fcall	_sprintf
  2927  1C95                     l3558:
  2928                           
  2929                           ;Main.c: 155:         Lcd_Set_Cursor(2,8);
  2930  1C95  3008               	movlw	8
  2931  1C96  1683               	bsf	3,5	;RP0=1, select bank1
  2932  1C97  1303               	bcf	3,6	;RP1=0, select bank1
  2933  1C98  00CF               	movwf	??_conversion^(0+128)
  2934  1C99  084F               	movf	??_conversion^(0+128),w
  2935  1C9A  00F3               	movwf	Lcd_Set_Cursor@b
  2936  1C9B  3002               	movlw	2
  2937  1C9C  160A  158A  2145  160A  158A  	fcall	_Lcd_Set_Cursor
  2938                           
  2939                           ;Main.c: 156:         Lcd_Write_String(buffer2);
  2940  1CA1  30E9               	movlw	(low (_buffer2| 0))& (0+255)
  2941  1CA2  00F2               	movwf	Lcd_Write_String@a
  2942  1CA3  3000               	movlw	0
  2943  1CA4  00F3               	movwf	Lcd_Write_String@a+1
  2944  1CA5  160A  158A  224B  160A  158A  	fcall	_Lcd_Write_String
  2945  1CAA                     l135:
  2946  1CAA  0008               	return
  2947  1CAB                     __end_of_conversion:
  2948                           
  2949                           	psect	text9
  2950  19DB                     __ptext9:	
  2951 ;; *************** function _Lcd_Init *****************
  2952 ;; Defined at:
  2953 ;;		line 71 in file "./LCD.h"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;		None
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      void 
  2960 ;; Registers used:
  2961 ;;		wreg, status,2, status,0, pclath, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2967 ;;      Params:         0       0       0       0       0
  2968 ;;      Locals:         0       0       0       0       0
  2969 ;;      Temps:          2       0       0       0       0
  2970 ;;      Totals:         2       0       0       0       0
  2971 ;;Total ram usage:        2 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    1
  2974 ;; This function calls:
  2975 ;;		_Lcd_Cmd
  2976 ;; This function is called by:
  2977 ;;		_main
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           
  2982                           ;psect for function _Lcd_Init
  2983  19DB                     _Lcd_Init:
  2984  19DB                     l3508:	
  2985                           ;incstack = 0
  2986                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2987                           
  2988                           
  2989                           ;./LCD.h: 73:     PORTDbits.RD2 = 0;
  2990  19DB  1283               	bcf	3,5	;RP0=0, select bank0
  2991  19DC  1303               	bcf	3,6	;RP1=0, select bank0
  2992  19DD  1108               	bcf	8,2	;volatile
  2993  19DE                     l3510:
  2994                           
  2995                           ;./LCD.h: 75:     Lcd_Cmd(0x00);
  2996  19DE  3000               	movlw	0
  2997  19DF  160A  158A  20FE  160A  158A  	fcall	_Lcd_Cmd
  2998  19E4                     l3512:
  2999                           
  3000                           ;./LCD.h: 76:     _delay((unsigned long)((15)*(9000000/4000.0)));
  3001  19E4  302C               	movlw	44
  3002  19E5  00F4               	movwf	??_Lcd_Init+1
  3003  19E6  30D3               	movlw	211
  3004  19E7  00F3               	movwf	??_Lcd_Init
  3005  19E8                     u5967:
  3006  19E8  0BF3               	decfsz	??_Lcd_Init,f
  3007  19E9  29E8               	goto	u5967
  3008  19EA  0BF4               	decfsz	??_Lcd_Init+1,f
  3009  19EB  29E8               	goto	u5967
  3010  19EC  29ED               	nop2
  3011  19ED                     l3514:
  3012                           
  3013                           ;./LCD.h: 79:     Lcd_Cmd(0x30);
  3014  19ED  3030               	movlw	48
  3015  19EE  160A  158A  20FE  160A  158A  	fcall	_Lcd_Cmd
  3016                           
  3017                           ;./LCD.h: 80:     _delay((unsigned long)((160)*(9000000/4000000.0)));
  3018  19F3  3077               	movlw	119
  3019  19F4  00F3               	movwf	??_Lcd_Init
  3020  19F5                     u5977:
  3021  19F5  0BF3               	decfsz	??_Lcd_Init,f
  3022  19F6  29F5               	goto	u5977
  3023  19F7  29F8               	nop2
  3024  19F8                     l3516:
  3025                           
  3026                           ;./LCD.h: 82:     Lcd_Cmd(0x38);
  3027  19F8  3038               	movlw	56
  3028  19F9  160A  158A  20FE  160A  158A  	fcall	_Lcd_Cmd
  3029  19FE                     l3518:
  3030                           
  3031                           ;./LCD.h: 83:     Lcd_Cmd(0x01);
  3032  19FE  3001               	movlw	1
  3033  19FF  160A  158A  20FE  160A  158A  	fcall	_Lcd_Cmd
  3034  1A04                     l3520:
  3035                           
  3036                           ;./LCD.h: 84:     Lcd_Cmd(0x06);
  3037  1A04  3006               	movlw	6
  3038  1A05  160A  158A  20FE  160A  158A  	fcall	_Lcd_Cmd
  3039  1A0A                     l3522:
  3040                           
  3041                           ;./LCD.h: 85:     Lcd_Cmd(0x0F);
  3042  1A0A  300F               	movlw	15
  3043  1A0B  160A  158A  20FE  160A  158A  	fcall	_Lcd_Cmd
  3044  1A10                     l96:
  3045  1A10  0008               	return
  3046  1A11                     __end_of_Lcd_Init:
  3047                           
  3048                           	psect	text10
  3049  18E1                     __ptext10:	
  3050 ;; *************** function _Lcd_Clear *****************
  3051 ;; Defined at:
  3052 ;;		line 30 in file "./LCD.h"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  2   77[None  ] int 
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0, pclath, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3066 ;;      Params:         0       0       0       0       0
  3067 ;;      Locals:         0       0       0       0       0
  3068 ;;      Temps:          0       0       0       0       0
  3069 ;;      Totals:         0       0       0       0       0
  3070 ;;Total ram usage:        0 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    1
  3073 ;; This function calls:
  3074 ;;		_Lcd_Cmd
  3075 ;; This function is called by:
  3076 ;;		_main
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           
  3081                           ;psect for function _Lcd_Clear
  3082  18E1                     _Lcd_Clear:
  3083  18E1                     l3506:	
  3084                           ;incstack = 0
  3085                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3086                           
  3087                           
  3088                           ;./LCD.h: 31:  Lcd_Cmd(0);
  3089  18E1  3000               	movlw	0
  3090  18E2  160A  158A  20FE  160A  158A  	fcall	_Lcd_Cmd
  3091                           
  3092                           ;./LCD.h: 32:  Lcd_Cmd(1);
  3093  18E7  3001               	movlw	1
  3094  18E8  160A  158A  20FE  160A  158A  	fcall	_Lcd_Cmd
  3095  18ED                     l78:
  3096  18ED  0008               	return
  3097  18EE                     __end_of_Lcd_Clear:
  3098                           
  3099                           	psect	text11
  3100  198E                     __ptext11:	
  3101 ;; *************** function _Contador *****************
  3102 ;; Defined at:
  3103 ;;		line 144 in file "Main.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;		None
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;		None
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3117 ;;      Params:         0       0       0       0       0
  3118 ;;      Locals:         0       0       0       0       0
  3119 ;;      Temps:          0       0       1       0       0
  3120 ;;      Totals:         0       0       1       0       0
  3121 ;;Total ram usage:        1 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; Hardware stack levels required when called:    4
  3124 ;; This function calls:
  3125 ;;		_Lcd_Set_Cursor
  3126 ;;		_Lcd_Write_String
  3127 ;;		_sprintf
  3128 ;; This function is called by:
  3129 ;;		_main
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           
  3134                           ;psect for function _Contador
  3135  198E                     _Contador:
  3136  198E                     l3548:	
  3137                           ;incstack = 0
  3138                           ; Regs used in _Contador: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3139                           
  3140                           
  3141                           ;Main.c: 146:       sprintf(buffer1,"%.3f",contm);
  3142  198E  30B2               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  3143  198F  1683               	bsf	3,5	;RP0=1, select bank1
  3144  1990  1303               	bcf	3,6	;RP1=0, select bank1
  3145  1991  00CF               	movwf	??_Contador^(0+128)
  3146  1992  084F               	movf	??_Contador^(0+128),w
  3147  1993  00AC               	movwf	sprintf@f^(0+128)
  3148  1994  085B               	movf	(_contm+3)^(0+128),w
  3149  1995  00B0               	movwf	((?_sprintf+3)^(0+128)+1)
  3150  1996  085A               	movf	(_contm+2)^(0+128),w
  3151  1997  00AF               	movwf	((?_sprintf+2)^(0+128)+1)
  3152  1998  0859               	movf	(_contm+1)^(0+128),w
  3153  1999  00AE               	movwf	((?_sprintf+1)^(0+128)+1)
  3154  199A  0858               	movf	_contm^(0+128),w
  3155  199B  00AD               	movwf	(?_sprintf^(0+128)+1)
  3156  199C  30EA               	movlw	(low (_buffer1| 0))& (0+255)
  3157  199D  120A  118A  219D  160A  158A  	fcall	_sprintf
  3158  19A2                     l3550:
  3159                           
  3160                           ;Main.c: 147:       Lcd_Set_Cursor(2,1);
  3161  19A2  01F3               	clrf	Lcd_Set_Cursor@b
  3162  19A3  0AF3               	incf	Lcd_Set_Cursor@b,f
  3163  19A4  3002               	movlw	2
  3164  19A5  160A  158A  2145  160A  158A  	fcall	_Lcd_Set_Cursor
  3165  19AA                     l3552:
  3166                           
  3167                           ;Main.c: 148:       Lcd_Write_String(buffer1);
  3168  19AA  30EA               	movlw	(low (_buffer1| 0))& (0+255)
  3169  19AB  00F2               	movwf	Lcd_Write_String@a
  3170  19AC  3000               	movlw	0
  3171  19AD  00F3               	movwf	Lcd_Write_String@a+1
  3172  19AE  160A  158A  224B  160A  158A  	fcall	_Lcd_Write_String
  3173  19B3                     l132:
  3174  19B3  0008               	return
  3175  19B4                     __end_of_Contador:
  3176                           
  3177                           	psect	text12
  3178  019D                     __ptext12:	
  3179 ;; *************** function _sprintf *****************
  3180 ;; Defined at:
  3181 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  sp              1    wreg     PTR unsigned char 
  3184 ;;		 -> buffer3(1), buffer2(1), buffer1(1), 
  3185 ;;  f               1   12[BANK1 ] PTR const unsigned char 
  3186 ;;		 -> STR_8(5), STR_7(5), STR_6(5), 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  sp              1   41[BANK1 ] PTR unsigned char 
  3189 ;;		 -> buffer3(1), buffer2(1), buffer1(1), 
  3190 ;;  fval            4   42[BANK1 ] PTR unsigned char 
  3191 ;;  tmpval          4   35[BANK1 ] struct .
  3192 ;;  val             4   29[BANK1 ] unsigned long 
  3193 ;;  prec            2   39[BANK1 ] int 
  3194 ;;  eexp            2   33[BANK1 ] int 
  3195 ;;  flag            2   27[BANK1 ] unsigned short 
  3196 ;;  cp              2    0        PTR const unsigned char 
  3197 ;;  len             2    0        unsigned int 
  3198 ;;  width           2    0        int 
  3199 ;;  c               1   46[BANK1 ] unsigned char 
  3200 ;;  ap              1   26[BANK1 ] PTR void [1]
  3201 ;;		 -> ?_sprintf(2), 
  3202 ;;  d               1    0        unsigned char 
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  2   12[BANK1 ] int 
  3205 ;; Registers used:
  3206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3212 ;;      Params:         0       0       5       0       0
  3213 ;;      Locals:         0       0      25       0       0
  3214 ;;      Temps:          0       0       5       0       0
  3215 ;;      Totals:         0       0      35       0       0
  3216 ;;Total ram usage:       35 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; Hardware stack levels required when called:    3
  3219 ;; This function calls:
  3220 ;;		___awdiv
  3221 ;;		___fladd
  3222 ;;		___fleq
  3223 ;;		___flge
  3224 ;;		___flmul
  3225 ;;		___flneg
  3226 ;;		___flsub
  3227 ;;		___fltol
  3228 ;;		___lldiv
  3229 ;;		___llmod
  3230 ;;		___wmul
  3231 ;;		___xxtofl
  3232 ;;		__div_to_l_
  3233 ;;		__tdiv_to_l_
  3234 ;;		_fround
  3235 ;;		_isdigit
  3236 ;;		_scale
  3237 ;; This function is called by:
  3238 ;;		_Contador
  3239 ;;		_conversion
  3240 ;;		_temperaturac
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           
  3245                           ;psect for function _sprintf
  3246  019D                     _sprintf:
  3247                           
  3248                           ;incstack = 0
  3249                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3250                           ;sprintf@sp stored from wreg
  3251  019D  1683               	bsf	3,5	;RP0=1, select bank1
  3252  019E  1303               	bcf	3,6	;RP1=0, select bank1
  3253  019F  00C9               	movwf	sprintf@sp^(0+128)
  3254  01A0                     l3158:
  3255                           
  3256                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  3257  01A0  30AD               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3258  01A1  00B1               	movwf	??_sprintf^(0+128)
  3259  01A2  0831               	movf	??_sprintf^(0+128),w
  3260  01A3  00BA               	movwf	sprintf@ap^(0+128)
  3261                           
  3262                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3263  01A4  2FDC               	goto	l3352
  3264  01A5                     l3160:
  3265                           
  3266                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3267  01A5  3025               	movlw	37
  3268  01A6  064E               	xorwf	sprintf@c^(0+128),w
  3269  01A7  1903               	btfsc	3,2
  3270  01A8  29AA               	goto	u5251
  3271  01A9  29AB               	goto	u5250
  3272  01AA                     u5251:
  3273  01AA  29B7               	goto	l3166
  3274  01AB                     u5250:
  3275  01AB                     l3162:
  3276                           
  3277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3278  01AB  084E               	movf	sprintf@c^(0+128),w
  3279  01AC  00B1               	movwf	??_sprintf^(0+128)
  3280  01AD  0849               	movf	sprintf@sp^(0+128),w
  3281  01AE  0084               	movwf	4
  3282  01AF  0831               	movf	??_sprintf^(0+128),w
  3283  01B0  1383               	bcf	3,7	;select IRP bank0
  3284  01B1  0080               	movwf	0
  3285  01B2                     l3164:
  3286  01B2  3001               	movlw	1
  3287  01B3  00B1               	movwf	??_sprintf^(0+128)
  3288  01B4  0831               	movf	??_sprintf^(0+128),w
  3289  01B5  07C9               	addwf	sprintf@sp^(0+128),f
  3290                           
  3291                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  3292  01B6  2FDC               	goto	l3352
  3293  01B7                     l3166:
  3294                           
  3295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3296  01B7  01BB               	clrf	sprintf@flag^(0+128)
  3297  01B8  01BC               	clrf	(sprintf@flag+1)^(0+128)
  3298  01B9                     l3168:
  3299                           
  3300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  3301  01B9  082C               	movf	sprintf@f^(0+128),w
  3302  01BA  0084               	movwf	4
  3303  01BB  120A  158A  200A  120A  118A  	fcall	stringdir
  3304  01C0  3A2E               	xorlw	46
  3305  01C1  1D03               	skipz
  3306  01C2  29C4               	goto	u5261
  3307  01C3  29C5               	goto	u5260
  3308  01C4                     u5261:
  3309  01C4  2A0A               	goto	l3184
  3310  01C5                     u5260:
  3311  01C5                     l3170:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  3314  01C5  173C               	bsf	(sprintf@flag^(0+128)+1),6
  3315  01C6                     l3172:
  3316                           
  3317                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  3318  01C6  3001               	movlw	1
  3319  01C7  00B1               	movwf	??_sprintf^(0+128)
  3320  01C8  0831               	movf	??_sprintf^(0+128),w
  3321  01C9  07AC               	addwf	sprintf@f^(0+128),f
  3322  01CA                     l3174:
  3323                           
  3324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  3325  01CA  01C7               	clrf	sprintf@prec^(0+128)
  3326  01CB  01C8               	clrf	(sprintf@prec+1)^(0+128)
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  3329  01CC  29F9               	goto	l3182
  3330  01CD                     l3176:
  3331                           
  3332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  3333  01CD  300A               	movlw	10
  3334  01CE  00F0               	movwf	___wmul@multiplier
  3335  01CF  3000               	movlw	0
  3336  01D0  00F1               	movwf	___wmul@multiplier+1
  3337  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  3338  01D2  1303               	bcf	3,6	;RP1=0, select bank1
  3339  01D3  0848               	movf	(sprintf@prec+1)^(0+128),w
  3340  01D4  00F3               	movwf	___wmul@multiplicand+1
  3341  01D5  0847               	movf	sprintf@prec^(0+128),w
  3342  01D6  00F2               	movwf	___wmul@multiplicand
  3343  01D7  160A  158A  2169  120A  118A  	fcall	___wmul
  3344  01DC  0871               	movf	?___wmul+1,w
  3345  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  3346  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  3347  01DF  00C8               	movwf	(sprintf@prec+1)^(0+128)
  3348  01E0  0870               	movf	?___wmul,w
  3349  01E1  00C7               	movwf	sprintf@prec^(0+128)
  3350  01E2                     l3178:
  3351                           
  3352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  3353  01E2  082C               	movf	sprintf@f^(0+128),w
  3354  01E3  0084               	movwf	4
  3355  01E4  120A  158A  200A  120A  118A  	fcall	stringdir
  3356  01E9  3ED0               	addlw	208
  3357  01EA  00B1               	movwf	??_sprintf^(0+128)
  3358  01EB  30FF               	movlw	255
  3359  01EC  1803               	skipnc
  3360  01ED  3000               	movlw	0
  3361  01EE  00B2               	movwf	(??_sprintf^(0+128)+1)
  3362  01EF  0831               	movf	??_sprintf^(0+128),w
  3363  01F0  07C7               	addwf	sprintf@prec^(0+128),f
  3364  01F1  1803               	skipnc
  3365  01F2  0AC8               	incf	(sprintf@prec+1)^(0+128),f
  3366  01F3  0832               	movf	(??_sprintf+1)^(0+128),w
  3367  01F4  07C8               	addwf	(sprintf@prec+1)^(0+128),f
  3368  01F5                     l3180:
  3369  01F5  3001               	movlw	1
  3370  01F6  00B1               	movwf	??_sprintf^(0+128)
  3371  01F7  0831               	movf	??_sprintf^(0+128),w
  3372  01F8  07AC               	addwf	sprintf@f^(0+128),f
  3373  01F9                     l3182:
  3374                           
  3375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  3376  01F9  082C               	movf	sprintf@f^(0+128),w
  3377  01FA  0084               	movwf	4
  3378  01FB  120A  158A  200A  120A  118A  	fcall	stringdir
  3379  0200  160A  118A  2000  120A  118A  	fcall	_isdigit
  3380  0205  1803               	btfsc	3,0
  3381  0206  2A08               	goto	u5271
  3382  0207  2A09               	goto	u5270
  3383  0208                     u5271:
  3384  0208  29CD               	goto	l3176
  3385  0209                     u5270:
  3386  0209  2A10               	goto	l3190
  3387  020A                     l3184:
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  3390  020A  01C7               	clrf	sprintf@prec^(0+128)
  3391  020B  01C8               	clrf	(sprintf@prec+1)^(0+128)
  3392  020C                     l3186:
  3393                           
  3394                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  3395  020C  163C               	bsf	(sprintf@flag^(0+128)+1),4
  3396  020D  2A10               	goto	l3190
  3397  020E                     l266:	
  3398                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  3399                           
  3400                           
  3401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  3402  020E  153C               	bsf	(sprintf@flag^(0+128)+1),2
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  3405  020F  2A2C               	goto	l3192
  3406  0210                     l3190:
  3407  0210  3001               	movlw	1
  3408  0211  1683               	bsf	3,5	;RP0=1, select bank1
  3409  0212  1303               	bcf	3,6	;RP1=0, select bank1
  3410  0213  07AC               	addwf	sprintf@f^(0+128),f
  3411  0214  30FF               	movlw	-1
  3412  0215  072C               	addwf	sprintf@f^(0+128),w
  3413  0216  0084               	movwf	4
  3414  0217  120A  158A  200A  120A  118A  	fcall	stringdir
  3415  021C  00CE               	movwf	sprintf@c^(0+128)
  3416  021D  00B1               	movwf	??_sprintf^(0+128)
  3417  021E  01B2               	clrf	(??_sprintf^(0+128)+1)
  3418                           
  3419                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3420                           ; Switch size 1, requested type "simple"
  3421                           ; Number of cases is 1, Range of values is 0 to 0
  3422                           ; switch strategies available:
  3423                           ; Name         Instructions Cycles
  3424                           ; simple_byte            4     3 (average)
  3425                           ; direct_byte           11     8 (fixed)
  3426                           ; jumptable            260     6 (fixed)
  3427                           ;	Chosen strategy is simple_byte
  3428  021F  0832               	movf	(??_sprintf+1)^(0+128),w
  3429  0220  3A00               	xorlw	0	; case 0
  3430  0221  1903               	skipnz
  3431  0222  2A24               	goto	l3656
  3432  0223  2FDC               	goto	l3352
  3433  0224                     l3656:
  3434                           
  3435                           ; Switch size 1, requested type "simple"
  3436                           ; Number of cases is 2, Range of values is 0 to 102
  3437                           ; switch strategies available:
  3438                           ; Name         Instructions Cycles
  3439                           ; simple_byte            7     4 (average)
  3440                           ; jumptable            260     6 (fixed)
  3441                           ;	Chosen strategy is simple_byte
  3442  0224  0831               	movf	??_sprintf^(0+128),w
  3443  0225  3A00               	xorlw	0	; case 0
  3444  0226  1903               	skipnz
  3445  0227  2FEE               	goto	l3354
  3446  0228  3A66               	xorlw	102	; case 102
  3447  0229  1903               	skipnz
  3448  022A  2A0E               	goto	l266
  3449  022B  2FDC               	goto	l3352
  3450  022C                     l3192:
  3451                           
  3452                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  3453  022C  3000               	movlw	0
  3454  022D  053B               	andwf	sprintf@flag^(0+128),w
  3455  022E  00B1               	movwf	??_sprintf^(0+128)
  3456  022F  3007               	movlw	7
  3457  0230  053C               	andwf	(sprintf@flag+1)^(0+128),w
  3458  0231  00B2               	movwf	(??_sprintf+1)^(0+128)
  3459  0232  0831               	movf	??_sprintf^(0+128),w
  3460  0233  0432               	iorwf	(??_sprintf^(0+128)+1),w
  3461  0234  1903               	btfsc	3,2
  3462  0235  2A37               	goto	u5281
  3463  0236  2A38               	goto	u5280
  3464  0237                     u5281:
  3465  0237  2F97               	goto	l3334
  3466  0238                     u5280:
  3467  0238                     l3194:
  3468                           
  3469                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  3470  0238  1E3C               	btfss	(sprintf@flag+1)^(0+128),4
  3471  0239  2A3B               	goto	u5291
  3472  023A  2A3C               	goto	u5290
  3473  023B                     u5291:
  3474  023B  2A40               	goto	l3198
  3475  023C                     u5290:
  3476  023C                     l3196:
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  3479  023C  3006               	movlw	6
  3480  023D  00C7               	movwf	sprintf@prec^(0+128)
  3481  023E  3000               	movlw	0
  3482  023F  00C8               	movwf	(sprintf@prec^(0+128)+1)
  3483  0240                     l3198:
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  3486  0240  083A               	movf	sprintf@ap^(0+128),w
  3487  0241  0084               	movwf	4
  3488  0242  1383               	bcf	3,7	;select IRP bank0
  3489  0243  0800               	movf	0,w
  3490  0244  00CA               	movwf	sprintf@fval^(0+128)
  3491  0245  0A84               	incf	4,f
  3492  0246  0800               	movf	0,w
  3493  0247  00CB               	movwf	(sprintf@fval+1)^(0+128)
  3494  0248  0A84               	incf	4,f
  3495  0249  0800               	movf	0,w
  3496  024A  00CC               	movwf	(sprintf@fval+2)^(0+128)
  3497  024B  0A84               	incf	4,f
  3498  024C  0800               	movf	0,w
  3499  024D  00CD               	movwf	(sprintf@fval+3)^(0+128)
  3500  024E                     l3200:
  3501  024E  3004               	movlw	4
  3502  024F  00B1               	movwf	??_sprintf^(0+128)
  3503  0250  0831               	movf	??_sprintf^(0+128),w
  3504  0251  07BA               	addwf	sprintf@ap^(0+128),f
  3505  0252                     l3202:
  3506                           
  3507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  3508  0252  084D               	movf	(sprintf@fval+3)^(0+128),w
  3509  0253  00F3               	movwf	___flge@ff1+3
  3510  0254  084C               	movf	(sprintf@fval+2)^(0+128),w
  3511  0255  00F2               	movwf	___flge@ff1+2
  3512  0256  084B               	movf	(sprintf@fval+1)^(0+128),w
  3513  0257  00F1               	movwf	___flge@ff1+1
  3514  0258  084A               	movf	sprintf@fval^(0+128),w
  3515  0259  00F0               	movwf	___flge@ff1
  3516  025A  3000               	movlw	0
  3517  025B  00F7               	movwf	___flge@ff2+3
  3518  025C  3000               	movlw	0
  3519  025D  00F6               	movwf	___flge@ff2+2
  3520  025E  3000               	movlw	0
  3521  025F  00F5               	movwf	___flge@ff2+1
  3522  0260  3000               	movlw	0
  3523  0261  00F4               	movwf	___flge@ff2
  3524  0262  160A  158A  2527  120A  118A  	fcall	___flge
  3525  0267  1803               	btfsc	3,0
  3526  0268  2A6A               	goto	u5301
  3527  0269  2A6B               	goto	u5300
  3528  026A                     u5301:
  3529  026A  2A88               	goto	l3208
  3530  026B                     u5300:
  3531  026B                     l3204:
  3532                           
  3533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  3534  026B  1683               	bsf	3,5	;RP0=1, select bank1
  3535  026C  1303               	bcf	3,6	;RP1=0, select bank1
  3536  026D  084D               	movf	(sprintf@fval+3)^(0+128),w
  3537  026E  00F3               	movwf	___flneg@f1+3
  3538  026F  084C               	movf	(sprintf@fval+2)^(0+128),w
  3539  0270  00F2               	movwf	___flneg@f1+2
  3540  0271  084B               	movf	(sprintf@fval+1)^(0+128),w
  3541  0272  00F1               	movwf	___flneg@f1+1
  3542  0273  084A               	movf	sprintf@fval^(0+128),w
  3543  0274  00F0               	movwf	___flneg@f1
  3544  0275  160A  158A  20D6  120A  118A  	fcall	___flneg
  3545  027A  0873               	movf	?___flneg+3,w
  3546  027B  1683               	bsf	3,5	;RP0=1, select bank1
  3547  027C  1303               	bcf	3,6	;RP1=0, select bank1
  3548  027D  00CD               	movwf	(sprintf@fval+3)^(0+128)
  3549  027E  0872               	movf	?___flneg+2,w
  3550  027F  00CC               	movwf	(sprintf@fval+2)^(0+128)
  3551  0280  0871               	movf	?___flneg+1,w
  3552  0281  00CB               	movwf	(sprintf@fval+1)^(0+128)
  3553  0282  0870               	movf	?___flneg,w
  3554  0283  00CA               	movwf	sprintf@fval^(0+128)
  3555  0284                     l3206:
  3556                           
  3557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  3558  0284  3003               	movlw	3
  3559  0285  04BB               	iorwf	sprintf@flag^(0+128),f
  3560  0286  3000               	movlw	0
  3561  0287  04BC               	iorwf	(sprintf@flag+1)^(0+128),f
  3562  0288                     l3208:
  3563                           
  3564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  3565  0288  1683               	bsf	3,5	;RP0=1, select bank1
  3566  0289  1303               	bcf	3,6	;RP1=0, select bank1
  3567  028A  01C1               	clrf	sprintf@eexp^(0+128)
  3568  028B  01C2               	clrf	(sprintf@eexp+1)^(0+128)
  3569  028C                     l3210:
  3570                           
  3571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  3572  028C  084D               	movf	(sprintf@fval+3)^(0+128),w
  3573  028D  00F3               	movwf	___fleq@ff1+3
  3574  028E  084C               	movf	(sprintf@fval+2)^(0+128),w
  3575  028F  00F2               	movwf	___fleq@ff1+2
  3576  0290  084B               	movf	(sprintf@fval+1)^(0+128),w
  3577  0291  00F1               	movwf	___fleq@ff1+1
  3578  0292  084A               	movf	sprintf@fval^(0+128),w
  3579  0293  00F0               	movwf	___fleq@ff1
  3580  0294  3000               	movlw	0
  3581  0295  00F7               	movwf	___fleq@ff2+3
  3582  0296  3000               	movlw	0
  3583  0297  00F6               	movwf	___fleq@ff2+2
  3584  0298  3000               	movlw	0
  3585  0299  00F5               	movwf	___fleq@ff2+1
  3586  029A  3000               	movlw	0
  3587  029B  00F4               	movwf	___fleq@ff2
  3588  029C  160A  158A  228D  120A  118A  	fcall	___fleq
  3589  02A1  1803               	btfsc	3,0
  3590  02A2  2AA4               	goto	u5311
  3591  02A3  2AA5               	goto	u5310
  3592  02A4                     u5311:
  3593  02A4  2B95               	goto	l3236
  3594  02A5                     u5310:
  3595  02A5                     l3212:
  3596                           
  3597                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  3598  02A5  1003               	clrc
  3599  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  3600  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  3601  02A8  0D4C               	rlf	(sprintf@fval+2)^(0+128),w
  3602  02A9  0D4D               	rlf	(sprintf@fval+3)^(0+128),w
  3603  02AA  3E82               	addlw	130
  3604  02AB  00C1               	movwf	sprintf@eexp^(0+128)
  3605  02AC  30FF               	movlw	255
  3606  02AD  1803               	skipnc
  3607  02AE  3000               	movlw	0
  3608  02AF  00C2               	movwf	(sprintf@eexp^(0+128)+1)
  3609  02B0                     l3214:
  3610                           
  3611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  3612  02B0  30FF               	movlw	255
  3613  02B1  07C1               	addwf	sprintf@eexp^(0+128),f
  3614  02B2  1803               	skipnc
  3615  02B3  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  3616  02B4  30FF               	movlw	255
  3617  02B5  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  3618  02B6                     l3216:
  3619                           
  3620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  3621  02B6  3003               	movlw	3
  3622  02B7  00F0               	movwf	___wmul@multiplier
  3623  02B8  3000               	movlw	0
  3624  02B9  00F1               	movwf	___wmul@multiplier+1
  3625  02BA  0842               	movf	(sprintf@eexp+1)^(0+128),w
  3626  02BB  00F3               	movwf	___wmul@multiplicand+1
  3627  02BC  0841               	movf	sprintf@eexp^(0+128),w
  3628  02BD  00F2               	movwf	___wmul@multiplicand
  3629  02BE  160A  158A  2169  120A  118A  	fcall	___wmul
  3630  02C3  0871               	movf	?___wmul+1,w
  3631  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  3632  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  3633  02C6  00C2               	movwf	(sprintf@eexp+1)^(0+128)
  3634  02C7  0870               	movf	?___wmul,w
  3635  02C8  00C1               	movwf	sprintf@eexp^(0+128)
  3636  02C9                     l3218:
  3637                           
  3638                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  3639  02C9  300A               	movlw	10
  3640  02CA  00F7               	movwf	___awdiv@divisor
  3641  02CB  3000               	movlw	0
  3642  02CC  00F8               	movwf	___awdiv@divisor+1
  3643  02CD  0842               	movf	(sprintf@eexp+1)^(0+128),w
  3644  02CE  00FA               	movwf	___awdiv@dividend+1
  3645  02CF  0841               	movf	sprintf@eexp^(0+128),w
  3646  02D0  00F9               	movwf	___awdiv@dividend
  3647  02D1  120A  158A  20D7  120A  118A  	fcall	___awdiv
  3648  02D6  0878               	movf	?___awdiv+1,w
  3649  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  3650  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  3651  02D9  00C2               	movwf	(sprintf@eexp+1)^(0+128)
  3652  02DA  0877               	movf	?___awdiv,w
  3653  02DB  00C1               	movwf	sprintf@eexp^(0+128)
  3654  02DC                     l3220:
  3655                           
  3656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  3657  02DC  1FC2               	btfss	(sprintf@eexp+1)^(0+128),7
  3658  02DD  2ADF               	goto	u5321
  3659  02DE  2AE0               	goto	u5320
  3660  02DF                     u5321:
  3661  02DF  2AE6               	goto	l3224
  3662  02E0                     u5320:
  3663  02E0                     l3222:
  3664                           
  3665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  3666  02E0  30FF               	movlw	255
  3667  02E1  07C1               	addwf	sprintf@eexp^(0+128),f
  3668  02E2  1803               	skipnc
  3669  02E3  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  3670  02E4  30FF               	movlw	255
  3671  02E5  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  3672  02E6                     l3224:
  3673                           
  3674                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  3675  02E6  0341               	decf	sprintf@eexp^(0+128),w
  3676  02E7  3AFF               	xorlw	255
  3677  02E8  120A  158A  2140  120A  118A  	fcall	_scale
  3678  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  3679  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  3680  02EF  084F               	movf	?_scale+3,w
  3681  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  3682  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  3683  02F2  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  3684  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  3685  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  3686  02F5  084E               	movf	?_scale+2,w
  3687  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  3688  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  3689  02F8  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  3690  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  3691  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  3692  02FB  084D               	movf	?_scale+1,w
  3693  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  3694  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  3695  02FE  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  3696  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  3697  0300  1303               	bcf	3,6	;RP1=0, select bank0
  3698  0301  084C               	movf	?_scale,w
  3699  0302  1683               	bsf	3,5	;RP0=1, select bank1
  3700  0303  1303               	bcf	3,6	;RP1=0, select bank1
  3701  0304  00C3               	movwf	sprintf@tmpval^(0+128)
  3702  0305                     l3226:
  3703                           
  3704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  3705  0305  084D               	movf	(sprintf@fval+3)^(0+128),w
  3706  0306  1283               	bcf	3,5	;RP0=0, select bank0
  3707  0307  1303               	bcf	3,6	;RP1=0, select bank0
  3708  0308  00B5               	movwf	___flmul@b+3
  3709  0309  1683               	bsf	3,5	;RP0=1, select bank1
  3710  030A  1303               	bcf	3,6	;RP1=0, select bank1
  3711  030B  084C               	movf	(sprintf@fval+2)^(0+128),w
  3712  030C  1283               	bcf	3,5	;RP0=0, select bank0
  3713  030D  1303               	bcf	3,6	;RP1=0, select bank0
  3714  030E  00B4               	movwf	___flmul@b+2
  3715  030F  1683               	bsf	3,5	;RP0=1, select bank1
  3716  0310  1303               	bcf	3,6	;RP1=0, select bank1
  3717  0311  084B               	movf	(sprintf@fval+1)^(0+128),w
  3718  0312  1283               	bcf	3,5	;RP0=0, select bank0
  3719  0313  1303               	bcf	3,6	;RP1=0, select bank0
  3720  0314  00B3               	movwf	___flmul@b+1
  3721  0315  1683               	bsf	3,5	;RP0=1, select bank1
  3722  0316  1303               	bcf	3,6	;RP1=0, select bank1
  3723  0317  084A               	movf	sprintf@fval^(0+128),w
  3724  0318  1283               	bcf	3,5	;RP0=0, select bank0
  3725  0319  1303               	bcf	3,6	;RP1=0, select bank0
  3726  031A  00B2               	movwf	___flmul@b
  3727  031B  1683               	bsf	3,5	;RP0=1, select bank1
  3728  031C  1303               	bcf	3,6	;RP1=0, select bank1
  3729  031D  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  3730  031E  1283               	bcf	3,5	;RP0=0, select bank0
  3731  031F  1303               	bcf	3,6	;RP1=0, select bank0
  3732  0320  00B9               	movwf	___flmul@a+3
  3733  0321  1683               	bsf	3,5	;RP0=1, select bank1
  3734  0322  1303               	bcf	3,6	;RP1=0, select bank1
  3735  0323  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  3736  0324  1283               	bcf	3,5	;RP0=0, select bank0
  3737  0325  1303               	bcf	3,6	;RP1=0, select bank0
  3738  0326  00B8               	movwf	___flmul@a+2
  3739  0327  1683               	bsf	3,5	;RP0=1, select bank1
  3740  0328  1303               	bcf	3,6	;RP1=0, select bank1
  3741  0329  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  3742  032A  1283               	bcf	3,5	;RP0=0, select bank0
  3743  032B  1303               	bcf	3,6	;RP1=0, select bank0
  3744  032C  00B7               	movwf	___flmul@a+1
  3745  032D  1683               	bsf	3,5	;RP0=1, select bank1
  3746  032E  1303               	bcf	3,6	;RP1=0, select bank1
  3747  032F  0843               	movf	sprintf@tmpval^(0+128),w
  3748  0330  1283               	bcf	3,5	;RP0=0, select bank0
  3749  0331  1303               	bcf	3,6	;RP1=0, select bank0
  3750  0332  00B6               	movwf	___flmul@a
  3751  0333  120A  158A  249F  120A  118A  	fcall	___flmul
  3752  0338  1283               	bcf	3,5	;RP0=0, select bank0
  3753  0339  1303               	bcf	3,6	;RP1=0, select bank0
  3754  033A  0835               	movf	?___flmul+3,w
  3755  033B  1683               	bsf	3,5	;RP0=1, select bank1
  3756  033C  1303               	bcf	3,6	;RP1=0, select bank1
  3757  033D  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  3758  033E  1283               	bcf	3,5	;RP0=0, select bank0
  3759  033F  1303               	bcf	3,6	;RP1=0, select bank0
  3760  0340  0834               	movf	?___flmul+2,w
  3761  0341  1683               	bsf	3,5	;RP0=1, select bank1
  3762  0342  1303               	bcf	3,6	;RP1=0, select bank1
  3763  0343  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  3764  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3765  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3766  0346  0833               	movf	?___flmul+1,w
  3767  0347  1683               	bsf	3,5	;RP0=1, select bank1
  3768  0348  1303               	bcf	3,6	;RP1=0, select bank1
  3769  0349  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  3770  034A  1283               	bcf	3,5	;RP0=0, select bank0
  3771  034B  1303               	bcf	3,6	;RP1=0, select bank0
  3772  034C  0832               	movf	?___flmul,w
  3773  034D  1683               	bsf	3,5	;RP0=1, select bank1
  3774  034E  1303               	bcf	3,6	;RP1=0, select bank1
  3775  034F  00C3               	movwf	sprintf@tmpval^(0+128)
  3776  0350                     l3228:
  3777                           
  3778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  3779  0350  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  3780  0351  00F3               	movwf	___flge@ff1+3
  3781  0352  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  3782  0353  00F2               	movwf	___flge@ff1+2
  3783  0354  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  3784  0355  00F1               	movwf	___flge@ff1+1
  3785  0356  0843               	movf	sprintf@tmpval^(0+128),w
  3786  0357  00F0               	movwf	___flge@ff1
  3787  0358  303F               	movlw	63
  3788  0359  00F7               	movwf	___flge@ff2+3
  3789  035A  3080               	movlw	128
  3790  035B  00F6               	movwf	___flge@ff2+2
  3791  035C  3000               	movlw	0
  3792  035D  00F5               	movwf	___flge@ff2+1
  3793  035E  3000               	movlw	0
  3794  035F  00F4               	movwf	___flge@ff2
  3795  0360  160A  158A  2527  120A  118A  	fcall	___flge
  3796  0365  1803               	btfsc	3,0
  3797  0366  2B68               	goto	u5331
  3798  0367  2B69               	goto	u5330
  3799  0368                     u5331:
  3800  0368  2B72               	goto	l3232
  3801  0369                     u5330:
  3802  0369                     l3230:
  3803                           
  3804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3805  0369  30FF               	movlw	255
  3806  036A  1683               	bsf	3,5	;RP0=1, select bank1
  3807  036B  1303               	bcf	3,6	;RP1=0, select bank1
  3808  036C  07C1               	addwf	sprintf@eexp^(0+128),f
  3809  036D  1803               	skipnc
  3810  036E  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  3811  036F  30FF               	movlw	255
  3812  0370  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  3813  0371  2B95               	goto	l3236
  3814  0372                     l3232:
  3815  0372  1683               	bsf	3,5	;RP0=1, select bank1
  3816  0373  1303               	bcf	3,6	;RP1=0, select bank1
  3817  0374  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  3818  0375  00F3               	movwf	___flge@ff1+3
  3819  0376  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  3820  0377  00F2               	movwf	___flge@ff1+2
  3821  0378  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  3822  0379  00F1               	movwf	___flge@ff1+1
  3823  037A  0843               	movf	sprintf@tmpval^(0+128),w
  3824  037B  00F0               	movwf	___flge@ff1
  3825  037C  3041               	movlw	65
  3826  037D  00F7               	movwf	___flge@ff2+3
  3827  037E  3020               	movlw	32
  3828  037F  00F6               	movwf	___flge@ff2+2
  3829  0380  3000               	movlw	0
  3830  0381  00F5               	movwf	___flge@ff2+1
  3831  0382  3000               	movlw	0
  3832  0383  00F4               	movwf	___flge@ff2
  3833  0384  160A  158A  2527  120A  118A  	fcall	___flge
  3834  0389  1C03               	btfss	3,0
  3835  038A  2B8C               	goto	u5341
  3836  038B  2B8D               	goto	u5340
  3837  038C                     u5341:
  3838  038C  2B95               	goto	l3236
  3839  038D                     u5340:
  3840  038D                     l3234:
  3841                           
  3842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3843  038D  3001               	movlw	1
  3844  038E  1683               	bsf	3,5	;RP0=1, select bank1
  3845  038F  1303               	bcf	3,6	;RP1=0, select bank1
  3846  0390  07C1               	addwf	sprintf@eexp^(0+128),f
  3847  0391  1803               	skipnc
  3848  0392  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  3849  0393  3000               	movlw	0
  3850  0394  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  3851  0395                     l3236:
  3852                           
  3853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3854  0395  1683               	bsf	3,5	;RP0=1, select bank1
  3855  0396  1303               	bcf	3,6	;RP1=0, select bank1
  3856  0397  0848               	movf	(sprintf@prec+1)^(0+128),w
  3857  0398  3A80               	xorlw	128
  3858  0399  00FF               	movwf	btemp+1
  3859  039A  3080               	movlw	128
  3860  039B  027F               	subwf	btemp+1,w
  3861  039C  1D03               	skipz
  3862  039D  2BA0               	goto	u5355
  3863  039E  300D               	movlw	13
  3864  039F  0247               	subwf	sprintf@prec^(0+128),w
  3865  03A0                     u5355:
  3866  03A0  1803               	skipnc
  3867  03A1  2BA3               	goto	u5351
  3868  03A2  2BA4               	goto	u5350
  3869  03A3                     u5351:
  3870  03A3  2BEB               	goto	l3240
  3871  03A4                     u5350:
  3872  03A4                     l3238:
  3873                           
  3874                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  3875  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  3876  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  3877  03A6  0847               	movf	sprintf@prec^(0+128),w
  3878  03A7  160A  118A  22B5  120A  118A  	fcall	_fround
  3879  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  3880  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  3881  03AE  084F               	movf	?_fround+3,w
  3882  03AF  00E3               	movwf	___fladd@b+3
  3883  03B0  084E               	movf	?_fround+2,w
  3884  03B1  00E2               	movwf	___fladd@b+2
  3885  03B2  084D               	movf	?_fround+1,w
  3886  03B3  00E1               	movwf	___fladd@b+1
  3887  03B4  084C               	movf	?_fround,w
  3888  03B5  00E0               	movwf	___fladd@b
  3889  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  3890  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  3891  03B8  084D               	movf	(sprintf@fval+3)^(0+128),w
  3892  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  3893  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  3894  03BB  00E7               	movwf	___fladd@a+3
  3895  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  3896  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  3897  03BE  084C               	movf	(sprintf@fval+2)^(0+128),w
  3898  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  3899  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  3900  03C1  00E6               	movwf	___fladd@a+2
  3901  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  3902  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  3903  03C4  084B               	movf	(sprintf@fval+1)^(0+128),w
  3904  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  3905  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  3906  03C7  00E5               	movwf	___fladd@a+1
  3907  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  3908  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  3909  03CA  084A               	movf	sprintf@fval^(0+128),w
  3910  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  3911  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  3912  03CD  00E4               	movwf	___fladd@a
  3913  03CE  160A  118A  24C0  120A  118A  	fcall	___fladd
  3914  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  3915  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  3916  03D5  0863               	movf	?___fladd+3,w
  3917  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  3918  03D7  1303               	bcf	3,6	;RP1=0, select bank1
  3919  03D8  00CD               	movwf	(sprintf@fval+3)^(0+128)
  3920  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  3921  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  3922  03DB  0862               	movf	?___fladd+2,w
  3923  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  3924  03DD  1303               	bcf	3,6	;RP1=0, select bank1
  3925  03DE  00CC               	movwf	(sprintf@fval+2)^(0+128)
  3926  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  3927  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  3928  03E1  0861               	movf	?___fladd+1,w
  3929  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  3930  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  3931  03E4  00CB               	movwf	(sprintf@fval+1)^(0+128)
  3932  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  3933  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  3934  03E7  0860               	movf	?___fladd,w
  3935  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  3936  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  3937  03EA  00CA               	movwf	sprintf@fval^(0+128)
  3938  03EB                     l3240:
  3939                           
  3940                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3941  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  3942  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  3943  03ED  0842               	movf	(sprintf@eexp+1)^(0+128),w
  3944  03EE  3A80               	xorlw	128
  3945  03EF  00FF               	movwf	btemp+1
  3946  03F0  3080               	movlw	128
  3947  03F1  027F               	subwf	btemp+1,w
  3948  03F2  1D03               	skipz
  3949  03F3  2BF6               	goto	u5365
  3950  03F4  300A               	movlw	10
  3951  03F5  0241               	subwf	sprintf@eexp^(0+128),w
  3952  03F6                     u5365:
  3953  03F6  1803               	skipnc
  3954  03F7  2BF9               	goto	u5361
  3955  03F8  2BFA               	goto	u5360
  3956  03F9                     u5361:
  3957  03F9  2C4B               	goto	l3248
  3958  03FA                     u5360:
  3959  03FA                     l3242:
  3960  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  3961  03FB  1303               	bcf	3,6	;RP1=0, select bank1
  3962  03FC  084D               	movf	(sprintf@fval+3)^(0+128),w
  3963  03FD  00F3               	movwf	___fleq@ff1+3
  3964  03FE  084C               	movf	(sprintf@fval+2)^(0+128),w
  3965  03FF  00F2               	movwf	___fleq@ff1+2
  3966  0400  084B               	movf	(sprintf@fval+1)^(0+128),w
  3967  0401  00F1               	movwf	___fleq@ff1+1
  3968  0402  084A               	movf	sprintf@fval^(0+128),w
  3969  0403  00F0               	movwf	___fleq@ff1
  3970  0404  3000               	movlw	0
  3971  0405  00F7               	movwf	___fleq@ff2+3
  3972  0406  3000               	movlw	0
  3973  0407  00F6               	movwf	___fleq@ff2+2
  3974  0408  3000               	movlw	0
  3975  0409  00F5               	movwf	___fleq@ff2+1
  3976  040A  3000               	movlw	0
  3977  040B  00F4               	movwf	___fleq@ff2
  3978  040C  160A  158A  228D  120A  118A  	fcall	___fleq
  3979  0411  1803               	btfsc	3,0
  3980  0412  2C14               	goto	u5371
  3981  0413  2C15               	goto	u5370
  3982  0414                     u5371:
  3983  0414  2CBD               	goto	l3262
  3984  0415                     u5370:
  3985  0415                     l3244:
  3986  0415  1683               	bsf	3,5	;RP0=1, select bank1
  3987  0416  1303               	bcf	3,6	;RP1=0, select bank1
  3988  0417  084D               	movf	(sprintf@fval+3)^(0+128),w
  3989  0418  1283               	bcf	3,5	;RP0=0, select bank0
  3990  0419  1303               	bcf	3,6	;RP1=0, select bank0
  3991  041A  00E2               	movwf	___fltol@f1+3
  3992  041B  1683               	bsf	3,5	;RP0=1, select bank1
  3993  041C  1303               	bcf	3,6	;RP1=0, select bank1
  3994  041D  084C               	movf	(sprintf@fval+2)^(0+128),w
  3995  041E  1283               	bcf	3,5	;RP0=0, select bank0
  3996  041F  1303               	bcf	3,6	;RP1=0, select bank0
  3997  0420  00E1               	movwf	___fltol@f1+2
  3998  0421  1683               	bsf	3,5	;RP0=1, select bank1
  3999  0422  1303               	bcf	3,6	;RP1=0, select bank1
  4000  0423  084B               	movf	(sprintf@fval+1)^(0+128),w
  4001  0424  1283               	bcf	3,5	;RP0=0, select bank0
  4002  0425  1303               	bcf	3,6	;RP1=0, select bank0
  4003  0426  00E0               	movwf	___fltol@f1+1
  4004  0427  1683               	bsf	3,5	;RP0=1, select bank1
  4005  0428  1303               	bcf	3,6	;RP1=0, select bank1
  4006  0429  084A               	movf	sprintf@fval^(0+128),w
  4007  042A  1283               	bcf	3,5	;RP0=0, select bank0
  4008  042B  1303               	bcf	3,6	;RP1=0, select bank0
  4009  042C  00DF               	movwf	___fltol@f1
  4010  042D  160A  158A  24AB  120A  118A  	fcall	___fltol
  4011  0432  1283               	bcf	3,5	;RP0=0, select bank0
  4012  0433  1303               	bcf	3,6	;RP1=0, select bank0
  4013  0434  0862               	movf	?___fltol+3,w
  4014  0435  0461               	iorwf	?___fltol+2,w
  4015  0436  0460               	iorwf	?___fltol+1,w
  4016  0437  045F               	iorwf	?___fltol,w
  4017  0438  1D03               	skipz
  4018  0439  2C3B               	goto	u5381
  4019  043A  2C3C               	goto	u5380
  4020  043B                     u5381:
  4021  043B  2CBD               	goto	l3262
  4022  043C                     u5380:
  4023  043C                     l3246:
  4024  043C  1683               	bsf	3,5	;RP0=1, select bank1
  4025  043D  1303               	bcf	3,6	;RP1=0, select bank1
  4026  043E  0842               	movf	(sprintf@eexp+1)^(0+128),w
  4027  043F  3A80               	xorlw	128
  4028  0440  00FF               	movwf	btemp+1
  4029  0441  3080               	movlw	128
  4030  0442  027F               	subwf	btemp+1,w
  4031  0443  1D03               	skipz
  4032  0444  2C47               	goto	u5395
  4033  0445  3002               	movlw	2
  4034  0446  0241               	subwf	sprintf@eexp^(0+128),w
  4035  0447                     u5395:
  4036  0447  1C03               	skipc
  4037  0448  2C4A               	goto	u5391
  4038  0449  2C4B               	goto	u5390
  4039  044A                     u5391:
  4040  044A  2CBD               	goto	l3262
  4041  044B                     u5390:
  4042  044B                     l3248:
  4043                           
  4044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  4045  044B  1683               	bsf	3,5	;RP0=1, select bank1
  4046  044C  1303               	bcf	3,6	;RP1=0, select bank1
  4047  044D  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  4048  044E  00F3               	movwf	___flge@ff1+3
  4049  044F  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  4050  0450  00F2               	movwf	___flge@ff1+2
  4051  0451  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  4052  0452  00F1               	movwf	___flge@ff1+1
  4053  0453  0843               	movf	sprintf@tmpval^(0+128),w
  4054  0454  00F0               	movwf	___flge@ff1
  4055  0455  3040               	movlw	64
  4056  0456  00F7               	movwf	___flge@ff2+3
  4057  0457  3089               	movlw	137
  4058  0458  00F6               	movwf	___flge@ff2+2
  4059  0459  3070               	movlw	112
  4060  045A  00F5               	movwf	___flge@ff2+1
  4061  045B  305F               	movlw	95
  4062  045C  00F4               	movwf	___flge@ff2
  4063  045D  160A  158A  2527  120A  118A  	fcall	___flge
  4064  0462  1803               	btfsc	3,0
  4065  0463  2C65               	goto	u5401
  4066  0464  2C66               	goto	u5400
  4067  0465                     u5401:
  4068  0465  2C6F               	goto	l3252
  4069  0466                     u5400:
  4070  0466                     l3250:
  4071                           
  4072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  4073  0466  30F7               	movlw	247
  4074  0467  1683               	bsf	3,5	;RP0=1, select bank1
  4075  0468  1303               	bcf	3,6	;RP1=0, select bank1
  4076  0469  07C1               	addwf	sprintf@eexp^(0+128),f
  4077  046A  1803               	skipnc
  4078  046B  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  4079  046C  30FF               	movlw	255
  4080  046D  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  4081                           
  4082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  4083  046E  2C77               	goto	l3254
  4084  046F                     l3252:
  4085                           
  4086                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  4087  046F  30F8               	movlw	248
  4088  0470  1683               	bsf	3,5	;RP0=1, select bank1
  4089  0471  1303               	bcf	3,6	;RP1=0, select bank1
  4090  0472  07C1               	addwf	sprintf@eexp^(0+128),f
  4091  0473  1803               	skipnc
  4092  0474  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  4093  0475  30FF               	movlw	255
  4094  0476  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  4095  0477                     l3254:
  4096                           
  4097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  4098  0477  0841               	movf	sprintf@eexp^(0+128),w
  4099  0478  120A  158A  2140  120A  118A  	fcall	_scale
  4100  047D  1283               	bcf	3,5	;RP0=0, select bank0
  4101  047E  1303               	bcf	3,6	;RP1=0, select bank0
  4102  047F  084F               	movf	?_scale+3,w
  4103  0480  1683               	bsf	3,5	;RP0=1, select bank1
  4104  0481  1303               	bcf	3,6	;RP1=0, select bank1
  4105  0482  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  4106  0483  1283               	bcf	3,5	;RP0=0, select bank0
  4107  0484  1303               	bcf	3,6	;RP1=0, select bank0
  4108  0485  084E               	movf	?_scale+2,w
  4109  0486  1683               	bsf	3,5	;RP0=1, select bank1
  4110  0487  1303               	bcf	3,6	;RP1=0, select bank1
  4111  0488  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  4112  0489  1283               	bcf	3,5	;RP0=0, select bank0
  4113  048A  1303               	bcf	3,6	;RP1=0, select bank0
  4114  048B  084D               	movf	?_scale+1,w
  4115  048C  1683               	bsf	3,5	;RP0=1, select bank1
  4116  048D  1303               	bcf	3,6	;RP1=0, select bank1
  4117  048E  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  4118  048F  1283               	bcf	3,5	;RP0=0, select bank0
  4119  0490  1303               	bcf	3,6	;RP1=0, select bank0
  4120  0491  084C               	movf	?_scale,w
  4121  0492  1683               	bsf	3,5	;RP0=1, select bank1
  4122  0493  1303               	bcf	3,6	;RP1=0, select bank1
  4123  0494  00C3               	movwf	sprintf@tmpval^(0+128)
  4124  0495                     l3256:
  4125  0495  084D               	movf	(sprintf@fval+3)^(0+128),w
  4126  0496  00F3               	movwf	__div_to_l_@f1+3
  4127  0497  084C               	movf	(sprintf@fval+2)^(0+128),w
  4128  0498  00F2               	movwf	__div_to_l_@f1+2
  4129  0499  084B               	movf	(sprintf@fval+1)^(0+128),w
  4130  049A  00F1               	movwf	__div_to_l_@f1+1
  4131  049B  084A               	movf	sprintf@fval^(0+128),w
  4132  049C  00F0               	movwf	__div_to_l_@f1
  4133  049D  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  4134  049E  00F7               	movwf	__div_to_l_@f2+3
  4135  049F  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  4136  04A0  00F6               	movwf	__div_to_l_@f2+2
  4137  04A1  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  4138  04A2  00F5               	movwf	__div_to_l_@f2+1
  4139  04A3  0843               	movf	sprintf@tmpval^(0+128),w
  4140  04A4  00F4               	movwf	__div_to_l_@f2
  4141  04A5  160A  158A  2742  120A  118A  	fcall	__div_to_l_
  4142  04AA  0873               	movf	?__div_to_l_+3,w
  4143  04AB  1683               	bsf	3,5	;RP0=1, select bank1
  4144  04AC  1303               	bcf	3,6	;RP1=0, select bank1
  4145  04AD  00C0               	movwf	(sprintf@val+3)^(0+128)
  4146  04AE  0872               	movf	?__div_to_l_+2,w
  4147  04AF  00BF               	movwf	(sprintf@val+2)^(0+128)
  4148  04B0  0871               	movf	?__div_to_l_+1,w
  4149  04B1  00BE               	movwf	(sprintf@val+1)^(0+128)
  4150  04B2  0870               	movf	?__div_to_l_,w
  4151  04B3  00BD               	movwf	sprintf@val^(0+128)
  4152  04B4                     l3260:
  4153                           
  4154                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  4155  04B4  3000               	movlw	0
  4156  04B5  00CD               	movwf	(sprintf@fval+3)^(0+128)
  4157  04B6  3000               	movlw	0
  4158  04B7  00CC               	movwf	(sprintf@fval+2)^(0+128)
  4159  04B8  3000               	movlw	0
  4160  04B9  00CB               	movwf	(sprintf@fval+1)^(0+128)
  4161  04BA  3000               	movlw	0
  4162  04BB  00CA               	movwf	sprintf@fval^(0+128)
  4163                           
  4164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  4165  04BC  2D3F               	goto	l3268
  4166  04BD                     l3262:
  4167                           
  4168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  4169  04BD  1683               	bsf	3,5	;RP0=1, select bank1
  4170  04BE  1303               	bcf	3,6	;RP1=0, select bank1
  4171  04BF  084D               	movf	(sprintf@fval+3)^(0+128),w
  4172  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  4173  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  4174  04C2  00E2               	movwf	___fltol@f1+3
  4175  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  4176  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  4177  04C5  084C               	movf	(sprintf@fval+2)^(0+128),w
  4178  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  4179  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  4180  04C8  00E1               	movwf	___fltol@f1+2
  4181  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  4182  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  4183  04CB  084B               	movf	(sprintf@fval+1)^(0+128),w
  4184  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  4185  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  4186  04CE  00E0               	movwf	___fltol@f1+1
  4187  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  4188  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  4189  04D1  084A               	movf	sprintf@fval^(0+128),w
  4190  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  4191  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  4192  04D4  00DF               	movwf	___fltol@f1
  4193  04D5  160A  158A  24AB  120A  118A  	fcall	___fltol
  4194  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  4195  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  4196  04DC  0862               	movf	?___fltol+3,w
  4197  04DD  1683               	bsf	3,5	;RP0=1, select bank1
  4198  04DE  1303               	bcf	3,6	;RP1=0, select bank1
  4199  04DF  00C0               	movwf	(sprintf@val+3)^(0+128)
  4200  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  4201  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  4202  04E2  0861               	movf	?___fltol+2,w
  4203  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  4204  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  4205  04E5  00BF               	movwf	(sprintf@val+2)^(0+128)
  4206  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  4207  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  4208  04E8  0860               	movf	?___fltol+1,w
  4209  04E9  1683               	bsf	3,5	;RP0=1, select bank1
  4210  04EA  1303               	bcf	3,6	;RP1=0, select bank1
  4211  04EB  00BE               	movwf	(sprintf@val+1)^(0+128)
  4212  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  4213  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  4214  04EE  085F               	movf	?___fltol,w
  4215  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  4216  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  4217  04F1  00BD               	movwf	sprintf@val^(0+128)
  4218  04F2                     l3264:
  4219                           
  4220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  4221  04F2  0840               	movf	(sprintf@val+3)^(0+128),w
  4222  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  4223  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  4224  04F5  00A7               	movwf	___xxtofl@val+3
  4225  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  4226  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  4227  04F8  083F               	movf	(sprintf@val+2)^(0+128),w
  4228  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  4229  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  4230  04FB  00A6               	movwf	___xxtofl@val+2
  4231  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  4232  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  4233  04FE  083E               	movf	(sprintf@val+1)^(0+128),w
  4234  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  4235  0500  1303               	bcf	3,6	;RP1=0, select bank0
  4236  0501  00A5               	movwf	___xxtofl@val+1
  4237  0502  1683               	bsf	3,5	;RP0=1, select bank1
  4238  0503  1303               	bcf	3,6	;RP1=0, select bank1
  4239  0504  083D               	movf	sprintf@val^(0+128),w
  4240  0505  1283               	bcf	3,5	;RP0=0, select bank0
  4241  0506  1303               	bcf	3,6	;RP1=0, select bank0
  4242  0507  00A4               	movwf	___xxtofl@val
  4243  0508  3000               	movlw	0
  4244  0509  160A  158A  25C9  120A  118A  	fcall	___xxtofl
  4245  050E  1283               	bcf	3,5	;RP0=0, select bank0
  4246  050F  1303               	bcf	3,6	;RP1=0, select bank0
  4247  0510  0827               	movf	?___xxtofl+3,w
  4248  0511  1683               	bsf	3,5	;RP0=1, select bank1
  4249  0512  1303               	bcf	3,6	;RP1=0, select bank1
  4250  0513  00A7               	movwf	(___flsub@a+3)^(0+128)
  4251  0514  1283               	bcf	3,5	;RP0=0, select bank0
  4252  0515  1303               	bcf	3,6	;RP1=0, select bank0
  4253  0516  0826               	movf	?___xxtofl+2,w
  4254  0517  1683               	bsf	3,5	;RP0=1, select bank1
  4255  0518  1303               	bcf	3,6	;RP1=0, select bank1
  4256  0519  00A6               	movwf	(___flsub@a+2)^(0+128)
  4257  051A  1283               	bcf	3,5	;RP0=0, select bank0
  4258  051B  1303               	bcf	3,6	;RP1=0, select bank0
  4259  051C  0825               	movf	?___xxtofl+1,w
  4260  051D  1683               	bsf	3,5	;RP0=1, select bank1
  4261  051E  1303               	bcf	3,6	;RP1=0, select bank1
  4262  051F  00A5               	movwf	(___flsub@a+1)^(0+128)
  4263  0520  1283               	bcf	3,5	;RP0=0, select bank0
  4264  0521  1303               	bcf	3,6	;RP1=0, select bank0
  4265  0522  0824               	movf	?___xxtofl,w
  4266  0523  1683               	bsf	3,5	;RP0=1, select bank1
  4267  0524  1303               	bcf	3,6	;RP1=0, select bank1
  4268  0525  00A4               	movwf	___flsub@a^(0+128)
  4269  0526  084D               	movf	(sprintf@fval+3)^(0+128),w
  4270  0527  00AB               	movwf	(___flsub@b+3)^(0+128)
  4271  0528  084C               	movf	(sprintf@fval+2)^(0+128),w
  4272  0529  00AA               	movwf	(___flsub@b+2)^(0+128)
  4273  052A  084B               	movf	(sprintf@fval+1)^(0+128),w
  4274  052B  00A9               	movwf	(___flsub@b+1)^(0+128)
  4275  052C  084A               	movf	sprintf@fval^(0+128),w
  4276  052D  00A8               	movwf	___flsub@b^(0+128)
  4277  052E  160A  158A  22DB  120A  118A  	fcall	___flsub
  4278  0533  1683               	bsf	3,5	;RP0=1, select bank1
  4279  0534  1303               	bcf	3,6	;RP1=0, select bank1
  4280  0535  0827               	movf	(?___flsub+3)^(0+128),w
  4281  0536  00CD               	movwf	(sprintf@fval+3)^(0+128)
  4282  0537  0826               	movf	(?___flsub+2)^(0+128),w
  4283  0538  00CC               	movwf	(sprintf@fval+2)^(0+128)
  4284  0539  0825               	movf	(?___flsub+1)^(0+128),w
  4285  053A  00CB               	movwf	(sprintf@fval+1)^(0+128)
  4286  053B  0824               	movf	?___flsub^(0+128),w
  4287  053C  00CA               	movwf	sprintf@fval^(0+128)
  4288  053D                     l3266:
  4289                           
  4290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  4291  053D  01C1               	clrf	sprintf@eexp^(0+128)
  4292  053E  01C2               	clrf	(sprintf@eexp+1)^(0+128)
  4293  053F                     l3268:
  4294                           
  4295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  4296  053F  01CE               	clrf	sprintf@c^(0+128)
  4297  0540  0ACE               	incf	sprintf@c^(0+128),f
  4298  0541                     l3274:
  4299                           
  4300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  4301  0541  084E               	movf	sprintf@c^(0+128),w
  4302  0542  00B1               	movwf	??_sprintf^(0+128)
  4303  0543  3001               	movlw	1
  4304  0544                     u5415:
  4305  0544  1003               	clrc
  4306  0545  0DB1               	rlf	??_sprintf^(0+128),f
  4307  0546  3EFF               	addlw	-1
  4308  0547  1D03               	skipz
  4309  0548  2D44               	goto	u5415
  4310  0549  1003               	clrc
  4311  054A  0D31               	rlf	??_sprintf^(0+128),w
  4312  054B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4313  054C  0084               	movwf	4
  4314  054D  120A  158A  200A  120A  118A  	fcall	stringdir
  4315  0552  00B2               	movwf	(??_sprintf+1)^(0+128)
  4316  0553  120A  158A  200A  120A  118A  	fcall	stringdir
  4317  0558  00B3               	movwf	((??_sprintf+1)^(0+128)+1)
  4318  0559  120A  158A  200A  120A  118A  	fcall	stringdir
  4319  055E  00B4               	movwf	((??_sprintf+1)^(0+128)+2)
  4320  055F  120A  158A  200A  120A  118A  	fcall	stringdir
  4321  0564  00B5               	movwf	((??_sprintf+1)^(0+128)+3)
  4322  0565  0835               	movf	(??_sprintf+4)^(0+128),w
  4323  0566  0240               	subwf	(sprintf@val+3)^(0+128),w
  4324  0567  1D03               	skipz
  4325  0568  2D73               	goto	u5425
  4326  0569  0834               	movf	(??_sprintf+3)^(0+128),w
  4327  056A  023F               	subwf	(sprintf@val+2)^(0+128),w
  4328  056B  1D03               	skipz
  4329  056C  2D73               	goto	u5425
  4330  056D  0833               	movf	(??_sprintf+2)^(0+128),w
  4331  056E  023E               	subwf	(sprintf@val+1)^(0+128),w
  4332  056F  1D03               	skipz
  4333  0570  2D73               	goto	u5425
  4334  0571  0832               	movf	(??_sprintf+1)^(0+128),w
  4335  0572  023D               	subwf	sprintf@val^(0+128),w
  4336  0573                     u5425:
  4337  0573  1803               	skipnc
  4338  0574  2D76               	goto	u5421
  4339  0575  2D77               	goto	u5420
  4340  0576                     u5421:
  4341  0576  2D78               	goto	l3278
  4342  0577                     u5420:
  4343  0577  2D82               	goto	l3280
  4344  0578                     l3278:
  4345  0578  3001               	movlw	1
  4346  0579  00B1               	movwf	??_sprintf^(0+128)
  4347  057A  0831               	movf	??_sprintf^(0+128),w
  4348  057B  07CE               	addwf	sprintf@c^(0+128),f
  4349  057C  300A               	movlw	10
  4350  057D  064E               	xorwf	sprintf@c^(0+128),w
  4351  057E  1D03               	btfss	3,2
  4352  057F  2D81               	goto	u5431
  4353  0580  2D82               	goto	u5430
  4354  0581                     u5431:
  4355  0581  2D41               	goto	l3274
  4356  0582                     u5430:
  4357  0582                     l3280:
  4358                           
  4359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  4360  0582  3003               	movlw	3
  4361  0583  053B               	andwf	sprintf@flag^(0+128),w
  4362  0584  00B1               	movwf	??_sprintf^(0+128)
  4363  0585  3000               	movlw	0
  4364  0586  053C               	andwf	(sprintf@flag+1)^(0+128),w
  4365  0587  00B2               	movwf	(??_sprintf+1)^(0+128)
  4366  0588  0831               	movf	??_sprintf^(0+128),w
  4367  0589  0432               	iorwf	(??_sprintf^(0+128)+1),w
  4368  058A  1903               	btfsc	3,2
  4369  058B  2D8D               	goto	u5441
  4370  058C  2D8E               	goto	u5440
  4371  058D                     u5441:
  4372  058D  2E00               	goto	l292
  4373  058E                     u5440:
  4374  058E                     l3282:
  4375                           
  4376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  4377  058E  302D               	movlw	45
  4378  058F  00B1               	movwf	??_sprintf^(0+128)
  4379  0590  0849               	movf	sprintf@sp^(0+128),w
  4380  0591  0084               	movwf	4
  4381  0592  0831               	movf	??_sprintf^(0+128),w
  4382  0593  1383               	bcf	3,7	;select IRP bank0
  4383  0594  0080               	movwf	0
  4384  0595                     l3284:
  4385  0595  3001               	movlw	1
  4386  0596  00B1               	movwf	??_sprintf^(0+128)
  4387  0597  0831               	movf	??_sprintf^(0+128),w
  4388  0598  07C9               	addwf	sprintf@sp^(0+128),f
  4389  0599  2E00               	goto	l292
  4390  059A                     l3286:
  4391                           
  4392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  4393  059A  084E               	movf	sprintf@c^(0+128),w
  4394  059B  00B1               	movwf	??_sprintf^(0+128)
  4395  059C  3001               	movlw	1
  4396  059D                     u5455:
  4397  059D  1003               	clrc
  4398  059E  0DB1               	rlf	??_sprintf^(0+128),f
  4399  059F  3EFF               	addlw	-1
  4400  05A0  1D03               	skipz
  4401  05A1  2D9D               	goto	u5455
  4402  05A2  1003               	clrc
  4403  05A3  0D31               	rlf	??_sprintf^(0+128),w
  4404  05A4  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4405  05A5  0084               	movwf	4
  4406  05A6  120A  158A  200A  120A  118A  	fcall	stringdir
  4407  05AB  00F0               	movwf	___lldiv@divisor
  4408  05AC  120A  158A  200A  120A  118A  	fcall	stringdir
  4409  05B1  00F1               	movwf	___lldiv@divisor+1
  4410  05B2  120A  158A  200A  120A  118A  	fcall	stringdir
  4411  05B7  00F2               	movwf	___lldiv@divisor+2
  4412  05B8  120A  158A  200A  120A  118A  	fcall	stringdir
  4413  05BD  00F3               	movwf	___lldiv@divisor+3
  4414  05BE  0840               	movf	(sprintf@val+3)^(0+128),w
  4415  05BF  00F7               	movwf	___lldiv@dividend+3
  4416  05C0  083F               	movf	(sprintf@val+2)^(0+128),w
  4417  05C1  00F6               	movwf	___lldiv@dividend+2
  4418  05C2  083E               	movf	(sprintf@val+1)^(0+128),w
  4419  05C3  00F5               	movwf	___lldiv@dividend+1
  4420  05C4  083D               	movf	sprintf@val^(0+128),w
  4421  05C5  00F4               	movwf	___lldiv@dividend
  4422  05C6  160A  158A  23D8  120A  118A  	fcall	___lldiv
  4423  05CB  0873               	movf	?___lldiv+3,w
  4424  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  4425  05CD  1303               	bcf	3,6	;RP1=0, select bank1
  4426  05CE  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  4427  05CF  0872               	movf	?___lldiv+2,w
  4428  05D0  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  4429  05D1  0871               	movf	?___lldiv+1,w
  4430  05D2  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  4431  05D3  0870               	movf	?___lldiv,w
  4432  05D4  00C3               	movwf	sprintf@tmpval^(0+128)
  4433  05D5                     l3288:
  4434                           
  4435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  4436  05D5  3000               	movlw	0
  4437  05D6  00F3               	movwf	___llmod@divisor+3
  4438  05D7  3000               	movlw	0
  4439  05D8  00F2               	movwf	___llmod@divisor+2
  4440  05D9  3000               	movlw	0
  4441  05DA  00F1               	movwf	___llmod@divisor+1
  4442  05DB  300A               	movlw	10
  4443  05DC  00F0               	movwf	___llmod@divisor
  4444  05DD  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  4445  05DE  00F7               	movwf	___llmod@dividend+3
  4446  05DF  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  4447  05E0  00F6               	movwf	___llmod@dividend+2
  4448  05E1  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  4449  05E2  00F5               	movwf	___llmod@dividend+1
  4450  05E3  0843               	movf	sprintf@tmpval^(0+128),w
  4451  05E4  00F4               	movwf	___llmod@dividend
  4452  05E5  160A  158A  232B  120A  118A  	fcall	___llmod
  4453  05EA  0873               	movf	?___llmod+3,w
  4454  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  4455  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  4456  05ED  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  4457  05EE  0872               	movf	?___llmod+2,w
  4458  05EF  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  4459  05F0  0871               	movf	?___llmod+1,w
  4460  05F1  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  4461  05F2  0870               	movf	?___llmod,w
  4462  05F3  00C3               	movwf	sprintf@tmpval^(0+128)
  4463  05F4                     l3290:
  4464                           
  4465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  4466  05F4  0843               	movf	sprintf@tmpval^(0+128),w
  4467  05F5  3E30               	addlw	48
  4468  05F6  00B1               	movwf	??_sprintf^(0+128)
  4469  05F7  0849               	movf	sprintf@sp^(0+128),w
  4470  05F8  0084               	movwf	4
  4471  05F9  0831               	movf	??_sprintf^(0+128),w
  4472  05FA  1383               	bcf	3,7	;select IRP bank0
  4473  05FB  0080               	movwf	0
  4474  05FC  3001               	movlw	1
  4475  05FD  00B1               	movwf	??_sprintf^(0+128)
  4476  05FE  0831               	movf	??_sprintf^(0+128),w
  4477  05FF  07C9               	addwf	sprintf@sp^(0+128),f
  4478  0600                     l292:	
  4479                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  4480                           
  4481                           
  4482                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  4483  0600  3001               	movlw	1
  4484  0601  02CE               	subwf	sprintf@c^(0+128),f
  4485  0602  0A4E               	incf	sprintf@c^(0+128),w
  4486  0603  1D03               	btfss	3,2
  4487  0604  2E06               	goto	u5461
  4488  0605  2E07               	goto	u5460
  4489  0606                     u5461:
  4490  0606  2D9A               	goto	l3286
  4491  0607                     u5460:
  4492  0607  2E1B               	goto	l3298
  4493  0608                     l3292:
  4494                           
  4495                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  4496  0608  3030               	movlw	48
  4497  0609  1683               	bsf	3,5	;RP0=1, select bank1
  4498  060A  1303               	bcf	3,6	;RP1=0, select bank1
  4499  060B  00B1               	movwf	??_sprintf^(0+128)
  4500  060C  0849               	movf	sprintf@sp^(0+128),w
  4501  060D  0084               	movwf	4
  4502  060E  0831               	movf	??_sprintf^(0+128),w
  4503  060F  1383               	bcf	3,7	;select IRP bank0
  4504  0610  0080               	movwf	0
  4505  0611                     l3294:
  4506  0611  3001               	movlw	1
  4507  0612  00B1               	movwf	??_sprintf^(0+128)
  4508  0613  0831               	movf	??_sprintf^(0+128),w
  4509  0614  07C9               	addwf	sprintf@sp^(0+128),f
  4510  0615                     l3296:
  4511                           
  4512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  4513  0615  30FF               	movlw	255
  4514  0616  07C1               	addwf	sprintf@eexp^(0+128),f
  4515  0617  1803               	skipnc
  4516  0618  0AC2               	incf	(sprintf@eexp+1)^(0+128),f
  4517  0619  30FF               	movlw	255
  4518  061A  07C2               	addwf	(sprintf@eexp+1)^(0+128),f
  4519  061B                     l3298:
  4520                           
  4521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  4522  061B  0842               	movf	(sprintf@eexp+1)^(0+128),w
  4523  061C  3A80               	xorlw	128
  4524  061D  00FF               	movwf	btemp+1
  4525  061E  3080               	movlw	128
  4526  061F  027F               	subwf	btemp+1,w
  4527  0620  1D03               	skipz
  4528  0621  2E24               	goto	u5475
  4529  0622  3001               	movlw	1
  4530  0623  0241               	subwf	sprintf@eexp^(0+128),w
  4531  0624                     u5475:
  4532  0624  1803               	skipnc
  4533  0625  2E27               	goto	u5471
  4534  0626  2E28               	goto	u5470
  4535  0627                     u5471:
  4536  0627  2E08               	goto	l3292
  4537  0628                     u5470:
  4538  0628                     l3300:
  4539                           
  4540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  4541  0628  1683               	bsf	3,5	;RP0=1, select bank1
  4542  0629  1303               	bcf	3,6	;RP1=0, select bank1
  4543  062A  0848               	movf	(sprintf@prec+1)^(0+128),w
  4544  062B  3A80               	xorlw	128
  4545  062C  00FF               	movwf	btemp+1
  4546  062D  3080               	movlw	128
  4547  062E  027F               	subwf	btemp+1,w
  4548  062F  1D03               	skipz
  4549  0630  2E33               	goto	u5485
  4550  0631  3009               	movlw	9
  4551  0632  0247               	subwf	sprintf@prec^(0+128),w
  4552  0633                     u5485:
  4553  0633  1C03               	skipc
  4554  0634  2E36               	goto	u5481
  4555  0635  2E37               	goto	u5480
  4556  0636                     u5481:
  4557  0636  2E3E               	goto	l3304
  4558  0637                     u5480:
  4559  0637                     l3302:
  4560                           
  4561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  4562  0637  3008               	movlw	8
  4563  0638  1683               	bsf	3,5	;RP0=1, select bank1
  4564  0639  1303               	bcf	3,6	;RP1=0, select bank1
  4565  063A  00B1               	movwf	??_sprintf^(0+128)
  4566  063B  0831               	movf	??_sprintf^(0+128),w
  4567  063C  00CE               	movwf	sprintf@c^(0+128)
  4568  063D  2E44               	goto	l299
  4569  063E                     l3304:
  4570                           
  4571                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  4572  063E  1683               	bsf	3,5	;RP0=1, select bank1
  4573  063F  1303               	bcf	3,6	;RP1=0, select bank1
  4574  0640  0847               	movf	sprintf@prec^(0+128),w
  4575  0641  00B1               	movwf	??_sprintf^(0+128)
  4576  0642  0831               	movf	??_sprintf^(0+128),w
  4577  0643  00CE               	movwf	sprintf@c^(0+128)
  4578  0644                     l299:
  4579                           
  4580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  4581  0644  084E               	movf	sprintf@c^(0+128),w
  4582  0645  00B1               	movwf	??_sprintf^(0+128)
  4583  0646  01B2               	clrf	(??_sprintf^(0+128)+1)
  4584  0647  0831               	movf	??_sprintf^(0+128),w
  4585  0648  02C7               	subwf	sprintf@prec^(0+128),f
  4586  0649  0832               	movf	(??_sprintf+1)^(0+128),w
  4587  064A  1C03               	skipc
  4588  064B  03C8               	decf	(sprintf@prec+1)^(0+128),f
  4589  064C  02C8               	subwf	(sprintf@prec+1)^(0+128),f
  4590  064D                     l3306:
  4591                           
  4592                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  4593  064D  084E               	movf	sprintf@c^(0+128),w
  4594  064E  1903               	btfsc	3,2
  4595  064F  2E51               	goto	u5491
  4596  0650  2E52               	goto	u5490
  4597  0651                     u5491:
  4598  0651  2E5D               	goto	l3312
  4599  0652                     u5490:
  4600  0652                     l3308:
  4601                           
  4602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  4603  0652  302E               	movlw	46
  4604  0653  00B1               	movwf	??_sprintf^(0+128)
  4605  0654  0849               	movf	sprintf@sp^(0+128),w
  4606  0655  0084               	movwf	4
  4607  0656  0831               	movf	??_sprintf^(0+128),w
  4608  0657  1383               	bcf	3,7	;select IRP bank0
  4609  0658  0080               	movwf	0
  4610  0659                     l3310:
  4611  0659  3001               	movlw	1
  4612  065A  00B1               	movwf	??_sprintf^(0+128)
  4613  065B  0831               	movf	??_sprintf^(0+128),w
  4614  065C  07C9               	addwf	sprintf@sp^(0+128),f
  4615  065D                     l3312:
  4616                           
  4617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  4618  065D  084E               	movf	sprintf@c^(0+128),w
  4619  065E  120A  158A  2140  120A  118A  	fcall	_scale
  4620  0663  1283               	bcf	3,5	;RP0=0, select bank0
  4621  0664  1303               	bcf	3,6	;RP1=0, select bank0
  4622  0665  084F               	movf	?_scale+3,w
  4623  0666  1683               	bsf	3,5	;RP0=1, select bank1
  4624  0667  1303               	bcf	3,6	;RP1=0, select bank1
  4625  0668  00B9               	movwf	(_sprintf$1008+3)^(0+128)
  4626  0669  1283               	bcf	3,5	;RP0=0, select bank0
  4627  066A  1303               	bcf	3,6	;RP1=0, select bank0
  4628  066B  084E               	movf	?_scale+2,w
  4629  066C  1683               	bsf	3,5	;RP0=1, select bank1
  4630  066D  1303               	bcf	3,6	;RP1=0, select bank1
  4631  066E  00B8               	movwf	(_sprintf$1008+2)^(0+128)
  4632  066F  1283               	bcf	3,5	;RP0=0, select bank0
  4633  0670  1303               	bcf	3,6	;RP1=0, select bank0
  4634  0671  084D               	movf	?_scale+1,w
  4635  0672  1683               	bsf	3,5	;RP0=1, select bank1
  4636  0673  1303               	bcf	3,6	;RP1=0, select bank1
  4637  0674  00B7               	movwf	(_sprintf$1008+1)^(0+128)
  4638  0675  1283               	bcf	3,5	;RP0=0, select bank0
  4639  0676  1303               	bcf	3,6	;RP1=0, select bank0
  4640  0677  084C               	movf	?_scale,w
  4641  0678  1683               	bsf	3,5	;RP0=1, select bank1
  4642  0679  1303               	bcf	3,6	;RP1=0, select bank1
  4643  067A  00B6               	movwf	_sprintf$1008^(0+128)
  4644  067B                     l3314:
  4645                           
  4646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  4647  067B  0839               	movf	(_sprintf$1008+3)^(0+128),w
  4648  067C  1283               	bcf	3,5	;RP0=0, select bank0
  4649  067D  1303               	bcf	3,6	;RP1=0, select bank0
  4650  067E  00B9               	movwf	___flmul@a+3
  4651  067F  1683               	bsf	3,5	;RP0=1, select bank1
  4652  0680  1303               	bcf	3,6	;RP1=0, select bank1
  4653  0681  0838               	movf	(_sprintf$1008+2)^(0+128),w
  4654  0682  1283               	bcf	3,5	;RP0=0, select bank0
  4655  0683  1303               	bcf	3,6	;RP1=0, select bank0
  4656  0684  00B8               	movwf	___flmul@a+2
  4657  0685  1683               	bsf	3,5	;RP0=1, select bank1
  4658  0686  1303               	bcf	3,6	;RP1=0, select bank1
  4659  0687  0837               	movf	(_sprintf$1008+1)^(0+128),w
  4660  0688  1283               	bcf	3,5	;RP0=0, select bank0
  4661  0689  1303               	bcf	3,6	;RP1=0, select bank0
  4662  068A  00B7               	movwf	___flmul@a+1
  4663  068B  1683               	bsf	3,5	;RP0=1, select bank1
  4664  068C  1303               	bcf	3,6	;RP1=0, select bank1
  4665  068D  0836               	movf	_sprintf$1008^(0+128),w
  4666  068E  1283               	bcf	3,5	;RP0=0, select bank0
  4667  068F  1303               	bcf	3,6	;RP1=0, select bank0
  4668  0690  00B6               	movwf	___flmul@a
  4669  0691  1683               	bsf	3,5	;RP0=1, select bank1
  4670  0692  1303               	bcf	3,6	;RP1=0, select bank1
  4671  0693  084D               	movf	(sprintf@fval+3)^(0+128),w
  4672  0694  1283               	bcf	3,5	;RP0=0, select bank0
  4673  0695  1303               	bcf	3,6	;RP1=0, select bank0
  4674  0696  00B5               	movwf	___flmul@b+3
  4675  0697  1683               	bsf	3,5	;RP0=1, select bank1
  4676  0698  1303               	bcf	3,6	;RP1=0, select bank1
  4677  0699  084C               	movf	(sprintf@fval+2)^(0+128),w
  4678  069A  1283               	bcf	3,5	;RP0=0, select bank0
  4679  069B  1303               	bcf	3,6	;RP1=0, select bank0
  4680  069C  00B4               	movwf	___flmul@b+2
  4681  069D  1683               	bsf	3,5	;RP0=1, select bank1
  4682  069E  1303               	bcf	3,6	;RP1=0, select bank1
  4683  069F  084B               	movf	(sprintf@fval+1)^(0+128),w
  4684  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  4685  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  4686  06A2  00B3               	movwf	___flmul@b+1
  4687  06A3  1683               	bsf	3,5	;RP0=1, select bank1
  4688  06A4  1303               	bcf	3,6	;RP1=0, select bank1
  4689  06A5  084A               	movf	sprintf@fval^(0+128),w
  4690  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  4691  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  4692  06A8  00B2               	movwf	___flmul@b
  4693  06A9  120A  158A  249F  120A  118A  	fcall	___flmul
  4694  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  4695  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  4696  06B0  0835               	movf	?___flmul+3,w
  4697  06B1  00E2               	movwf	___fltol@f1+3
  4698  06B2  0834               	movf	?___flmul+2,w
  4699  06B3  00E1               	movwf	___fltol@f1+2
  4700  06B4  0833               	movf	?___flmul+1,w
  4701  06B5  00E0               	movwf	___fltol@f1+1
  4702  06B6  0832               	movf	?___flmul,w
  4703  06B7  00DF               	movwf	___fltol@f1
  4704  06B8  160A  158A  24AB  120A  118A  	fcall	___fltol
  4705  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  4706  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  4707  06BF  0862               	movf	?___fltol+3,w
  4708  06C0  1683               	bsf	3,5	;RP0=1, select bank1
  4709  06C1  1303               	bcf	3,6	;RP1=0, select bank1
  4710  06C2  00C0               	movwf	(sprintf@val+3)^(0+128)
  4711  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  4712  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  4713  06C5  0861               	movf	?___fltol+2,w
  4714  06C6  1683               	bsf	3,5	;RP0=1, select bank1
  4715  06C7  1303               	bcf	3,6	;RP1=0, select bank1
  4716  06C8  00BF               	movwf	(sprintf@val+2)^(0+128)
  4717  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  4718  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  4719  06CB  0860               	movf	?___fltol+1,w
  4720  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  4721  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  4722  06CE  00BE               	movwf	(sprintf@val+1)^(0+128)
  4723  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  4724  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  4725  06D1  085F               	movf	?___fltol,w
  4726  06D2  1683               	bsf	3,5	;RP0=1, select bank1
  4727  06D3  1303               	bcf	3,6	;RP1=0, select bank1
  4728  06D4  00BD               	movwf	sprintf@val^(0+128)
  4729                           
  4730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4731  06D5  2F77               	goto	l3324
  4732  06D6                     l3316:
  4733                           
  4734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  4735  06D6  084E               	movf	sprintf@c^(0+128),w
  4736  06D7  00B1               	movwf	??_sprintf^(0+128)
  4737  06D8  3001               	movlw	1
  4738  06D9                     u5505:
  4739  06D9  1003               	clrc
  4740  06DA  0DB1               	rlf	??_sprintf^(0+128),f
  4741  06DB  3EFF               	addlw	-1
  4742  06DC  1D03               	skipz
  4743  06DD  2ED9               	goto	u5505
  4744  06DE  1003               	clrc
  4745  06DF  0D31               	rlf	??_sprintf^(0+128),w
  4746  06E0  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4747  06E1  0084               	movwf	4
  4748  06E2  120A  158A  200A  120A  118A  	fcall	stringdir
  4749  06E7  00F0               	movwf	___lldiv@divisor
  4750  06E8  120A  158A  200A  120A  118A  	fcall	stringdir
  4751  06ED  00F1               	movwf	___lldiv@divisor+1
  4752  06EE  120A  158A  200A  120A  118A  	fcall	stringdir
  4753  06F3  00F2               	movwf	___lldiv@divisor+2
  4754  06F4  120A  158A  200A  120A  118A  	fcall	stringdir
  4755  06F9  00F3               	movwf	___lldiv@divisor+3
  4756  06FA  0840               	movf	(sprintf@val+3)^(0+128),w
  4757  06FB  00F7               	movwf	___lldiv@dividend+3
  4758  06FC  083F               	movf	(sprintf@val+2)^(0+128),w
  4759  06FD  00F6               	movwf	___lldiv@dividend+2
  4760  06FE  083E               	movf	(sprintf@val+1)^(0+128),w
  4761  06FF  00F5               	movwf	___lldiv@dividend+1
  4762  0700  083D               	movf	sprintf@val^(0+128),w
  4763  0701  00F4               	movwf	___lldiv@dividend
  4764  0702  160A  158A  23D8  120A  118A  	fcall	___lldiv
  4765  0707  0873               	movf	?___lldiv+3,w
  4766  0708  1683               	bsf	3,5	;RP0=1, select bank1
  4767  0709  1303               	bcf	3,6	;RP1=0, select bank1
  4768  070A  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  4769  070B  0872               	movf	?___lldiv+2,w
  4770  070C  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  4771  070D  0871               	movf	?___lldiv+1,w
  4772  070E  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  4773  070F  0870               	movf	?___lldiv,w
  4774  0710  00C3               	movwf	sprintf@tmpval^(0+128)
  4775  0711                     l3318:
  4776                           
  4777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  4778  0711  3000               	movlw	0
  4779  0712  00F3               	movwf	___llmod@divisor+3
  4780  0713  3000               	movlw	0
  4781  0714  00F2               	movwf	___llmod@divisor+2
  4782  0715  3000               	movlw	0
  4783  0716  00F1               	movwf	___llmod@divisor+1
  4784  0717  300A               	movlw	10
  4785  0718  00F0               	movwf	___llmod@divisor
  4786  0719  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  4787  071A  00F7               	movwf	___llmod@dividend+3
  4788  071B  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  4789  071C  00F6               	movwf	___llmod@dividend+2
  4790  071D  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  4791  071E  00F5               	movwf	___llmod@dividend+1
  4792  071F  0843               	movf	sprintf@tmpval^(0+128),w
  4793  0720  00F4               	movwf	___llmod@dividend
  4794  0721  160A  158A  232B  120A  118A  	fcall	___llmod
  4795  0726  0873               	movf	?___llmod+3,w
  4796  0727  1683               	bsf	3,5	;RP0=1, select bank1
  4797  0728  1303               	bcf	3,6	;RP1=0, select bank1
  4798  0729  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  4799  072A  0872               	movf	?___llmod+2,w
  4800  072B  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  4801  072C  0871               	movf	?___llmod+1,w
  4802  072D  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  4803  072E  0870               	movf	?___llmod,w
  4804  072F  00C3               	movwf	sprintf@tmpval^(0+128)
  4805  0730                     l3320:
  4806                           
  4807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  4808  0730  0843               	movf	sprintf@tmpval^(0+128),w
  4809  0731  3E30               	addlw	48
  4810  0732  00B1               	movwf	??_sprintf^(0+128)
  4811  0733  0849               	movf	sprintf@sp^(0+128),w
  4812  0734  0084               	movwf	4
  4813  0735  0831               	movf	??_sprintf^(0+128),w
  4814  0736  1383               	bcf	3,7	;select IRP bank0
  4815  0737  0080               	movwf	0
  4816  0738  3001               	movlw	1
  4817  0739  00B1               	movwf	??_sprintf^(0+128)
  4818  073A  0831               	movf	??_sprintf^(0+128),w
  4819  073B  07C9               	addwf	sprintf@sp^(0+128),f
  4820  073C                     l3322:
  4821                           
  4822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  4823  073C  084E               	movf	sprintf@c^(0+128),w
  4824  073D  00B1               	movwf	??_sprintf^(0+128)
  4825  073E  3001               	movlw	1
  4826  073F                     u5515:
  4827  073F  1003               	clrc
  4828  0740  0DB1               	rlf	??_sprintf^(0+128),f
  4829  0741  3EFF               	addlw	-1
  4830  0742  1D03               	skipz
  4831  0743  2F3F               	goto	u5515
  4832  0744  1003               	clrc
  4833  0745  0D31               	rlf	??_sprintf^(0+128),w
  4834  0746  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4835  0747  0084               	movwf	4
  4836  0748  120A  158A  200A  120A  118A  	fcall	stringdir
  4837  074D  00F0               	movwf	___llmod@divisor
  4838  074E  120A  158A  200A  120A  118A  	fcall	stringdir
  4839  0753  00F1               	movwf	___llmod@divisor+1
  4840  0754  120A  158A  200A  120A  118A  	fcall	stringdir
  4841  0759  00F2               	movwf	___llmod@divisor+2
  4842  075A  120A  158A  200A  120A  118A  	fcall	stringdir
  4843  075F  00F3               	movwf	___llmod@divisor+3
  4844  0760  0840               	movf	(sprintf@val+3)^(0+128),w
  4845  0761  00F7               	movwf	___llmod@dividend+3
  4846  0762  083F               	movf	(sprintf@val+2)^(0+128),w
  4847  0763  00F6               	movwf	___llmod@dividend+2
  4848  0764  083E               	movf	(sprintf@val+1)^(0+128),w
  4849  0765  00F5               	movwf	___llmod@dividend+1
  4850  0766  083D               	movf	sprintf@val^(0+128),w
  4851  0767  00F4               	movwf	___llmod@dividend
  4852  0768  160A  158A  232B  120A  118A  	fcall	___llmod
  4853  076D  0873               	movf	?___llmod+3,w
  4854  076E  1683               	bsf	3,5	;RP0=1, select bank1
  4855  076F  1303               	bcf	3,6	;RP1=0, select bank1
  4856  0770  00C0               	movwf	(sprintf@val+3)^(0+128)
  4857  0771  0872               	movf	?___llmod+2,w
  4858  0772  00BF               	movwf	(sprintf@val+2)^(0+128)
  4859  0773  0871               	movf	?___llmod+1,w
  4860  0774  00BE               	movwf	(sprintf@val+1)^(0+128)
  4861  0775  0870               	movf	?___llmod,w
  4862  0776  00BD               	movwf	sprintf@val^(0+128)
  4863  0777                     l3324:
  4864                           
  4865                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4866  0777  3001               	movlw	1
  4867  0778  02CE               	subwf	sprintf@c^(0+128),f
  4868  0779  0A4E               	incf	sprintf@c^(0+128),w
  4869  077A  1D03               	btfss	3,2
  4870  077B  2F7D               	goto	u5521
  4871  077C  2F7E               	goto	u5520
  4872  077D                     u5521:
  4873  077D  2ED6               	goto	l3316
  4874  077E                     u5520:
  4875  077E  2F90               	goto	l3332
  4876  077F                     l3326:
  4877                           
  4878                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  4879  077F  3030               	movlw	48
  4880  0780  00B1               	movwf	??_sprintf^(0+128)
  4881  0781  0849               	movf	sprintf@sp^(0+128),w
  4882  0782  0084               	movwf	4
  4883  0783  0831               	movf	??_sprintf^(0+128),w
  4884  0784  1383               	bcf	3,7	;select IRP bank0
  4885  0785  0080               	movwf	0
  4886  0786                     l3328:
  4887  0786  3001               	movlw	1
  4888  0787  00B1               	movwf	??_sprintf^(0+128)
  4889  0788  0831               	movf	??_sprintf^(0+128),w
  4890  0789  07C9               	addwf	sprintf@sp^(0+128),f
  4891  078A                     l3330:
  4892                           
  4893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  4894  078A  30FF               	movlw	255
  4895  078B  07C7               	addwf	sprintf@prec^(0+128),f
  4896  078C  1803               	skipnc
  4897  078D  0AC8               	incf	(sprintf@prec+1)^(0+128),f
  4898  078E  30FF               	movlw	255
  4899  078F  07C8               	addwf	(sprintf@prec+1)^(0+128),f
  4900  0790                     l3332:
  4901                           
  4902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  4903  0790  0847               	movf	sprintf@prec^(0+128),w
  4904  0791  0448               	iorwf	(sprintf@prec+1)^(0+128),w
  4905  0792  1D03               	btfss	3,2
  4906  0793  2F95               	goto	u5531
  4907  0794  2F96               	goto	u5530
  4908  0795                     u5531:
  4909  0795  2F7F               	goto	l3326
  4910  0796                     u5530:
  4911  0796  2FDC               	goto	l3352
  4912  0797                     l3334:
  4913                           
  4914                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  4915  0797  0847               	movf	sprintf@prec^(0+128),w
  4916  0798  0448               	iorwf	(sprintf@prec+1)^(0+128),w
  4917  0799  1D03               	btfss	3,2
  4918  079A  2F9C               	goto	u5541
  4919  079B  2F9D               	goto	u5540
  4920  079C                     u5541:
  4921  079C  2FAB               	goto	l307
  4922  079D                     u5540:
  4923  079D                     l3336:
  4924  079D  0840               	movf	(sprintf@val+3)^(0+128),w
  4925  079E  043F               	iorwf	(sprintf@val+2)^(0+128),w
  4926  079F  043E               	iorwf	(sprintf@val+1)^(0+128),w
  4927  07A0  043D               	iorwf	sprintf@val^(0+128),w
  4928  07A1  1D03               	skipz
  4929  07A2  2FA4               	goto	u5551
  4930  07A3  2FA5               	goto	u5550
  4931  07A4                     u5551:
  4932  07A4  2FAB               	goto	l307
  4933  07A5                     u5550:
  4934  07A5                     l3338:
  4935                           
  4936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4937  07A5  3001               	movlw	1
  4938  07A6  07C7               	addwf	sprintf@prec^(0+128),f
  4939  07A7  1803               	skipnc
  4940  07A8  0AC8               	incf	(sprintf@prec+1)^(0+128),f
  4941  07A9  3000               	movlw	0
  4942  07AA  07C8               	addwf	(sprintf@prec+1)^(0+128),f
  4943  07AB                     l307:
  4944                           
  4945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4946  07AB  0848               	movf	(sprintf@prec+1)^(0+128),w
  4947  07AC  3A80               	xorlw	128
  4948  07AD  3C80               	sublw	128
  4949  07AE  1D03               	skipz
  4950  07AF  2FB2               	goto	u5565
  4951  07B0  0847               	movf	sprintf@prec^(0+128),w
  4952  07B1  024E               	subwf	sprintf@c^(0+128),w
  4953  07B2                     u5565:
  4954  07B2  1803               	skipnc
  4955  07B3  2FB5               	goto	u5561
  4956  07B4  2FB6               	goto	u5560
  4957  07B5                     u5561:
  4958  07B5  2FB7               	goto	l3342
  4959  07B6                     u5560:
  4960  07B6                     l3340:
  4961  07B6  2FC6               	goto	l3346
  4962  07B7                     l3342:
  4963  07B7  1683               	bsf	3,5	;RP0=1, select bank1
  4964  07B8  1303               	bcf	3,6	;RP1=0, select bank1
  4965  07B9  0848               	movf	(sprintf@prec+1)^(0+128),w
  4966  07BA  3A80               	xorlw	128
  4967  07BB  00B1               	movwf	??_sprintf^(0+128)
  4968  07BC  3080               	movlw	128
  4969  07BD  0231               	subwf	??_sprintf^(0+128),w
  4970  07BE  1D03               	skipz
  4971  07BF  2FC2               	goto	u5575
  4972  07C0  084E               	movf	sprintf@c^(0+128),w
  4973  07C1  0247               	subwf	sprintf@prec^(0+128),w
  4974  07C2                     u5575:
  4975  07C2  1803               	skipnc
  4976  07C3  2FC5               	goto	u5571
  4977  07C4  2FC6               	goto	u5570
  4978  07C5                     u5571:
  4979  07C5  2FC6               	goto	l3346
  4980  07C6                     u5570:
  4981  07C6                     l3344:
  4982  07C6                     l3346:
  4983                           
  4984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  4985  07C6  3003               	movlw	3
  4986  07C7  1683               	bsf	3,5	;RP0=1, select bank1
  4987  07C8  1303               	bcf	3,6	;RP1=0, select bank1
  4988  07C9  053B               	andwf	sprintf@flag^(0+128),w
  4989  07CA  00B1               	movwf	??_sprintf^(0+128)
  4990  07CB  3000               	movlw	0
  4991  07CC  053C               	andwf	(sprintf@flag+1)^(0+128),w
  4992  07CD  00B2               	movwf	(??_sprintf+1)^(0+128)
  4993  07CE  0831               	movf	??_sprintf^(0+128),w
  4994  07CF  0432               	iorwf	(??_sprintf^(0+128)+1),w
  4995  07D0  1903               	btfsc	3,2
  4996  07D1  2FD3               	goto	u5581
  4997  07D2  2FD4               	goto	u5580
  4998  07D3                     u5581:
  4999  07D3  2FDC               	goto	l3352
  5000  07D4                     u5580:
  5001  07D4                     l3348:
  5002                           
  5003                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  5004  07D4  302D               	movlw	45
  5005  07D5  00B1               	movwf	??_sprintf^(0+128)
  5006  07D6  0849               	movf	sprintf@sp^(0+128),w
  5007  07D7  0084               	movwf	4
  5008  07D8  0831               	movf	??_sprintf^(0+128),w
  5009  07D9  1383               	bcf	3,7	;select IRP bank0
  5010  07DA  0080               	movwf	0
  5011  07DB  29B2               	goto	l3164
  5012  07DC                     l3352:
  5013                           
  5014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  5015  07DC  3001               	movlw	1
  5016  07DD  07AC               	addwf	sprintf@f^(0+128),f
  5017  07DE  30FF               	movlw	-1
  5018  07DF  072C               	addwf	sprintf@f^(0+128),w
  5019  07E0  0084               	movwf	4
  5020  07E1  120A  158A  200A  120A  118A  	fcall	stringdir
  5021  07E6  00B1               	movwf	??_sprintf^(0+128)
  5022  07E7  0831               	movf	??_sprintf^(0+128),w
  5023  07E8  00CE               	movwf	sprintf@c^(0+128)
  5024  07E9  084E               	movf	sprintf@c^(0+128),w
  5025  07EA  1D03               	btfss	3,2
  5026  07EB  2FED               	goto	u5591
  5027  07EC  2FEE               	goto	u5590
  5028  07ED                     u5591:
  5029  07ED  29A5               	goto	l3160
  5030  07EE                     u5590:
  5031  07EE                     l3354:
  5032                           
  5033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  5034  07EE  0849               	movf	sprintf@sp^(0+128),w
  5035  07EF  0084               	movwf	4
  5036  07F0  1383               	bcf	3,7	;select IRP bank0
  5037  07F1  0180               	clrf	0
  5038  07F2                     l313:
  5039  07F2  0008               	return
  5040  07F3                     __end_of_sprintf:
  5041                           
  5042                           	psect	text13
  5043  0940                     __ptext13:	
  5044 ;; *************** function _scale *****************
  5045 ;; Defined at:
  5046 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  scl             1    wreg     char 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  scl             1   62[BANK0 ] char 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  4   44[BANK0 ] char 
  5053 ;; Registers used:
  5054 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5060 ;;      Params:         0       4       0       0       0
  5061 ;;      Locals:         0       5       0       0       0
  5062 ;;      Temps:          0      10       0       0       0
  5063 ;;      Totals:         0      19       0       0       0
  5064 ;;Total ram usage:       19 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; Hardware stack levels required when called:    2
  5067 ;; This function calls:
  5068 ;;		___awdiv
  5069 ;;		___awmod
  5070 ;;		___flmul
  5071 ;; This function is called by:
  5072 ;;		_sprintf
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076                           
  5077                           ;psect for function _scale
  5078  0940                     _scale:
  5079                           
  5080                           ;incstack = 0
  5081                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5082                           ;scale@scl stored from wreg
  5083  0940  1283               	bcf	3,5	;RP0=0, select bank0
  5084  0941  1303               	bcf	3,6	;RP1=0, select bank0
  5085  0942  00DE               	movwf	scale@scl
  5086  0943                     l2786:
  5087                           
  5088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  5089  0943  1FDE               	btfss	scale@scl,7
  5090  0944  2946               	goto	u4211
  5091  0945  2947               	goto	u4210
  5092  0946                     u4211:
  5093  0946  2AF4               	goto	l2808
  5094  0947                     u4210:
  5095  0947                     l2788:
  5096                           
  5097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  5098  0947  09DE               	comf	scale@scl,f
  5099  0948  0ADE               	incf	scale@scl,f
  5100  0949                     l2790:
  5101                           
  5102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  5103  0949  085E               	movf	scale@scl,w
  5104  094A  3A80               	xorlw	128
  5105  094B  3E12               	addlw	-238
  5106  094C  1C03               	skipc
  5107  094D  294F               	goto	u4221
  5108  094E  2950               	goto	u4220
  5109  094F                     u4221:
  5110  094F  2A38               	goto	l2798
  5111  0950                     u4220:
  5112  0950                     l2792:
  5113                           
  5114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  5115  0950  300A               	movlw	10
  5116  0951  00F7               	movwf	___awdiv@divisor
  5117  0952  3000               	movlw	0
  5118  0953  00F8               	movwf	___awdiv@divisor+1
  5119  0954  085E               	movf	scale@scl,w
  5120  0955  00F2               	movwf	___awmod@dividend
  5121  0956  01F3               	clrf	___awmod@dividend+1
  5122  0957  1BF2               	btfsc	___awmod@dividend,7
  5123  0958  03F3               	decf	___awmod@dividend+1,f
  5124  0959  3064               	movlw	100
  5125  095A  00F0               	movwf	___awmod@divisor
  5126  095B  3000               	movlw	0
  5127  095C  00F1               	movwf	___awmod@divisor+1
  5128  095D  160A  158A  237F  120A  158A  	fcall	___awmod
  5129  0962  0871               	movf	?___awmod+1,w
  5130  0963  00FA               	movwf	___awdiv@dividend+1
  5131  0964  0870               	movf	?___awmod,w
  5132  0965  00F9               	movwf	___awdiv@dividend
  5133  0966  120A  158A  20D7  120A  158A  	fcall	___awdiv
  5134  096B  0877               	movf	?___awdiv,w
  5135  096C  1283               	bcf	3,5	;RP0=0, select bank0
  5136  096D  1303               	bcf	3,6	;RP1=0, select bank0
  5137  096E  00D0               	movwf	??_scale
  5138  096F  3001               	movlw	1
  5139  0970                     u4235:
  5140  0970  1003               	clrc
  5141  0971  0DD0               	rlf	??_scale,f
  5142  0972  3EFF               	addlw	-1
  5143  0973  1D03               	skipz
  5144  0974  2970               	goto	u4235
  5145  0975  1003               	clrc
  5146  0976  0D50               	rlf	??_scale,w
  5147  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5148  0978  0084               	movwf	4
  5149  0979  120A  158A  200A  120A  158A  	fcall	stringdir
  5150  097E  00D1               	movwf	??_scale+1
  5151  097F  120A  158A  200A  120A  158A  	fcall	stringdir
  5152  0984  00D2               	movwf	??_scale+2
  5153  0985  120A  158A  200A  120A  158A  	fcall	stringdir
  5154  098A  00D3               	movwf	??_scale+3
  5155  098B  120A  158A  200A  120A  158A  	fcall	stringdir
  5156  0990  00D4               	movwf	??_scale+4
  5157  0991  0854               	movf	??_scale+4,w
  5158  0992  00B5               	movwf	___flmul@b+3
  5159  0993  0853               	movf	??_scale+3,w
  5160  0994  00B4               	movwf	___flmul@b+2
  5161  0995  0852               	movf	??_scale+2,w
  5162  0996  00B3               	movwf	___flmul@b+1
  5163  0997  0851               	movf	??_scale+1,w
  5164  0998  00B2               	movwf	___flmul@b
  5165  0999  3064               	movlw	100
  5166  099A  00F7               	movwf	___awdiv@divisor
  5167  099B  3000               	movlw	0
  5168  099C  00F8               	movwf	___awdiv@divisor+1
  5169  099D  085E               	movf	scale@scl,w
  5170  099E  00F9               	movwf	___awdiv@dividend
  5171  099F  01FA               	clrf	___awdiv@dividend+1
  5172  09A0  1BF9               	btfsc	___awdiv@dividend,7
  5173  09A1  03FA               	decf	___awdiv@dividend+1,f
  5174  09A2  120A  158A  20D7  120A  158A  	fcall	___awdiv
  5175  09A7  0877               	movf	?___awdiv,w
  5176  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  5177  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  5178  09AA  00D5               	movwf	??_scale+5
  5179  09AB  3001               	movlw	1
  5180  09AC                     u4245:
  5181  09AC  1003               	clrc
  5182  09AD  0DD5               	rlf	??_scale+5,f
  5183  09AE  3EFF               	addlw	-1
  5184  09AF  1D03               	skipz
  5185  09B0  29AC               	goto	u4245
  5186  09B1  1003               	clrc
  5187  09B2  0D55               	rlf	??_scale+5,w
  5188  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5189  09B4  0084               	movwf	4
  5190  09B5  120A  158A  200A  120A  158A  	fcall	stringdir
  5191  09BA  00D6               	movwf	??_scale+6
  5192  09BB  120A  158A  200A  120A  158A  	fcall	stringdir
  5193  09C0  00D7               	movwf	??_scale+7
  5194  09C1  120A  158A  200A  120A  158A  	fcall	stringdir
  5195  09C6  00D8               	movwf	??_scale+8
  5196  09C7  120A  158A  200A  120A  158A  	fcall	stringdir
  5197  09CC  00D9               	movwf	??_scale+9
  5198  09CD  0859               	movf	??_scale+9,w
  5199  09CE  00B9               	movwf	___flmul@a+3
  5200  09CF  0858               	movf	??_scale+8,w
  5201  09D0  00B8               	movwf	___flmul@a+2
  5202  09D1  0857               	movf	??_scale+7,w
  5203  09D2  00B7               	movwf	___flmul@a+1
  5204  09D3  0856               	movf	??_scale+6,w
  5205  09D4  00B6               	movwf	___flmul@a
  5206  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  5207  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  5208  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  5209  09DC  0835               	movf	?___flmul+3,w
  5210  09DD  00DD               	movwf	_scale$1007+3
  5211  09DE  0834               	movf	?___flmul+2,w
  5212  09DF  00DC               	movwf	_scale$1007+2
  5213  09E0  0833               	movf	?___flmul+1,w
  5214  09E1  00DB               	movwf	_scale$1007+1
  5215  09E2  0832               	movf	?___flmul,w
  5216  09E3  00DA               	movwf	_scale$1007
  5217                           
  5218                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  5219  09E4  300A               	movlw	10
  5220  09E5  00F0               	movwf	___awmod@divisor
  5221  09E6  3000               	movlw	0
  5222  09E7  00F1               	movwf	___awmod@divisor+1
  5223  09E8  085E               	movf	scale@scl,w
  5224  09E9  00F2               	movwf	___awmod@dividend
  5225  09EA  01F3               	clrf	___awmod@dividend+1
  5226  09EB  1BF2               	btfsc	___awmod@dividend,7
  5227  09EC  03F3               	decf	___awmod@dividend+1,f
  5228  09ED  160A  158A  237F  120A  158A  	fcall	___awmod
  5229  09F2  0870               	movf	?___awmod,w
  5230  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  5231  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  5232  09F5  00D0               	movwf	??_scale
  5233  09F6  3001               	movlw	1
  5234  09F7                     u4255:
  5235  09F7  1003               	clrc
  5236  09F8  0DD0               	rlf	??_scale,f
  5237  09F9  3EFF               	addlw	-1
  5238  09FA  1D03               	skipz
  5239  09FB  29F7               	goto	u4255
  5240  09FC  1003               	clrc
  5241  09FD  0D50               	rlf	??_scale,w
  5242  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5243  09FF  0084               	movwf	4
  5244  0A00  120A  158A  200A  120A  158A  	fcall	stringdir
  5245  0A05  00D1               	movwf	??_scale+1
  5246  0A06  120A  158A  200A  120A  158A  	fcall	stringdir
  5247  0A0B  00D2               	movwf	??_scale+2
  5248  0A0C  120A  158A  200A  120A  158A  	fcall	stringdir
  5249  0A11  00D3               	movwf	??_scale+3
  5250  0A12  120A  158A  200A  120A  158A  	fcall	stringdir
  5251  0A17  00D4               	movwf	??_scale+4
  5252  0A18  0854               	movf	??_scale+4,w
  5253  0A19  00B5               	movwf	___flmul@b+3
  5254  0A1A  0853               	movf	??_scale+3,w
  5255  0A1B  00B4               	movwf	___flmul@b+2
  5256  0A1C  0852               	movf	??_scale+2,w
  5257  0A1D  00B3               	movwf	___flmul@b+1
  5258  0A1E  0851               	movf	??_scale+1,w
  5259  0A1F  00B2               	movwf	___flmul@b
  5260  0A20  085D               	movf	_scale$1007+3,w
  5261  0A21  00B9               	movwf	___flmul@a+3
  5262  0A22  085C               	movf	_scale$1007+2,w
  5263  0A23  00B8               	movwf	___flmul@a+2
  5264  0A24  085B               	movf	_scale$1007+1,w
  5265  0A25  00B7               	movwf	___flmul@a+1
  5266  0A26  085A               	movf	_scale$1007,w
  5267  0A27  00B6               	movwf	___flmul@a
  5268  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  5269  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  5270  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  5271  0A2F  0835               	movf	?___flmul+3,w
  5272  0A30  00CF               	movwf	?_scale+3
  5273  0A31  0834               	movf	?___flmul+2,w
  5274  0A32  00CE               	movwf	?_scale+2
  5275  0A33  0833               	movf	?___flmul+1,w
  5276  0A34  00CD               	movwf	?_scale+1
  5277  0A35  0832               	movf	?___flmul,w
  5278  0A36  00CC               	movwf	?_scale
  5279  0A37  2C9E               	goto	l247
  5280  0A38                     l2798:
  5281  0A38  085E               	movf	scale@scl,w
  5282  0A39  3A80               	xorlw	128
  5283  0A3A  3E75               	addlw	-139
  5284  0A3B  1C03               	skipc
  5285  0A3C  2A3E               	goto	u4261
  5286  0A3D  2A3F               	goto	u4260
  5287  0A3E                     u4261:
  5288  0A3E  2AC7               	goto	l2804
  5289  0A3F                     u4260:
  5290  0A3F                     l2800:
  5291                           
  5292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  5293  0A3F  300A               	movlw	10
  5294  0A40  00F0               	movwf	___awmod@divisor
  5295  0A41  3000               	movlw	0
  5296  0A42  00F1               	movwf	___awmod@divisor+1
  5297  0A43  085E               	movf	scale@scl,w
  5298  0A44  00F2               	movwf	___awmod@dividend
  5299  0A45  01F3               	clrf	___awmod@dividend+1
  5300  0A46  1BF2               	btfsc	___awmod@dividend,7
  5301  0A47  03F3               	decf	___awmod@dividend+1,f
  5302  0A48  160A  158A  237F  120A  158A  	fcall	___awmod
  5303  0A4D  0870               	movf	?___awmod,w
  5304  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  5305  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  5306  0A50  00D0               	movwf	??_scale
  5307  0A51  3001               	movlw	1
  5308  0A52                     u4275:
  5309  0A52  1003               	clrc
  5310  0A53  0DD0               	rlf	??_scale,f
  5311  0A54  3EFF               	addlw	-1
  5312  0A55  1D03               	skipz
  5313  0A56  2A52               	goto	u4275
  5314  0A57  1003               	clrc
  5315  0A58  0D50               	rlf	??_scale,w
  5316  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5317  0A5A  0084               	movwf	4
  5318  0A5B  120A  158A  200A  120A  158A  	fcall	stringdir
  5319  0A60  00D1               	movwf	??_scale+1
  5320  0A61  120A  158A  200A  120A  158A  	fcall	stringdir
  5321  0A66  00D2               	movwf	??_scale+2
  5322  0A67  120A  158A  200A  120A  158A  	fcall	stringdir
  5323  0A6C  00D3               	movwf	??_scale+3
  5324  0A6D  120A  158A  200A  120A  158A  	fcall	stringdir
  5325  0A72  00D4               	movwf	??_scale+4
  5326  0A73  0854               	movf	??_scale+4,w
  5327  0A74  00B5               	movwf	___flmul@b+3
  5328  0A75  0853               	movf	??_scale+3,w
  5329  0A76  00B4               	movwf	___flmul@b+2
  5330  0A77  0852               	movf	??_scale+2,w
  5331  0A78  00B3               	movwf	___flmul@b+1
  5332  0A79  0851               	movf	??_scale+1,w
  5333  0A7A  00B2               	movwf	___flmul@b
  5334  0A7B  300A               	movlw	10
  5335  0A7C  00F7               	movwf	___awdiv@divisor
  5336  0A7D  3000               	movlw	0
  5337  0A7E  00F8               	movwf	___awdiv@divisor+1
  5338  0A7F  085E               	movf	scale@scl,w
  5339  0A80  00F9               	movwf	___awdiv@dividend
  5340  0A81  01FA               	clrf	___awdiv@dividend+1
  5341  0A82  1BF9               	btfsc	___awdiv@dividend,7
  5342  0A83  03FA               	decf	___awdiv@dividend+1,f
  5343  0A84  120A  158A  20D7  120A  158A  	fcall	___awdiv
  5344  0A89  0877               	movf	?___awdiv,w
  5345  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  5346  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  5347  0A8C  00D5               	movwf	??_scale+5
  5348  0A8D  3001               	movlw	1
  5349  0A8E                     u4285:
  5350  0A8E  1003               	clrc
  5351  0A8F  0DD5               	rlf	??_scale+5,f
  5352  0A90  3EFF               	addlw	-1
  5353  0A91  1D03               	skipz
  5354  0A92  2A8E               	goto	u4285
  5355  0A93  1003               	clrc
  5356  0A94  0D55               	rlf	??_scale+5,w
  5357  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5358  0A96  0084               	movwf	4
  5359  0A97  120A  158A  200A  120A  158A  	fcall	stringdir
  5360  0A9C  00D6               	movwf	??_scale+6
  5361  0A9D  120A  158A  200A  120A  158A  	fcall	stringdir
  5362  0AA2  00D7               	movwf	??_scale+7
  5363  0AA3  120A  158A  200A  120A  158A  	fcall	stringdir
  5364  0AA8  00D8               	movwf	??_scale+8
  5365  0AA9  120A  158A  200A  120A  158A  	fcall	stringdir
  5366  0AAE  00D9               	movwf	??_scale+9
  5367  0AAF  0859               	movf	??_scale+9,w
  5368  0AB0  00B9               	movwf	___flmul@a+3
  5369  0AB1  0858               	movf	??_scale+8,w
  5370  0AB2  00B8               	movwf	___flmul@a+2
  5371  0AB3  0857               	movf	??_scale+7,w
  5372  0AB4  00B7               	movwf	___flmul@a+1
  5373  0AB5  0856               	movf	??_scale+6,w
  5374  0AB6  00B6               	movwf	___flmul@a
  5375  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  5376  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  5377  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  5378  0ABE  0835               	movf	?___flmul+3,w
  5379  0ABF  00CF               	movwf	?_scale+3
  5380  0AC0  0834               	movf	?___flmul+2,w
  5381  0AC1  00CE               	movwf	?_scale+2
  5382  0AC2  0833               	movf	?___flmul+1,w
  5383  0AC3  00CD               	movwf	?_scale+1
  5384  0AC4  0832               	movf	?___flmul,w
  5385  0AC5  00CC               	movwf	?_scale
  5386  0AC6  2C9E               	goto	l247
  5387  0AC7                     l2804:
  5388                           
  5389                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  5390  0AC7  085E               	movf	scale@scl,w
  5391  0AC8  00D0               	movwf	??_scale
  5392  0AC9  3001               	movlw	1
  5393  0ACA                     u4295:
  5394  0ACA  1003               	clrc
  5395  0ACB  0DD0               	rlf	??_scale,f
  5396  0ACC  3EFF               	addlw	-1
  5397  0ACD  1D03               	skipz
  5398  0ACE  2ACA               	goto	u4295
  5399  0ACF  1003               	clrc
  5400  0AD0  0D50               	rlf	??_scale,w
  5401  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5402  0AD2  0084               	movwf	4
  5403  0AD3  120A  158A  200A  120A  158A  	fcall	stringdir
  5404  0AD8  00D1               	movwf	??_scale+1
  5405  0AD9  120A  158A  200A  120A  158A  	fcall	stringdir
  5406  0ADE  00D2               	movwf	??_scale+2
  5407  0ADF  120A  158A  200A  120A  158A  	fcall	stringdir
  5408  0AE4  00D3               	movwf	??_scale+3
  5409  0AE5  120A  158A  200A  120A  158A  	fcall	stringdir
  5410  0AEA  00D4               	movwf	??_scale+4
  5411  0AEB  0854               	movf	??_scale+4,w
  5412  0AEC  00CF               	movwf	?_scale+3
  5413  0AED  0853               	movf	??_scale+3,w
  5414  0AEE  00CE               	movwf	?_scale+2
  5415  0AEF  0852               	movf	??_scale+2,w
  5416  0AF0  00CD               	movwf	?_scale+1
  5417  0AF1  0851               	movf	??_scale+1,w
  5418  0AF2  00CC               	movwf	?_scale
  5419  0AF3  2C9E               	goto	l247
  5420  0AF4                     l2808:
  5421                           
  5422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  5423  0AF4  085E               	movf	scale@scl,w
  5424  0AF5  3A80               	xorlw	128
  5425  0AF6  3E12               	addlw	-238
  5426  0AF7  1C03               	skipc
  5427  0AF8  2AFA               	goto	u4301
  5428  0AF9  2AFB               	goto	u4300
  5429  0AFA                     u4301:
  5430  0AFA  2BE3               	goto	l2816
  5431  0AFB                     u4300:
  5432  0AFB                     l2810:
  5433                           
  5434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  5435  0AFB  300A               	movlw	10
  5436  0AFC  00F7               	movwf	___awdiv@divisor
  5437  0AFD  3000               	movlw	0
  5438  0AFE  00F8               	movwf	___awdiv@divisor+1
  5439  0AFF  085E               	movf	scale@scl,w
  5440  0B00  00F2               	movwf	___awmod@dividend
  5441  0B01  01F3               	clrf	___awmod@dividend+1
  5442  0B02  1BF2               	btfsc	___awmod@dividend,7
  5443  0B03  03F3               	decf	___awmod@dividend+1,f
  5444  0B04  3064               	movlw	100
  5445  0B05  00F0               	movwf	___awmod@divisor
  5446  0B06  3000               	movlw	0
  5447  0B07  00F1               	movwf	___awmod@divisor+1
  5448  0B08  160A  158A  237F  120A  158A  	fcall	___awmod
  5449  0B0D  0871               	movf	?___awmod+1,w
  5450  0B0E  00FA               	movwf	___awdiv@dividend+1
  5451  0B0F  0870               	movf	?___awmod,w
  5452  0B10  00F9               	movwf	___awdiv@dividend
  5453  0B11  120A  158A  20D7  120A  158A  	fcall	___awdiv
  5454  0B16  0877               	movf	?___awdiv,w
  5455  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  5456  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  5457  0B19  00D0               	movwf	??_scale
  5458  0B1A  3001               	movlw	1
  5459  0B1B                     u4315:
  5460  0B1B  1003               	clrc
  5461  0B1C  0DD0               	rlf	??_scale,f
  5462  0B1D  3EFF               	addlw	-1
  5463  0B1E  1D03               	skipz
  5464  0B1F  2B1B               	goto	u4315
  5465  0B20  1003               	clrc
  5466  0B21  0D50               	rlf	??_scale,w
  5467  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5468  0B23  0084               	movwf	4
  5469  0B24  120A  158A  200A  120A  158A  	fcall	stringdir
  5470  0B29  00D1               	movwf	??_scale+1
  5471  0B2A  120A  158A  200A  120A  158A  	fcall	stringdir
  5472  0B2F  00D2               	movwf	??_scale+2
  5473  0B30  120A  158A  200A  120A  158A  	fcall	stringdir
  5474  0B35  00D3               	movwf	??_scale+3
  5475  0B36  120A  158A  200A  120A  158A  	fcall	stringdir
  5476  0B3B  00D4               	movwf	??_scale+4
  5477  0B3C  0854               	movf	??_scale+4,w
  5478  0B3D  00B5               	movwf	___flmul@b+3
  5479  0B3E  0853               	movf	??_scale+3,w
  5480  0B3F  00B4               	movwf	___flmul@b+2
  5481  0B40  0852               	movf	??_scale+2,w
  5482  0B41  00B3               	movwf	___flmul@b+1
  5483  0B42  0851               	movf	??_scale+1,w
  5484  0B43  00B2               	movwf	___flmul@b
  5485  0B44  3064               	movlw	100
  5486  0B45  00F7               	movwf	___awdiv@divisor
  5487  0B46  3000               	movlw	0
  5488  0B47  00F8               	movwf	___awdiv@divisor+1
  5489  0B48  085E               	movf	scale@scl,w
  5490  0B49  00F9               	movwf	___awdiv@dividend
  5491  0B4A  01FA               	clrf	___awdiv@dividend+1
  5492  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  5493  0B4C  03FA               	decf	___awdiv@dividend+1,f
  5494  0B4D  120A  158A  20D7  120A  158A  	fcall	___awdiv
  5495  0B52  0877               	movf	?___awdiv,w
  5496  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  5497  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  5498  0B55  00D5               	movwf	??_scale+5
  5499  0B56  3001               	movlw	1
  5500  0B57                     u4325:
  5501  0B57  1003               	clrc
  5502  0B58  0DD5               	rlf	??_scale+5,f
  5503  0B59  3EFF               	addlw	-1
  5504  0B5A  1D03               	skipz
  5505  0B5B  2B57               	goto	u4325
  5506  0B5C  1003               	clrc
  5507  0B5D  0D55               	rlf	??_scale+5,w
  5508  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  5509  0B5F  0084               	movwf	4
  5510  0B60  120A  158A  200A  120A  158A  	fcall	stringdir
  5511  0B65  00D6               	movwf	??_scale+6
  5512  0B66  120A  158A  200A  120A  158A  	fcall	stringdir
  5513  0B6B  00D7               	movwf	??_scale+7
  5514  0B6C  120A  158A  200A  120A  158A  	fcall	stringdir
  5515  0B71  00D8               	movwf	??_scale+8
  5516  0B72  120A  158A  200A  120A  158A  	fcall	stringdir
  5517  0B77  00D9               	movwf	??_scale+9
  5518  0B78  0859               	movf	??_scale+9,w
  5519  0B79  00B9               	movwf	___flmul@a+3
  5520  0B7A  0858               	movf	??_scale+8,w
  5521  0B7B  00B8               	movwf	___flmul@a+2
  5522  0B7C  0857               	movf	??_scale+7,w
  5523  0B7D  00B7               	movwf	___flmul@a+1
  5524  0B7E  0856               	movf	??_scale+6,w
  5525  0B7F  00B6               	movwf	___flmul@a
  5526  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  5527  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  5528  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  5529  0B87  0835               	movf	?___flmul+3,w
  5530  0B88  00DD               	movwf	_scale$1007+3
  5531  0B89  0834               	movf	?___flmul+2,w
  5532  0B8A  00DC               	movwf	_scale$1007+2
  5533  0B8B  0833               	movf	?___flmul+1,w
  5534  0B8C  00DB               	movwf	_scale$1007+1
  5535  0B8D  0832               	movf	?___flmul,w
  5536  0B8E  00DA               	movwf	_scale$1007
  5537                           
  5538                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  5539  0B8F  300A               	movlw	10
  5540  0B90  00F0               	movwf	___awmod@divisor
  5541  0B91  3000               	movlw	0
  5542  0B92  00F1               	movwf	___awmod@divisor+1
  5543  0B93  085E               	movf	scale@scl,w
  5544  0B94  00F2               	movwf	___awmod@dividend
  5545  0B95  01F3               	clrf	___awmod@dividend+1
  5546  0B96  1BF2               	btfsc	___awmod@dividend,7
  5547  0B97  03F3               	decf	___awmod@dividend+1,f
  5548  0B98  160A  158A  237F  120A  158A  	fcall	___awmod
  5549  0B9D  0870               	movf	?___awmod,w
  5550  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  5551  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  5552  0BA0  00D0               	movwf	??_scale
  5553  0BA1  3001               	movlw	1
  5554  0BA2                     u4335:
  5555  0BA2  1003               	clrc
  5556  0BA3  0DD0               	rlf	??_scale,f
  5557  0BA4  3EFF               	addlw	-1
  5558  0BA5  1D03               	skipz
  5559  0BA6  2BA2               	goto	u4335
  5560  0BA7  1003               	clrc
  5561  0BA8  0D50               	rlf	??_scale,w
  5562  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5563  0BAA  0084               	movwf	4
  5564  0BAB  120A  158A  200A  120A  158A  	fcall	stringdir
  5565  0BB0  00D1               	movwf	??_scale+1
  5566  0BB1  120A  158A  200A  120A  158A  	fcall	stringdir
  5567  0BB6  00D2               	movwf	??_scale+2
  5568  0BB7  120A  158A  200A  120A  158A  	fcall	stringdir
  5569  0BBC  00D3               	movwf	??_scale+3
  5570  0BBD  120A  158A  200A  120A  158A  	fcall	stringdir
  5571  0BC2  00D4               	movwf	??_scale+4
  5572  0BC3  0854               	movf	??_scale+4,w
  5573  0BC4  00B5               	movwf	___flmul@b+3
  5574  0BC5  0853               	movf	??_scale+3,w
  5575  0BC6  00B4               	movwf	___flmul@b+2
  5576  0BC7  0852               	movf	??_scale+2,w
  5577  0BC8  00B3               	movwf	___flmul@b+1
  5578  0BC9  0851               	movf	??_scale+1,w
  5579  0BCA  00B2               	movwf	___flmul@b
  5580  0BCB  085D               	movf	_scale$1007+3,w
  5581  0BCC  00B9               	movwf	___flmul@a+3
  5582  0BCD  085C               	movf	_scale$1007+2,w
  5583  0BCE  00B8               	movwf	___flmul@a+2
  5584  0BCF  085B               	movf	_scale$1007+1,w
  5585  0BD0  00B7               	movwf	___flmul@a+1
  5586  0BD1  085A               	movf	_scale$1007,w
  5587  0BD2  00B6               	movwf	___flmul@a
  5588  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  5589  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  5590  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  5591  0BDA  0835               	movf	?___flmul+3,w
  5592  0BDB  00CF               	movwf	?_scale+3
  5593  0BDC  0834               	movf	?___flmul+2,w
  5594  0BDD  00CE               	movwf	?_scale+2
  5595  0BDE  0833               	movf	?___flmul+1,w
  5596  0BDF  00CD               	movwf	?_scale+1
  5597  0BE0  0832               	movf	?___flmul,w
  5598  0BE1  00CC               	movwf	?_scale
  5599  0BE2  2C9E               	goto	l247
  5600  0BE3                     l2816:
  5601  0BE3  085E               	movf	scale@scl,w
  5602  0BE4  3A80               	xorlw	128
  5603  0BE5  3E75               	addlw	-139
  5604  0BE6  1C03               	skipc
  5605  0BE7  2BE9               	goto	u4341
  5606  0BE8  2BEA               	goto	u4340
  5607  0BE9                     u4341:
  5608  0BE9  2C72               	goto	l2822
  5609  0BEA                     u4340:
  5610  0BEA                     l2818:
  5611                           
  5612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  5613  0BEA  300A               	movlw	10
  5614  0BEB  00F0               	movwf	___awmod@divisor
  5615  0BEC  3000               	movlw	0
  5616  0BED  00F1               	movwf	___awmod@divisor+1
  5617  0BEE  085E               	movf	scale@scl,w
  5618  0BEF  00F2               	movwf	___awmod@dividend
  5619  0BF0  01F3               	clrf	___awmod@dividend+1
  5620  0BF1  1BF2               	btfsc	___awmod@dividend,7
  5621  0BF2  03F3               	decf	___awmod@dividend+1,f
  5622  0BF3  160A  158A  237F  120A  158A  	fcall	___awmod
  5623  0BF8  0870               	movf	?___awmod,w
  5624  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  5625  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  5626  0BFB  00D0               	movwf	??_scale
  5627  0BFC  3001               	movlw	1
  5628  0BFD                     u4355:
  5629  0BFD  1003               	clrc
  5630  0BFE  0DD0               	rlf	??_scale,f
  5631  0BFF  3EFF               	addlw	-1
  5632  0C00  1D03               	skipz
  5633  0C01  2BFD               	goto	u4355
  5634  0C02  1003               	clrc
  5635  0C03  0D50               	rlf	??_scale,w
  5636  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5637  0C05  0084               	movwf	4
  5638  0C06  120A  158A  200A  120A  158A  	fcall	stringdir
  5639  0C0B  00D1               	movwf	??_scale+1
  5640  0C0C  120A  158A  200A  120A  158A  	fcall	stringdir
  5641  0C11  00D2               	movwf	??_scale+2
  5642  0C12  120A  158A  200A  120A  158A  	fcall	stringdir
  5643  0C17  00D3               	movwf	??_scale+3
  5644  0C18  120A  158A  200A  120A  158A  	fcall	stringdir
  5645  0C1D  00D4               	movwf	??_scale+4
  5646  0C1E  0854               	movf	??_scale+4,w
  5647  0C1F  00B5               	movwf	___flmul@b+3
  5648  0C20  0853               	movf	??_scale+3,w
  5649  0C21  00B4               	movwf	___flmul@b+2
  5650  0C22  0852               	movf	??_scale+2,w
  5651  0C23  00B3               	movwf	___flmul@b+1
  5652  0C24  0851               	movf	??_scale+1,w
  5653  0C25  00B2               	movwf	___flmul@b
  5654  0C26  300A               	movlw	10
  5655  0C27  00F7               	movwf	___awdiv@divisor
  5656  0C28  3000               	movlw	0
  5657  0C29  00F8               	movwf	___awdiv@divisor+1
  5658  0C2A  085E               	movf	scale@scl,w
  5659  0C2B  00F9               	movwf	___awdiv@dividend
  5660  0C2C  01FA               	clrf	___awdiv@dividend+1
  5661  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  5662  0C2E  03FA               	decf	___awdiv@dividend+1,f
  5663  0C2F  120A  158A  20D7  120A  158A  	fcall	___awdiv
  5664  0C34  0877               	movf	?___awdiv,w
  5665  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  5666  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  5667  0C37  00D5               	movwf	??_scale+5
  5668  0C38  3001               	movlw	1
  5669  0C39                     u4365:
  5670  0C39  1003               	clrc
  5671  0C3A  0DD5               	rlf	??_scale+5,f
  5672  0C3B  3EFF               	addlw	-1
  5673  0C3C  1D03               	skipz
  5674  0C3D  2C39               	goto	u4365
  5675  0C3E  1003               	clrc
  5676  0C3F  0D55               	rlf	??_scale+5,w
  5677  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5678  0C41  0084               	movwf	4
  5679  0C42  120A  158A  200A  120A  158A  	fcall	stringdir
  5680  0C47  00D6               	movwf	??_scale+6
  5681  0C48  120A  158A  200A  120A  158A  	fcall	stringdir
  5682  0C4D  00D7               	movwf	??_scale+7
  5683  0C4E  120A  158A  200A  120A  158A  	fcall	stringdir
  5684  0C53  00D8               	movwf	??_scale+8
  5685  0C54  120A  158A  200A  120A  158A  	fcall	stringdir
  5686  0C59  00D9               	movwf	??_scale+9
  5687  0C5A  0859               	movf	??_scale+9,w
  5688  0C5B  00B9               	movwf	___flmul@a+3
  5689  0C5C  0858               	movf	??_scale+8,w
  5690  0C5D  00B8               	movwf	___flmul@a+2
  5691  0C5E  0857               	movf	??_scale+7,w
  5692  0C5F  00B7               	movwf	___flmul@a+1
  5693  0C60  0856               	movf	??_scale+6,w
  5694  0C61  00B6               	movwf	___flmul@a
  5695  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  5696  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  5697  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  5698  0C69  0835               	movf	?___flmul+3,w
  5699  0C6A  00CF               	movwf	?_scale+3
  5700  0C6B  0834               	movf	?___flmul+2,w
  5701  0C6C  00CE               	movwf	?_scale+2
  5702  0C6D  0833               	movf	?___flmul+1,w
  5703  0C6E  00CD               	movwf	?_scale+1
  5704  0C6F  0832               	movf	?___flmul,w
  5705  0C70  00CC               	movwf	?_scale
  5706  0C71  2C9E               	goto	l247
  5707  0C72                     l2822:
  5708                           
  5709                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  5710  0C72  085E               	movf	scale@scl,w
  5711  0C73  00D0               	movwf	??_scale
  5712  0C74  3001               	movlw	1
  5713  0C75                     u4375:
  5714  0C75  1003               	clrc
  5715  0C76  0DD0               	rlf	??_scale,f
  5716  0C77  3EFF               	addlw	-1
  5717  0C78  1D03               	skipz
  5718  0C79  2C75               	goto	u4375
  5719  0C7A  1003               	clrc
  5720  0C7B  0D50               	rlf	??_scale,w
  5721  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5722  0C7D  0084               	movwf	4
  5723  0C7E  120A  158A  200A  120A  158A  	fcall	stringdir
  5724  0C83  00D1               	movwf	??_scale+1
  5725  0C84  120A  158A  200A  120A  158A  	fcall	stringdir
  5726  0C89  00D2               	movwf	??_scale+2
  5727  0C8A  120A  158A  200A  120A  158A  	fcall	stringdir
  5728  0C8F  00D3               	movwf	??_scale+3
  5729  0C90  120A  158A  200A  120A  158A  	fcall	stringdir
  5730  0C95  00D4               	movwf	??_scale+4
  5731  0C96  0854               	movf	??_scale+4,w
  5732  0C97  00CF               	movwf	?_scale+3
  5733  0C98  0853               	movf	??_scale+3,w
  5734  0C99  00CE               	movwf	?_scale+2
  5735  0C9A  0852               	movf	??_scale+2,w
  5736  0C9B  00CD               	movwf	?_scale+1
  5737  0C9C  0851               	movf	??_scale+1,w
  5738  0C9D  00CC               	movwf	?_scale
  5739  0C9E                     l247:
  5740  0C9E  0008               	return
  5741  0C9F                     __end_of_scale:
  5742                           
  5743                           	psect	text14
  5744  1B7F                     __ptext14:	
  5745 ;; *************** function ___awmod *****************
  5746 ;; Defined at:
  5747 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  5748 ;; Parameters:    Size  Location     Type
  5749 ;;  divisor         2    0[COMMON] int 
  5750 ;;  dividend        2    2[COMMON] int 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  sign            1    6[COMMON] unsigned char 
  5753 ;;  counter         1    5[COMMON] unsigned char 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  2    0[COMMON] int 
  5756 ;; Registers used:
  5757 ;;		wreg, status,2, status,0
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5763 ;;      Params:         4       0       0       0       0
  5764 ;;      Locals:         2       0       0       0       0
  5765 ;;      Temps:          1       0       0       0       0
  5766 ;;      Totals:         7       0       0       0       0
  5767 ;;Total ram usage:        7 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; This function calls:
  5770 ;;		Nothing
  5771 ;; This function is called by:
  5772 ;;		_scale
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           
  5777                           ;psect for function ___awmod
  5778  1B7F                     ___awmod:
  5779  1B7F                     l2332:	
  5780                           ;incstack = 0
  5781                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5782                           
  5783  1B7F  01F6               	clrf	___awmod@sign
  5784  1B80                     l2334:
  5785  1B80  1FF3               	btfss	___awmod@dividend+1,7
  5786  1B81  2B83               	goto	u3081
  5787  1B82  2B84               	goto	u3080
  5788  1B83                     u3081:
  5789  1B83  2B8B               	goto	l2340
  5790  1B84                     u3080:
  5791  1B84                     l2336:
  5792  1B84  09F2               	comf	___awmod@dividend,f
  5793  1B85  09F3               	comf	___awmod@dividend+1,f
  5794  1B86  0AF2               	incf	___awmod@dividend,f
  5795  1B87  1903               	skipnz
  5796  1B88  0AF3               	incf	___awmod@dividend+1,f
  5797  1B89                     l2338:
  5798  1B89  01F6               	clrf	___awmod@sign
  5799  1B8A  0AF6               	incf	___awmod@sign,f
  5800  1B8B                     l2340:
  5801  1B8B  1FF1               	btfss	___awmod@divisor+1,7
  5802  1B8C  2B8E               	goto	u3091
  5803  1B8D  2B8F               	goto	u3090
  5804  1B8E                     u3091:
  5805  1B8E  2B94               	goto	l2344
  5806  1B8F                     u3090:
  5807  1B8F                     l2342:
  5808  1B8F  09F0               	comf	___awmod@divisor,f
  5809  1B90  09F1               	comf	___awmod@divisor+1,f
  5810  1B91  0AF0               	incf	___awmod@divisor,f
  5811  1B92  1903               	skipnz
  5812  1B93  0AF1               	incf	___awmod@divisor+1,f
  5813  1B94                     l2344:
  5814  1B94  0870               	movf	___awmod@divisor,w
  5815  1B95  0471               	iorwf	___awmod@divisor+1,w
  5816  1B96  1903               	btfsc	3,2
  5817  1B97  2B99               	goto	u3101
  5818  1B98  2B9A               	goto	u3100
  5819  1B99                     u3101:
  5820  1B99  2BC9               	goto	l2362
  5821  1B9A                     u3100:
  5822  1B9A                     l2346:
  5823  1B9A  01F5               	clrf	___awmod@counter
  5824  1B9B  0AF5               	incf	___awmod@counter,f
  5825  1B9C  2BA8               	goto	l2352
  5826  1B9D                     l2348:
  5827  1B9D  3001               	movlw	1
  5828  1B9E                     u3115:
  5829  1B9E  1003               	clrc
  5830  1B9F  0DF0               	rlf	___awmod@divisor,f
  5831  1BA0  0DF1               	rlf	___awmod@divisor+1,f
  5832  1BA1  3EFF               	addlw	-1
  5833  1BA2  1D03               	skipz
  5834  1BA3  2B9E               	goto	u3115
  5835  1BA4                     l2350:
  5836  1BA4  3001               	movlw	1
  5837  1BA5  00F4               	movwf	??___awmod
  5838  1BA6  0874               	movf	??___awmod,w
  5839  1BA7  07F5               	addwf	___awmod@counter,f
  5840  1BA8                     l2352:
  5841  1BA8  1FF1               	btfss	___awmod@divisor+1,7
  5842  1BA9  2BAB               	goto	u3121
  5843  1BAA  2BAC               	goto	u3120
  5844  1BAB                     u3121:
  5845  1BAB  2B9D               	goto	l2348
  5846  1BAC                     u3120:
  5847  1BAC                     l2354:
  5848  1BAC  0871               	movf	___awmod@divisor+1,w
  5849  1BAD  0273               	subwf	___awmod@dividend+1,w
  5850  1BAE  1D03               	skipz
  5851  1BAF  2BB2               	goto	u3135
  5852  1BB0  0870               	movf	___awmod@divisor,w
  5853  1BB1  0272               	subwf	___awmod@dividend,w
  5854  1BB2                     u3135:
  5855  1BB2  1C03               	skipc
  5856  1BB3  2BB5               	goto	u3131
  5857  1BB4  2BB6               	goto	u3130
  5858  1BB5                     u3131:
  5859  1BB5  2BBC               	goto	l2358
  5860  1BB6                     u3130:
  5861  1BB6                     l2356:
  5862  1BB6  0870               	movf	___awmod@divisor,w
  5863  1BB7  02F2               	subwf	___awmod@dividend,f
  5864  1BB8  0871               	movf	___awmod@divisor+1,w
  5865  1BB9  1C03               	skipc
  5866  1BBA  03F3               	decf	___awmod@dividend+1,f
  5867  1BBB  02F3               	subwf	___awmod@dividend+1,f
  5868  1BBC                     l2358:
  5869  1BBC  3001               	movlw	1
  5870  1BBD                     u3145:
  5871  1BBD  1003               	clrc
  5872  1BBE  0CF1               	rrf	___awmod@divisor+1,f
  5873  1BBF  0CF0               	rrf	___awmod@divisor,f
  5874  1BC0  3EFF               	addlw	-1
  5875  1BC1  1D03               	skipz
  5876  1BC2  2BBD               	goto	u3145
  5877  1BC3                     l2360:
  5878  1BC3  3001               	movlw	1
  5879  1BC4  02F5               	subwf	___awmod@counter,f
  5880  1BC5  1D03               	btfss	3,2
  5881  1BC6  2BC8               	goto	u3151
  5882  1BC7  2BC9               	goto	u3150
  5883  1BC8                     u3151:
  5884  1BC8  2BAC               	goto	l2354
  5885  1BC9                     u3150:
  5886  1BC9                     l2362:
  5887  1BC9  0876               	movf	___awmod@sign,w
  5888  1BCA  1903               	btfsc	3,2
  5889  1BCB  2BCD               	goto	u3161
  5890  1BCC  2BCE               	goto	u3160
  5891  1BCD                     u3161:
  5892  1BCD  2BD3               	goto	l2366
  5893  1BCE                     u3160:
  5894  1BCE                     l2364:
  5895  1BCE  09F2               	comf	___awmod@dividend,f
  5896  1BCF  09F3               	comf	___awmod@dividend+1,f
  5897  1BD0  0AF2               	incf	___awmod@dividend,f
  5898  1BD1  1903               	skipnz
  5899  1BD2  0AF3               	incf	___awmod@dividend+1,f
  5900  1BD3                     l2366:
  5901  1BD3  0873               	movf	___awmod@dividend+1,w
  5902  1BD4  00F1               	movwf	?___awmod+1
  5903  1BD5  0872               	movf	___awmod@dividend,w
  5904  1BD6  00F0               	movwf	?___awmod
  5905  1BD7                     l483:
  5906  1BD7  0008               	return
  5907  1BD8                     __end_of___awmod:
  5908                           
  5909                           	psect	text15
  5910  08D7                     __ptext15:	
  5911 ;; *************** function ___awdiv *****************
  5912 ;; Defined at:
  5913 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;  divisor         2    7[COMMON] int 
  5916 ;;  dividend        2    9[COMMON] int 
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;  quotient        2    2[BANK0 ] int 
  5919 ;;  sign            1    1[BANK0 ] unsigned char 
  5920 ;;  counter         1    0[BANK0 ] unsigned char 
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  2    7[COMMON] int 
  5923 ;; Registers used:
  5924 ;;		wreg, status,2, status,0
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5930 ;;      Params:         4       0       0       0       0
  5931 ;;      Locals:         0       4       0       0       0
  5932 ;;      Temps:          1       0       0       0       0
  5933 ;;      Totals:         5       4       0       0       0
  5934 ;;Total ram usage:        9 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; This function calls:
  5937 ;;		Nothing
  5938 ;; This function is called by:
  5939 ;;		_conversion
  5940 ;;		_scale
  5941 ;;		_sprintf
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           
  5946                           ;psect for function ___awdiv
  5947  08D7                     ___awdiv:
  5948  08D7                     l2288:	
  5949                           ;incstack = 0
  5950                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5951                           
  5952  08D7  1283               	bcf	3,5	;RP0=0, select bank0
  5953  08D8  1303               	bcf	3,6	;RP1=0, select bank0
  5954  08D9  01A1               	clrf	___awdiv@sign
  5955  08DA                     l2290:
  5956  08DA  1FF8               	btfss	___awdiv@divisor+1,7
  5957  08DB  28DD               	goto	u2981
  5958  08DC  28DE               	goto	u2980
  5959  08DD                     u2981:
  5960  08DD  28E5               	goto	l2296
  5961  08DE                     u2980:
  5962  08DE                     l2292:
  5963  08DE  09F7               	comf	___awdiv@divisor,f
  5964  08DF  09F8               	comf	___awdiv@divisor+1,f
  5965  08E0  0AF7               	incf	___awdiv@divisor,f
  5966  08E1  1903               	skipnz
  5967  08E2  0AF8               	incf	___awdiv@divisor+1,f
  5968  08E3                     l2294:
  5969  08E3  01A1               	clrf	___awdiv@sign
  5970  08E4  0AA1               	incf	___awdiv@sign,f
  5971  08E5                     l2296:
  5972  08E5  1FFA               	btfss	___awdiv@dividend+1,7
  5973  08E6  28E8               	goto	u2991
  5974  08E7  28E9               	goto	u2990
  5975  08E8                     u2991:
  5976  08E8  28F2               	goto	l2302
  5977  08E9                     u2990:
  5978  08E9                     l2298:
  5979  08E9  09F9               	comf	___awdiv@dividend,f
  5980  08EA  09FA               	comf	___awdiv@dividend+1,f
  5981  08EB  0AF9               	incf	___awdiv@dividend,f
  5982  08EC  1903               	skipnz
  5983  08ED  0AFA               	incf	___awdiv@dividend+1,f
  5984  08EE                     l2300:
  5985  08EE  3001               	movlw	1
  5986  08EF  00FB               	movwf	??___awdiv
  5987  08F0  087B               	movf	??___awdiv,w
  5988  08F1  06A1               	xorwf	___awdiv@sign,f
  5989  08F2                     l2302:
  5990  08F2  01A2               	clrf	___awdiv@quotient
  5991  08F3  01A3               	clrf	___awdiv@quotient+1
  5992  08F4                     l2304:
  5993  08F4  0877               	movf	___awdiv@divisor,w
  5994  08F5  0478               	iorwf	___awdiv@divisor+1,w
  5995  08F6  1903               	btfsc	3,2
  5996  08F7  28F9               	goto	u3001
  5997  08F8  28FA               	goto	u3000
  5998  08F9                     u3001:
  5999  08F9  2931               	goto	l2324
  6000  08FA                     u3000:
  6001  08FA                     l2306:
  6002  08FA  01A0               	clrf	___awdiv@counter
  6003  08FB  0AA0               	incf	___awdiv@counter,f
  6004  08FC  2908               	goto	l2312
  6005  08FD                     l2308:
  6006  08FD  3001               	movlw	1
  6007  08FE                     u3015:
  6008  08FE  1003               	clrc
  6009  08FF  0DF7               	rlf	___awdiv@divisor,f
  6010  0900  0DF8               	rlf	___awdiv@divisor+1,f
  6011  0901  3EFF               	addlw	-1
  6012  0902  1D03               	skipz
  6013  0903  28FE               	goto	u3015
  6014  0904                     l2310:
  6015  0904  3001               	movlw	1
  6016  0905  00FB               	movwf	??___awdiv
  6017  0906  087B               	movf	??___awdiv,w
  6018  0907  07A0               	addwf	___awdiv@counter,f
  6019  0908                     l2312:
  6020  0908  1FF8               	btfss	___awdiv@divisor+1,7
  6021  0909  290B               	goto	u3021
  6022  090A  290C               	goto	u3020
  6023  090B                     u3021:
  6024  090B  28FD               	goto	l2308
  6025  090C                     u3020:
  6026  090C                     l2314:
  6027  090C  3001               	movlw	1
  6028  090D                     u3035:
  6029  090D  1003               	clrc
  6030  090E  0DA2               	rlf	___awdiv@quotient,f
  6031  090F  0DA3               	rlf	___awdiv@quotient+1,f
  6032  0910  3EFF               	addlw	-1
  6033  0911  1D03               	skipz
  6034  0912  290D               	goto	u3035
  6035  0913  0878               	movf	___awdiv@divisor+1,w
  6036  0914  027A               	subwf	___awdiv@dividend+1,w
  6037  0915  1D03               	skipz
  6038  0916  2919               	goto	u3045
  6039  0917  0877               	movf	___awdiv@divisor,w
  6040  0918  0279               	subwf	___awdiv@dividend,w
  6041  0919                     u3045:
  6042  0919  1C03               	skipc
  6043  091A  291C               	goto	u3041
  6044  091B  291D               	goto	u3040
  6045  091C                     u3041:
  6046  091C  2924               	goto	l2320
  6047  091D                     u3040:
  6048  091D                     l2316:
  6049  091D  0877               	movf	___awdiv@divisor,w
  6050  091E  02F9               	subwf	___awdiv@dividend,f
  6051  091F  0878               	movf	___awdiv@divisor+1,w
  6052  0920  1C03               	skipc
  6053  0921  03FA               	decf	___awdiv@dividend+1,f
  6054  0922  02FA               	subwf	___awdiv@dividend+1,f
  6055  0923                     l2318:
  6056  0923  1422               	bsf	___awdiv@quotient,0
  6057  0924                     l2320:
  6058  0924  3001               	movlw	1
  6059  0925                     u3055:
  6060  0925  1003               	clrc
  6061  0926  0CF8               	rrf	___awdiv@divisor+1,f
  6062  0927  0CF7               	rrf	___awdiv@divisor,f
  6063  0928  3EFF               	addlw	-1
  6064  0929  1D03               	skipz
  6065  092A  2925               	goto	u3055
  6066  092B                     l2322:
  6067  092B  3001               	movlw	1
  6068  092C  02A0               	subwf	___awdiv@counter,f
  6069  092D  1D03               	btfss	3,2
  6070  092E  2930               	goto	u3061
  6071  092F  2931               	goto	u3060
  6072  0930                     u3061:
  6073  0930  290C               	goto	l2314
  6074  0931                     u3060:
  6075  0931                     l2324:
  6076  0931  0821               	movf	___awdiv@sign,w
  6077  0932  1903               	btfsc	3,2
  6078  0933  2935               	goto	u3071
  6079  0934  2936               	goto	u3070
  6080  0935                     u3071:
  6081  0935  293B               	goto	l2328
  6082  0936                     u3070:
  6083  0936                     l2326:
  6084  0936  09A2               	comf	___awdiv@quotient,f
  6085  0937  09A3               	comf	___awdiv@quotient+1,f
  6086  0938  0AA2               	incf	___awdiv@quotient,f
  6087  0939  1903               	skipnz
  6088  093A  0AA3               	incf	___awdiv@quotient+1,f
  6089  093B                     l2328:
  6090  093B  0823               	movf	___awdiv@quotient+1,w
  6091  093C  00F8               	movwf	?___awdiv+1
  6092  093D  0822               	movf	___awdiv@quotient,w
  6093  093E  00F7               	movwf	?___awdiv
  6094  093F                     l470:
  6095  093F  0008               	return
  6096  0940                     __end_of___awdiv:
  6097                           
  6098                           	psect	text16
  6099  1000                     __ptext16:	
  6100 ;; *************** function _isdigit *****************
  6101 ;; Defined at:
  6102 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;  c               1    wreg     unsigned char 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  c               1    1[COMMON] unsigned char 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;		None               void
  6109 ;; Registers used:
  6110 ;;		wreg, status,2, status,0
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6116 ;;      Params:         0       0       0       0       0
  6117 ;;      Locals:         2       0       0       0       0
  6118 ;;      Temps:          0       0       0       0       0
  6119 ;;      Totals:         2       0       0       0       0
  6120 ;;Total ram usage:        2 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; This function calls:
  6123 ;;		Nothing
  6124 ;; This function is called by:
  6125 ;;		_sprintf
  6126 ;; This function uses a non-reentrant model
  6127 ;;
  6128                           
  6129                           
  6130                           ;psect for function _isdigit
  6131  1000                     _isdigit:
  6132                           
  6133                           ;incstack = 0
  6134                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6135                           ;isdigit@c stored from wreg
  6136  1000  00F1               	movwf	isdigit@c
  6137  1001                     l2826:
  6138  1001  01F0               	clrf	_isdigit$821
  6139  1002                     l2828:
  6140  1002  303A               	movlw	58
  6141  1003  0271               	subwf	isdigit@c,w
  6142  1004  1803               	skipnc
  6143  1005  2807               	goto	u4381
  6144  1006  2808               	goto	u4380
  6145  1007                     u4381:
  6146  1007  2810               	goto	l2834
  6147  1008                     u4380:
  6148  1008                     l2830:
  6149  1008  3030               	movlw	48
  6150  1009  0271               	subwf	isdigit@c,w
  6151  100A  1C03               	skipc
  6152  100B  280D               	goto	u4391
  6153  100C  280E               	goto	u4390
  6154  100D                     u4391:
  6155  100D  2810               	goto	l2834
  6156  100E                     u4390:
  6157  100E                     l2832:
  6158  100E  01F0               	clrf	_isdigit$821
  6159  100F  0AF0               	incf	_isdigit$821,f
  6160  1010                     l2834:
  6161  1010  0C70               	rrf	_isdigit$821,w
  6162  1011                     l804:
  6163  1011  0008               	return
  6164  1012                     __end_of_isdigit:
  6165                           
  6166                           	psect	text17
  6167  12B5                     __ptext17:	
  6168 ;; *************** function _fround *****************
  6169 ;; Defined at:
  6170 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;  prec            1    wreg     unsigned char 
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;  prec            1   63[BANK0 ] unsigned char 
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  4   44[BANK0 ] unsigned char 
  6177 ;; Registers used:
  6178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6184 ;;      Params:         0       4       0       0       0
  6185 ;;      Locals:         0       9       0       0       0
  6186 ;;      Temps:          0       7       0       0       0
  6187 ;;      Totals:         0      20       0       0       0
  6188 ;;Total ram usage:       20 bytes
  6189 ;; Hardware stack levels used:    1
  6190 ;; Hardware stack levels required when called:    2
  6191 ;; This function calls:
  6192 ;;		___flmul
  6193 ;;		___lwdiv
  6194 ;;		___lwmod
  6195 ;; This function is called by:
  6196 ;;		_sprintf
  6197 ;; This function uses a non-reentrant model
  6198 ;;
  6199                           
  6200                           
  6201                           ;psect for function _fround
  6202  12B5                     _fround:
  6203                           
  6204                           ;incstack = 0
  6205                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6206                           ;fround@prec stored from wreg
  6207  12B5  1283               	bcf	3,5	;RP0=0, select bank0
  6208  12B6  1303               	bcf	3,6	;RP1=0, select bank0
  6209  12B7  00DF               	movwf	fround@prec
  6210  12B8                     l2768:
  6211                           
  6212                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  6213  12B8  306E               	movlw	110
  6214  12B9  025F               	subwf	fround@prec,w
  6215  12BA  1C03               	skipc
  6216  12BB  2ABD               	goto	u4131
  6217  12BC  2ABE               	goto	u4130
  6218  12BD                     u4131:
  6219  12BD  2BCB               	goto	l2776
  6220  12BE                     u4130:
  6221  12BE                     l2770:
  6222                           
  6223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  6224  12BE  303F               	movlw	63
  6225  12BF  00B5               	movwf	___flmul@b+3
  6226  12C0  3000               	movlw	0
  6227  12C1  00B4               	movwf	___flmul@b+2
  6228  12C2  3000               	movlw	0
  6229  12C3  00B3               	movwf	___flmul@b+1
  6230  12C4  3000               	movlw	0
  6231  12C5  00B2               	movwf	___flmul@b
  6232  12C6  3064               	movlw	100
  6233  12C7  00F6               	movwf	___lwdiv@divisor
  6234  12C8  3000               	movlw	0
  6235  12C9  00F7               	movwf	___lwdiv@divisor+1
  6236  12CA  085F               	movf	fround@prec,w
  6237  12CB  00D0               	movwf	??_fround
  6238  12CC  01D1               	clrf	??_fround+1
  6239  12CD  0850               	movf	??_fround,w
  6240  12CE  00F8               	movwf	___lwdiv@dividend
  6241  12CF  0851               	movf	??_fround+1,w
  6242  12D0  00F9               	movwf	___lwdiv@dividend+1
  6243  12D1  120A  118A  200B  160A  118A  	fcall	___lwdiv
  6244  12D6  0876               	movf	?___lwdiv,w
  6245  12D7  1283               	bcf	3,5	;RP0=0, select bank0
  6246  12D8  1303               	bcf	3,6	;RP1=0, select bank0
  6247  12D9  00D2               	movwf	??_fround+2
  6248  12DA  3001               	movlw	1
  6249  12DB                     u4145:
  6250  12DB  1003               	clrc
  6251  12DC  0DD2               	rlf	??_fround+2,f
  6252  12DD  3EFF               	addlw	-1
  6253  12DE  1D03               	skipz
  6254  12DF  2ADB               	goto	u4145
  6255  12E0  1003               	clrc
  6256  12E1  0D52               	rlf	??_fround+2,w
  6257  12E2  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  6258  12E3  0084               	movwf	4
  6259  12E4  120A  158A  200A  160A  118A  	fcall	stringdir
  6260  12E9  00D3               	movwf	??_fround+3
  6261  12EA  120A  158A  200A  160A  118A  	fcall	stringdir
  6262  12EF  00D4               	movwf	??_fround+4
  6263  12F0  120A  158A  200A  160A  118A  	fcall	stringdir
  6264  12F5  00D5               	movwf	??_fround+5
  6265  12F6  120A  158A  200A  160A  118A  	fcall	stringdir
  6266  12FB  00D6               	movwf	??_fround+6
  6267  12FC  0856               	movf	??_fround+6,w
  6268  12FD  00B9               	movwf	___flmul@a+3
  6269  12FE  0855               	movf	??_fround+5,w
  6270  12FF  00B8               	movwf	___flmul@a+2
  6271  1300  0854               	movf	??_fround+4,w
  6272  1301  00B7               	movwf	___flmul@a+1
  6273  1302  0853               	movf	??_fround+3,w
  6274  1303  00B6               	movwf	___flmul@a
  6275  1304  120A  158A  249F  160A  118A  	fcall	___flmul
  6276  1309  1283               	bcf	3,5	;RP0=0, select bank0
  6277  130A  1303               	bcf	3,6	;RP1=0, select bank0
  6278  130B  0835               	movf	?___flmul+3,w
  6279  130C  00DE               	movwf	_fround$1005+3
  6280  130D  0834               	movf	?___flmul+2,w
  6281  130E  00DD               	movwf	_fround$1005+2
  6282  130F  0833               	movf	?___flmul+1,w
  6283  1310  00DC               	movwf	_fround$1005+1
  6284  1311  0832               	movf	?___flmul,w
  6285  1312  00DB               	movwf	_fround$1005
  6286                           
  6287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  6288  1313  300A               	movlw	10
  6289  1314  00F6               	movwf	___lwdiv@divisor
  6290  1315  3000               	movlw	0
  6291  1316  00F7               	movwf	___lwdiv@divisor+1
  6292  1317  085F               	movf	fround@prec,w
  6293  1318  00D0               	movwf	??_fround
  6294  1319  01D1               	clrf	??_fround+1
  6295  131A  0850               	movf	??_fround,w
  6296  131B  00F2               	movwf	___lwmod@dividend
  6297  131C  0851               	movf	??_fround+1,w
  6298  131D  00F3               	movwf	___lwmod@dividend+1
  6299  131E  3064               	movlw	100
  6300  131F  00F0               	movwf	___lwmod@divisor
  6301  1320  3000               	movlw	0
  6302  1321  00F1               	movwf	___lwmod@divisor+1
  6303  1322  160A  158A  2211  160A  118A  	fcall	___lwmod
  6304  1327  0871               	movf	?___lwmod+1,w
  6305  1328  00F9               	movwf	___lwdiv@dividend+1
  6306  1329  0870               	movf	?___lwmod,w
  6307  132A  00F8               	movwf	___lwdiv@dividend
  6308  132B  120A  118A  200B  160A  118A  	fcall	___lwdiv
  6309  1330  0876               	movf	?___lwdiv,w
  6310  1331  1283               	bcf	3,5	;RP0=0, select bank0
  6311  1332  1303               	bcf	3,6	;RP1=0, select bank0
  6312  1333  00D2               	movwf	??_fround+2
  6313  1334  3001               	movlw	1
  6314  1335                     u4155:
  6315  1335  1003               	clrc
  6316  1336  0DD2               	rlf	??_fround+2,f
  6317  1337  3EFF               	addlw	-1
  6318  1338  1D03               	skipz
  6319  1339  2B35               	goto	u4155
  6320  133A  1003               	clrc
  6321  133B  0D52               	rlf	??_fround+2,w
  6322  133C  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  6323  133D  0084               	movwf	4
  6324  133E  120A  158A  200A  160A  118A  	fcall	stringdir
  6325  1343  00D3               	movwf	??_fround+3
  6326  1344  120A  158A  200A  160A  118A  	fcall	stringdir
  6327  1349  00D4               	movwf	??_fround+4
  6328  134A  120A  158A  200A  160A  118A  	fcall	stringdir
  6329  134F  00D5               	movwf	??_fround+5
  6330  1350  120A  158A  200A  160A  118A  	fcall	stringdir
  6331  1355  00D6               	movwf	??_fround+6
  6332  1356  0856               	movf	??_fround+6,w
  6333  1357  00B5               	movwf	___flmul@b+3
  6334  1358  0855               	movf	??_fround+5,w
  6335  1359  00B4               	movwf	___flmul@b+2
  6336  135A  0854               	movf	??_fround+4,w
  6337  135B  00B3               	movwf	___flmul@b+1
  6338  135C  0853               	movf	??_fround+3,w
  6339  135D  00B2               	movwf	___flmul@b
  6340  135E  085E               	movf	_fround$1005+3,w
  6341  135F  00B9               	movwf	___flmul@a+3
  6342  1360  085D               	movf	_fround$1005+2,w
  6343  1361  00B8               	movwf	___flmul@a+2
  6344  1362  085C               	movf	_fround$1005+1,w
  6345  1363  00B7               	movwf	___flmul@a+1
  6346  1364  085B               	movf	_fround$1005,w
  6347  1365  00B6               	movwf	___flmul@a
  6348  1366  120A  158A  249F  160A  118A  	fcall	___flmul
  6349  136B  1283               	bcf	3,5	;RP0=0, select bank0
  6350  136C  1303               	bcf	3,6	;RP1=0, select bank0
  6351  136D  0835               	movf	?___flmul+3,w
  6352  136E  00DA               	movwf	_fround$1006+3
  6353  136F  0834               	movf	?___flmul+2,w
  6354  1370  00D9               	movwf	_fround$1006+2
  6355  1371  0833               	movf	?___flmul+1,w
  6356  1372  00D8               	movwf	_fround$1006+1
  6357  1373  0832               	movf	?___flmul,w
  6358  1374  00D7               	movwf	_fround$1006
  6359                           
  6360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  6361  1375  300A               	movlw	10
  6362  1376  00F0               	movwf	___lwmod@divisor
  6363  1377  3000               	movlw	0
  6364  1378  00F1               	movwf	___lwmod@divisor+1
  6365  1379  085F               	movf	fround@prec,w
  6366  137A  00D0               	movwf	??_fround
  6367  137B  01D1               	clrf	??_fround+1
  6368  137C  0850               	movf	??_fround,w
  6369  137D  00F2               	movwf	___lwmod@dividend
  6370  137E  0851               	movf	??_fround+1,w
  6371  137F  00F3               	movwf	___lwmod@dividend+1
  6372  1380  160A  158A  2211  160A  118A  	fcall	___lwmod
  6373  1385  0870               	movf	?___lwmod,w
  6374  1386  1283               	bcf	3,5	;RP0=0, select bank0
  6375  1387  1303               	bcf	3,6	;RP1=0, select bank0
  6376  1388  00D2               	movwf	??_fround+2
  6377  1389  3001               	movlw	1
  6378  138A                     u4165:
  6379  138A  1003               	clrc
  6380  138B  0DD2               	rlf	??_fround+2,f
  6381  138C  3EFF               	addlw	-1
  6382  138D  1D03               	skipz
  6383  138E  2B8A               	goto	u4165
  6384  138F  1003               	clrc
  6385  1390  0D52               	rlf	??_fround+2,w
  6386  1391  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6387  1392  0084               	movwf	4
  6388  1393  120A  158A  200A  160A  118A  	fcall	stringdir
  6389  1398  00D3               	movwf	??_fround+3
  6390  1399  120A  158A  200A  160A  118A  	fcall	stringdir
  6391  139E  00D4               	movwf	??_fround+4
  6392  139F  120A  158A  200A  160A  118A  	fcall	stringdir
  6393  13A4  00D5               	movwf	??_fround+5
  6394  13A5  120A  158A  200A  160A  118A  	fcall	stringdir
  6395  13AA  00D6               	movwf	??_fround+6
  6396  13AB  0856               	movf	??_fround+6,w
  6397  13AC  00B5               	movwf	___flmul@b+3
  6398  13AD  0855               	movf	??_fround+5,w
  6399  13AE  00B4               	movwf	___flmul@b+2
  6400  13AF  0854               	movf	??_fround+4,w
  6401  13B0  00B3               	movwf	___flmul@b+1
  6402  13B1  0853               	movf	??_fround+3,w
  6403  13B2  00B2               	movwf	___flmul@b
  6404  13B3  085A               	movf	_fround$1006+3,w
  6405  13B4  00B9               	movwf	___flmul@a+3
  6406  13B5  0859               	movf	_fround$1006+2,w
  6407  13B6  00B8               	movwf	___flmul@a+2
  6408  13B7  0858               	movf	_fround$1006+1,w
  6409  13B8  00B7               	movwf	___flmul@a+1
  6410  13B9  0857               	movf	_fround$1006,w
  6411  13BA  00B6               	movwf	___flmul@a
  6412  13BB  120A  158A  249F  160A  118A  	fcall	___flmul
  6413  13C0  1283               	bcf	3,5	;RP0=0, select bank0
  6414  13C1  1303               	bcf	3,6	;RP1=0, select bank0
  6415  13C2  0835               	movf	?___flmul+3,w
  6416  13C3  00CF               	movwf	?_fround+3
  6417  13C4  0834               	movf	?___flmul+2,w
  6418  13C5  00CE               	movwf	?_fround+2
  6419  13C6  0833               	movf	?___flmul+1,w
  6420  13C7  00CD               	movwf	?_fround+1
  6421  13C8  0832               	movf	?___flmul,w
  6422  13C9  00CC               	movwf	?_fround
  6423  13CA  2CBF               	goto	l240
  6424  13CB                     l2776:
  6425  13CB  300B               	movlw	11
  6426  13CC  025F               	subwf	fround@prec,w
  6427  13CD  1C03               	skipc
  6428  13CE  2BD0               	goto	u4171
  6429  13CF  2BD1               	goto	u4170
  6430  13D0                     u4171:
  6431  13D0  2C7C               	goto	l2782
  6432  13D1                     u4170:
  6433  13D1                     l2778:
  6434                           
  6435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6436  13D1  303F               	movlw	63
  6437  13D2  00B5               	movwf	___flmul@b+3
  6438  13D3  3000               	movlw	0
  6439  13D4  00B4               	movwf	___flmul@b+2
  6440  13D5  3000               	movlw	0
  6441  13D6  00B3               	movwf	___flmul@b+1
  6442  13D7  3000               	movlw	0
  6443  13D8  00B2               	movwf	___flmul@b
  6444  13D9  300A               	movlw	10
  6445  13DA  00F6               	movwf	___lwdiv@divisor
  6446  13DB  3000               	movlw	0
  6447  13DC  00F7               	movwf	___lwdiv@divisor+1
  6448  13DD  085F               	movf	fround@prec,w
  6449  13DE  00D0               	movwf	??_fround
  6450  13DF  01D1               	clrf	??_fround+1
  6451  13E0  0850               	movf	??_fround,w
  6452  13E1  00F8               	movwf	___lwdiv@dividend
  6453  13E2  0851               	movf	??_fround+1,w
  6454  13E3  00F9               	movwf	___lwdiv@dividend+1
  6455  13E4  120A  118A  200B  160A  118A  	fcall	___lwdiv
  6456  13E9  0876               	movf	?___lwdiv,w
  6457  13EA  1283               	bcf	3,5	;RP0=0, select bank0
  6458  13EB  1303               	bcf	3,6	;RP1=0, select bank0
  6459  13EC  00D2               	movwf	??_fround+2
  6460  13ED  3001               	movlw	1
  6461  13EE                     u4185:
  6462  13EE  1003               	clrc
  6463  13EF  0DD2               	rlf	??_fround+2,f
  6464  13F0  3EFF               	addlw	-1
  6465  13F1  1D03               	skipz
  6466  13F2  2BEE               	goto	u4185
  6467  13F3  1003               	clrc
  6468  13F4  0D52               	rlf	??_fround+2,w
  6469  13F5  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  6470  13F6  0084               	movwf	4
  6471  13F7  120A  158A  200A  160A  118A  	fcall	stringdir
  6472  13FC  00D3               	movwf	??_fround+3
  6473  13FD  120A  158A  200A  160A  118A  	fcall	stringdir
  6474  1402  00D4               	movwf	??_fround+4
  6475  1403  120A  158A  200A  160A  118A  	fcall	stringdir
  6476  1408  00D5               	movwf	??_fround+5
  6477  1409  120A  158A  200A  160A  118A  	fcall	stringdir
  6478  140E  00D6               	movwf	??_fround+6
  6479  140F  0856               	movf	??_fround+6,w
  6480  1410  00B9               	movwf	___flmul@a+3
  6481  1411  0855               	movf	??_fround+5,w
  6482  1412  00B8               	movwf	___flmul@a+2
  6483  1413  0854               	movf	??_fround+4,w
  6484  1414  00B7               	movwf	___flmul@a+1
  6485  1415  0853               	movf	??_fround+3,w
  6486  1416  00B6               	movwf	___flmul@a
  6487  1417  120A  158A  249F  160A  118A  	fcall	___flmul
  6488  141C  1283               	bcf	3,5	;RP0=0, select bank0
  6489  141D  1303               	bcf	3,6	;RP1=0, select bank0
  6490  141E  0835               	movf	?___flmul+3,w
  6491  141F  00DE               	movwf	_fround$1005+3
  6492  1420  0834               	movf	?___flmul+2,w
  6493  1421  00DD               	movwf	_fround$1005+2
  6494  1422  0833               	movf	?___flmul+1,w
  6495  1423  00DC               	movwf	_fround$1005+1
  6496  1424  0832               	movf	?___flmul,w
  6497  1425  00DB               	movwf	_fround$1005
  6498                           
  6499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6500  1426  300A               	movlw	10
  6501  1427  00F0               	movwf	___lwmod@divisor
  6502  1428  3000               	movlw	0
  6503  1429  00F1               	movwf	___lwmod@divisor+1
  6504  142A  085F               	movf	fround@prec,w
  6505  142B  00D0               	movwf	??_fround
  6506  142C  01D1               	clrf	??_fround+1
  6507  142D  0850               	movf	??_fround,w
  6508  142E  00F2               	movwf	___lwmod@dividend
  6509  142F  0851               	movf	??_fround+1,w
  6510  1430  00F3               	movwf	___lwmod@dividend+1
  6511  1431  160A  158A  2211  160A  118A  	fcall	___lwmod
  6512  1436  0870               	movf	?___lwmod,w
  6513  1437  1283               	bcf	3,5	;RP0=0, select bank0
  6514  1438  1303               	bcf	3,6	;RP1=0, select bank0
  6515  1439  00D2               	movwf	??_fround+2
  6516  143A  3001               	movlw	1
  6517  143B                     u4195:
  6518  143B  1003               	clrc
  6519  143C  0DD2               	rlf	??_fround+2,f
  6520  143D  3EFF               	addlw	-1
  6521  143E  1D03               	skipz
  6522  143F  2C3B               	goto	u4195
  6523  1440  1003               	clrc
  6524  1441  0D52               	rlf	??_fround+2,w
  6525  1442  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6526  1443  0084               	movwf	4
  6527  1444  120A  158A  200A  160A  118A  	fcall	stringdir
  6528  1449  00D3               	movwf	??_fround+3
  6529  144A  120A  158A  200A  160A  118A  	fcall	stringdir
  6530  144F  00D4               	movwf	??_fround+4
  6531  1450  120A  158A  200A  160A  118A  	fcall	stringdir
  6532  1455  00D5               	movwf	??_fround+5
  6533  1456  120A  158A  200A  160A  118A  	fcall	stringdir
  6534  145B  00D6               	movwf	??_fround+6
  6535  145C  0856               	movf	??_fround+6,w
  6536  145D  00B5               	movwf	___flmul@b+3
  6537  145E  0855               	movf	??_fround+5,w
  6538  145F  00B4               	movwf	___flmul@b+2
  6539  1460  0854               	movf	??_fround+4,w
  6540  1461  00B3               	movwf	___flmul@b+1
  6541  1462  0853               	movf	??_fround+3,w
  6542  1463  00B2               	movwf	___flmul@b
  6543  1464  085E               	movf	_fround$1005+3,w
  6544  1465  00B9               	movwf	___flmul@a+3
  6545  1466  085D               	movf	_fround$1005+2,w
  6546  1467  00B8               	movwf	___flmul@a+2
  6547  1468  085C               	movf	_fround$1005+1,w
  6548  1469  00B7               	movwf	___flmul@a+1
  6549  146A  085B               	movf	_fround$1005,w
  6550  146B  00B6               	movwf	___flmul@a
  6551  146C  120A  158A  249F  160A  118A  	fcall	___flmul
  6552  1471  1283               	bcf	3,5	;RP0=0, select bank0
  6553  1472  1303               	bcf	3,6	;RP1=0, select bank0
  6554  1473  0835               	movf	?___flmul+3,w
  6555  1474  00CF               	movwf	?_fround+3
  6556  1475  0834               	movf	?___flmul+2,w
  6557  1476  00CE               	movwf	?_fround+2
  6558  1477  0833               	movf	?___flmul+1,w
  6559  1478  00CD               	movwf	?_fround+1
  6560  1479  0832               	movf	?___flmul,w
  6561  147A  00CC               	movwf	?_fround
  6562  147B  2CBF               	goto	l240
  6563  147C                     l2782:
  6564                           
  6565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  6566  147C  303F               	movlw	63
  6567  147D  00B5               	movwf	___flmul@b+3
  6568  147E  3000               	movlw	0
  6569  147F  00B4               	movwf	___flmul@b+2
  6570  1480  3000               	movlw	0
  6571  1481  00B3               	movwf	___flmul@b+1
  6572  1482  3000               	movlw	0
  6573  1483  00B2               	movwf	___flmul@b
  6574  1484  085F               	movf	fround@prec,w
  6575  1485  00D0               	movwf	??_fround
  6576  1486  3001               	movlw	1
  6577  1487                     u4205:
  6578  1487  1003               	clrc
  6579  1488  0DD0               	rlf	??_fround,f
  6580  1489  3EFF               	addlw	-1
  6581  148A  1D03               	skipz
  6582  148B  2C87               	goto	u4205
  6583  148C  1003               	clrc
  6584  148D  0D50               	rlf	??_fround,w
  6585  148E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6586  148F  0084               	movwf	4
  6587  1490  120A  158A  200A  160A  118A  	fcall	stringdir
  6588  1495  00D1               	movwf	??_fround+1
  6589  1496  120A  158A  200A  160A  118A  	fcall	stringdir
  6590  149B  00D2               	movwf	??_fround+2
  6591  149C  120A  158A  200A  160A  118A  	fcall	stringdir
  6592  14A1  00D3               	movwf	??_fround+3
  6593  14A2  120A  158A  200A  160A  118A  	fcall	stringdir
  6594  14A7  00D4               	movwf	??_fround+4
  6595  14A8  0854               	movf	??_fround+4,w
  6596  14A9  00B9               	movwf	___flmul@a+3
  6597  14AA  0853               	movf	??_fround+3,w
  6598  14AB  00B8               	movwf	___flmul@a+2
  6599  14AC  0852               	movf	??_fround+2,w
  6600  14AD  00B7               	movwf	___flmul@a+1
  6601  14AE  0851               	movf	??_fround+1,w
  6602  14AF  00B6               	movwf	___flmul@a
  6603  14B0  120A  158A  249F  160A  118A  	fcall	___flmul
  6604  14B5  1283               	bcf	3,5	;RP0=0, select bank0
  6605  14B6  1303               	bcf	3,6	;RP1=0, select bank0
  6606  14B7  0835               	movf	?___flmul+3,w
  6607  14B8  00CF               	movwf	?_fround+3
  6608  14B9  0834               	movf	?___flmul+2,w
  6609  14BA  00CE               	movwf	?_fround+2
  6610  14BB  0833               	movf	?___flmul+1,w
  6611  14BC  00CD               	movwf	?_fround+1
  6612  14BD  0832               	movf	?___flmul,w
  6613  14BE  00CC               	movwf	?_fround
  6614  14BF                     l240:
  6615  14BF  0008               	return
  6616  14C0                     __end_of_fround:
  6617                           
  6618                           	psect	text18
  6619  1A11                     __ptext18:	
  6620 ;; *************** function ___lwmod *****************
  6621 ;; Defined at:
  6622 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  divisor         2    0[COMMON] unsigned int 
  6625 ;;  dividend        2    2[COMMON] unsigned int 
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;  counter         1    5[COMMON] unsigned char 
  6628 ;; Return value:  Size  Location     Type
  6629 ;;                  2    0[COMMON] unsigned int 
  6630 ;; Registers used:
  6631 ;;		wreg, status,2, status,0
  6632 ;; Tracked objects:
  6633 ;;		On entry : 0/0
  6634 ;;		On exit  : 0/0
  6635 ;;		Unchanged: 0/0
  6636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6637 ;;      Params:         4       0       0       0       0
  6638 ;;      Locals:         1       0       0       0       0
  6639 ;;      Temps:          1       0       0       0       0
  6640 ;;      Totals:         6       0       0       0       0
  6641 ;;Total ram usage:        6 bytes
  6642 ;; Hardware stack levels used:    1
  6643 ;; This function calls:
  6644 ;;		Nothing
  6645 ;; This function is called by:
  6646 ;;		_fround
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           
  6650                           
  6651                           ;psect for function ___lwmod
  6652  1A11                     ___lwmod:
  6653  1A11                     l2396:	
  6654                           ;incstack = 0
  6655                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6656                           
  6657  1A11  0870               	movf	___lwmod@divisor,w
  6658  1A12  0471               	iorwf	___lwmod@divisor+1,w
  6659  1A13  1903               	btfsc	3,2
  6660  1A14  2A16               	goto	u3241
  6661  1A15  2A17               	goto	u3240
  6662  1A16                     u3241:
  6663  1A16  2A46               	goto	l2414
  6664  1A17                     u3240:
  6665  1A17                     l2398:
  6666  1A17  01F5               	clrf	___lwmod@counter
  6667  1A18  0AF5               	incf	___lwmod@counter,f
  6668  1A19  2A25               	goto	l2404
  6669  1A1A                     l2400:
  6670  1A1A  3001               	movlw	1
  6671  1A1B                     u3255:
  6672  1A1B  1003               	clrc
  6673  1A1C  0DF0               	rlf	___lwmod@divisor,f
  6674  1A1D  0DF1               	rlf	___lwmod@divisor+1,f
  6675  1A1E  3EFF               	addlw	-1
  6676  1A1F  1D03               	skipz
  6677  1A20  2A1B               	goto	u3255
  6678  1A21                     l2402:
  6679  1A21  3001               	movlw	1
  6680  1A22  00F4               	movwf	??___lwmod
  6681  1A23  0874               	movf	??___lwmod,w
  6682  1A24  07F5               	addwf	___lwmod@counter,f
  6683  1A25                     l2404:
  6684  1A25  1FF1               	btfss	___lwmod@divisor+1,7
  6685  1A26  2A28               	goto	u3261
  6686  1A27  2A29               	goto	u3260
  6687  1A28                     u3261:
  6688  1A28  2A1A               	goto	l2400
  6689  1A29                     u3260:
  6690  1A29                     l2406:
  6691  1A29  0871               	movf	___lwmod@divisor+1,w
  6692  1A2A  0273               	subwf	___lwmod@dividend+1,w
  6693  1A2B  1D03               	skipz
  6694  1A2C  2A2F               	goto	u3275
  6695  1A2D  0870               	movf	___lwmod@divisor,w
  6696  1A2E  0272               	subwf	___lwmod@dividend,w
  6697  1A2F                     u3275:
  6698  1A2F  1C03               	skipc
  6699  1A30  2A32               	goto	u3271
  6700  1A31  2A33               	goto	u3270
  6701  1A32                     u3271:
  6702  1A32  2A39               	goto	l2410
  6703  1A33                     u3270:
  6704  1A33                     l2408:
  6705  1A33  0870               	movf	___lwmod@divisor,w
  6706  1A34  02F2               	subwf	___lwmod@dividend,f
  6707  1A35  0871               	movf	___lwmod@divisor+1,w
  6708  1A36  1C03               	skipc
  6709  1A37  03F3               	decf	___lwmod@dividend+1,f
  6710  1A38  02F3               	subwf	___lwmod@dividend+1,f
  6711  1A39                     l2410:
  6712  1A39  3001               	movlw	1
  6713  1A3A                     u3285:
  6714  1A3A  1003               	clrc
  6715  1A3B  0CF1               	rrf	___lwmod@divisor+1,f
  6716  1A3C  0CF0               	rrf	___lwmod@divisor,f
  6717  1A3D  3EFF               	addlw	-1
  6718  1A3E  1D03               	skipz
  6719  1A3F  2A3A               	goto	u3285
  6720  1A40                     l2412:
  6721  1A40  3001               	movlw	1
  6722  1A41  02F5               	subwf	___lwmod@counter,f
  6723  1A42  1D03               	btfss	3,2
  6724  1A43  2A45               	goto	u3291
  6725  1A44  2A46               	goto	u3290
  6726  1A45                     u3291:
  6727  1A45  2A29               	goto	l2406
  6728  1A46                     u3290:
  6729  1A46                     l2414:
  6730  1A46  0873               	movf	___lwmod@dividend+1,w
  6731  1A47  00F1               	movwf	?___lwmod+1
  6732  1A48  0872               	movf	___lwmod@dividend,w
  6733  1A49  00F0               	movwf	?___lwmod
  6734  1A4A                     l633:
  6735  1A4A  0008               	return
  6736  1A4B                     __end_of___lwmod:
  6737                           
  6738                           	psect	text19
  6739  000B                     __ptext19:	
  6740 ;; *************** function ___lwdiv *****************
  6741 ;; Defined at:
  6742 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;  divisor         2    6[COMMON] unsigned int 
  6745 ;;  dividend        2    8[COMMON] unsigned int 
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;  quotient        2   11[COMMON] unsigned int 
  6748 ;;  counter         1   13[COMMON] unsigned char 
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  2    6[COMMON] unsigned int 
  6751 ;; Registers used:
  6752 ;;		wreg, status,2, status,0
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6758 ;;      Params:         4       0       0       0       0
  6759 ;;      Locals:         3       0       0       0       0
  6760 ;;      Temps:          1       0       0       0       0
  6761 ;;      Totals:         8       0       0       0       0
  6762 ;;Total ram usage:        8 bytes
  6763 ;; Hardware stack levels used:    1
  6764 ;; This function calls:
  6765 ;;		Nothing
  6766 ;; This function is called by:
  6767 ;;		_fround
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           
  6772                           ;psect for function ___lwdiv
  6773  000B                     ___lwdiv:
  6774  000B                     l2370:	
  6775                           ;incstack = 0
  6776                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6777                           
  6778  000B  01FB               	clrf	___lwdiv@quotient
  6779  000C  01FC               	clrf	___lwdiv@quotient+1
  6780  000D                     l2372:
  6781  000D  0876               	movf	___lwdiv@divisor,w
  6782  000E  0477               	iorwf	___lwdiv@divisor+1,w
  6783  000F  1903               	btfsc	3,2
  6784  0010  2812               	goto	u3171
  6785  0011  2813               	goto	u3170
  6786  0012                     u3171:
  6787  0012  284A               	goto	l2392
  6788  0013                     u3170:
  6789  0013                     l2374:
  6790  0013  01FD               	clrf	___lwdiv@counter
  6791  0014  0AFD               	incf	___lwdiv@counter,f
  6792  0015  2821               	goto	l2380
  6793  0016                     l2376:
  6794  0016  3001               	movlw	1
  6795  0017                     u3185:
  6796  0017  1003               	clrc
  6797  0018  0DF6               	rlf	___lwdiv@divisor,f
  6798  0019  0DF7               	rlf	___lwdiv@divisor+1,f
  6799  001A  3EFF               	addlw	-1
  6800  001B  1D03               	skipz
  6801  001C  2817               	goto	u3185
  6802  001D                     l2378:
  6803  001D  3001               	movlw	1
  6804  001E  00FA               	movwf	??___lwdiv
  6805  001F  087A               	movf	??___lwdiv,w
  6806  0020  07FD               	addwf	___lwdiv@counter,f
  6807  0021                     l2380:
  6808  0021  1FF7               	btfss	___lwdiv@divisor+1,7
  6809  0022  2824               	goto	u3191
  6810  0023  2825               	goto	u3190
  6811  0024                     u3191:
  6812  0024  2816               	goto	l2376
  6813  0025                     u3190:
  6814  0025                     l2382:
  6815  0025  3001               	movlw	1
  6816  0026                     u3205:
  6817  0026  1003               	clrc
  6818  0027  0DFB               	rlf	___lwdiv@quotient,f
  6819  0028  0DFC               	rlf	___lwdiv@quotient+1,f
  6820  0029  3EFF               	addlw	-1
  6821  002A  1D03               	skipz
  6822  002B  2826               	goto	u3205
  6823  002C  0877               	movf	___lwdiv@divisor+1,w
  6824  002D  0279               	subwf	___lwdiv@dividend+1,w
  6825  002E  1D03               	skipz
  6826  002F  2832               	goto	u3215
  6827  0030  0876               	movf	___lwdiv@divisor,w
  6828  0031  0278               	subwf	___lwdiv@dividend,w
  6829  0032                     u3215:
  6830  0032  1C03               	skipc
  6831  0033  2835               	goto	u3211
  6832  0034  2836               	goto	u3210
  6833  0035                     u3211:
  6834  0035  283D               	goto	l2388
  6835  0036                     u3210:
  6836  0036                     l2384:
  6837  0036  0876               	movf	___lwdiv@divisor,w
  6838  0037  02F8               	subwf	___lwdiv@dividend,f
  6839  0038  0877               	movf	___lwdiv@divisor+1,w
  6840  0039  1C03               	skipc
  6841  003A  03F9               	decf	___lwdiv@dividend+1,f
  6842  003B  02F9               	subwf	___lwdiv@dividend+1,f
  6843  003C                     l2386:
  6844  003C  147B               	bsf	___lwdiv@quotient,0
  6845  003D                     l2388:
  6846  003D  3001               	movlw	1
  6847  003E                     u3225:
  6848  003E  1003               	clrc
  6849  003F  0CF7               	rrf	___lwdiv@divisor+1,f
  6850  0040  0CF6               	rrf	___lwdiv@divisor,f
  6851  0041  3EFF               	addlw	-1
  6852  0042  1D03               	skipz
  6853  0043  283E               	goto	u3225
  6854  0044                     l2390:
  6855  0044  3001               	movlw	1
  6856  0045  02FD               	subwf	___lwdiv@counter,f
  6857  0046  1D03               	btfss	3,2
  6858  0047  2849               	goto	u3231
  6859  0048  284A               	goto	u3230
  6860  0049                     u3231:
  6861  0049  2825               	goto	l2382
  6862  004A                     u3230:
  6863  004A                     l2392:
  6864  004A  087C               	movf	___lwdiv@quotient+1,w
  6865  004B  00F7               	movwf	?___lwdiv+1
  6866  004C  087B               	movf	___lwdiv@quotient,w
  6867  004D  00F6               	movwf	?___lwdiv
  6868  004E                     l623:
  6869  004E  0008               	return
  6870  004F                     __end_of___lwdiv:
  6871                           
  6872                           	psect	text20
  6873  0C9F                     __ptext20:	
  6874 ;; *************** function ___flmul *****************
  6875 ;; Defined at:
  6876 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  b               4   18[BANK0 ] unsigned int 
  6879 ;;  a               4   22[BANK0 ] unsigned int 
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;  prod            4   38[BANK0 ] struct .
  6882 ;;  grs             4   32[BANK0 ] unsigned long 
  6883 ;;  temp            2   42[BANK0 ] struct .
  6884 ;;  bexp            1   37[BANK0 ] unsigned char 
  6885 ;;  aexp            1   36[BANK0 ] unsigned char 
  6886 ;;  sign            1   31[BANK0 ] unsigned char 
  6887 ;; Return value:  Size  Location     Type
  6888 ;;                  4   18[BANK0 ] unsigned char 
  6889 ;; Registers used:
  6890 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6891 ;; Tracked objects:
  6892 ;;		On entry : 0/0
  6893 ;;		On exit  : 0/0
  6894 ;;		Unchanged: 0/0
  6895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6896 ;;      Params:         0       8       0       0       0
  6897 ;;      Locals:         0      13       0       0       0
  6898 ;;      Temps:          0       5       0       0       0
  6899 ;;      Totals:         0      26       0       0       0
  6900 ;;Total ram usage:       26 bytes
  6901 ;; Hardware stack levels used:    1
  6902 ;; Hardware stack levels required when called:    1
  6903 ;; This function calls:
  6904 ;;		__Umul8_16
  6905 ;; This function is called by:
  6906 ;;		_temperaturac
  6907 ;;		_fround
  6908 ;;		_scale
  6909 ;;		_sprintf
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           
  6913                           
  6914                           ;psect for function ___flmul
  6915  0C9F                     ___flmul:
  6916  0C9F                     l2612:	
  6917                           ;incstack = 0
  6918                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6919                           
  6920  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  6921  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  6922  0CA1  0835               	movf	___flmul@b+3,w
  6923  0CA2  3980               	andlw	128
  6924  0CA3  00BA               	movwf	??___flmul
  6925  0CA4  083A               	movf	??___flmul,w
  6926  0CA5  00BF               	movwf	___flmul@sign
  6927  0CA6                     l2614:
  6928  0CA6  0835               	movf	___flmul@b+3,w
  6929  0CA7  00BA               	movwf	??___flmul
  6930  0CA8  073A               	addwf	??___flmul,w
  6931  0CA9  00BB               	movwf	??___flmul+1
  6932  0CAA  083B               	movf	??___flmul+1,w
  6933  0CAB  00C5               	movwf	___flmul@bexp
  6934  0CAC                     l2616:
  6935  0CAC  1FB4               	btfss	___flmul@b+2,7
  6936  0CAD  2CAF               	goto	u3761
  6937  0CAE  2CB0               	goto	u3760
  6938  0CAF                     u3761:
  6939  0CAF  2CB1               	goto	l2620
  6940  0CB0                     u3760:
  6941  0CB0                     l2618:
  6942  0CB0  1445               	bsf	___flmul@bexp,0
  6943  0CB1                     l2620:
  6944  0CB1  0845               	movf	___flmul@bexp,w
  6945  0CB2  1903               	btfsc	3,2
  6946  0CB3  2CB5               	goto	u3771
  6947  0CB4  2CB6               	goto	u3770
  6948  0CB5                     u3771:
  6949  0CB5  2CC5               	goto	l2628
  6950  0CB6                     u3770:
  6951  0CB6                     l2622:
  6952  0CB6  0A45               	incf	___flmul@bexp,w
  6953  0CB7  1D03               	btfss	3,2
  6954  0CB8  2CBA               	goto	u3781
  6955  0CB9  2CBB               	goto	u3780
  6956  0CBA                     u3781:
  6957  0CBA  2CC3               	goto	l2626
  6958  0CBB                     u3780:
  6959  0CBB                     l2624:
  6960  0CBB  3000               	movlw	0
  6961  0CBC  00B5               	movwf	___flmul@b+3
  6962  0CBD  3000               	movlw	0
  6963  0CBE  00B4               	movwf	___flmul@b+2
  6964  0CBF  3000               	movlw	0
  6965  0CC0  00B3               	movwf	___flmul@b+1
  6966  0CC1  3000               	movlw	0
  6967  0CC2  00B2               	movwf	___flmul@b
  6968  0CC3                     l2626:
  6969  0CC3  17B4               	bsf	___flmul@b+2,7
  6970  0CC4  2CCD               	goto	l2630
  6971  0CC5                     l2628:
  6972  0CC5  3000               	movlw	0
  6973  0CC6  00B5               	movwf	___flmul@b+3
  6974  0CC7  3000               	movlw	0
  6975  0CC8  00B4               	movwf	___flmul@b+2
  6976  0CC9  3000               	movlw	0
  6977  0CCA  00B3               	movwf	___flmul@b+1
  6978  0CCB  3000               	movlw	0
  6979  0CCC  00B2               	movwf	___flmul@b
  6980  0CCD                     l2630:
  6981  0CCD  0839               	movf	___flmul@a+3,w
  6982  0CCE  3980               	andlw	128
  6983  0CCF  00BA               	movwf	??___flmul
  6984  0CD0  083A               	movf	??___flmul,w
  6985  0CD1  06BF               	xorwf	___flmul@sign,f
  6986  0CD2                     l2632:
  6987  0CD2  0839               	movf	___flmul@a+3,w
  6988  0CD3  00BA               	movwf	??___flmul
  6989  0CD4  073A               	addwf	??___flmul,w
  6990  0CD5  00BB               	movwf	??___flmul+1
  6991  0CD6  083B               	movf	??___flmul+1,w
  6992  0CD7  00C4               	movwf	___flmul@aexp
  6993  0CD8                     l2634:
  6994  0CD8  1FB8               	btfss	___flmul@a+2,7
  6995  0CD9  2CDB               	goto	u3791
  6996  0CDA  2CDC               	goto	u3790
  6997  0CDB                     u3791:
  6998  0CDB  2CDD               	goto	l2638
  6999  0CDC                     u3790:
  7000  0CDC                     l2636:
  7001  0CDC  1444               	bsf	___flmul@aexp,0
  7002  0CDD                     l2638:
  7003  0CDD  0844               	movf	___flmul@aexp,w
  7004  0CDE  1903               	btfsc	3,2
  7005  0CDF  2CE1               	goto	u3801
  7006  0CE0  2CE2               	goto	u3800
  7007  0CE1                     u3801:
  7008  0CE1  2CF1               	goto	l2646
  7009  0CE2                     u3800:
  7010  0CE2                     l2640:
  7011  0CE2  0A44               	incf	___flmul@aexp,w
  7012  0CE3  1D03               	btfss	3,2
  7013  0CE4  2CE6               	goto	u3811
  7014  0CE5  2CE7               	goto	u3810
  7015  0CE6                     u3811:
  7016  0CE6  2CEF               	goto	l2644
  7017  0CE7                     u3810:
  7018  0CE7                     l2642:
  7019  0CE7  3000               	movlw	0
  7020  0CE8  00B9               	movwf	___flmul@a+3
  7021  0CE9  3000               	movlw	0
  7022  0CEA  00B8               	movwf	___flmul@a+2
  7023  0CEB  3000               	movlw	0
  7024  0CEC  00B7               	movwf	___flmul@a+1
  7025  0CED  3000               	movlw	0
  7026  0CEE  00B6               	movwf	___flmul@a
  7027  0CEF                     l2644:
  7028  0CEF  17B8               	bsf	___flmul@a+2,7
  7029  0CF0  2CF9               	goto	l2648
  7030  0CF1                     l2646:
  7031  0CF1  3000               	movlw	0
  7032  0CF2  00B9               	movwf	___flmul@a+3
  7033  0CF3  3000               	movlw	0
  7034  0CF4  00B8               	movwf	___flmul@a+2
  7035  0CF5  3000               	movlw	0
  7036  0CF6  00B7               	movwf	___flmul@a+1
  7037  0CF7  3000               	movlw	0
  7038  0CF8  00B6               	movwf	___flmul@a
  7039  0CF9                     l2648:
  7040  0CF9  0844               	movf	___flmul@aexp,w
  7041  0CFA  1903               	btfsc	3,2
  7042  0CFB  2CFD               	goto	u3821
  7043  0CFC  2CFE               	goto	u3820
  7044  0CFD                     u3821:
  7045  0CFD  2D03               	goto	l2652
  7046  0CFE                     u3820:
  7047  0CFE                     l2650:
  7048  0CFE  0845               	movf	___flmul@bexp,w
  7049  0CFF  1D03               	btfss	3,2
  7050  0D00  2D02               	goto	u3831
  7051  0D01  2D03               	goto	u3830
  7052  0D02                     u3831:
  7053  0D02  2D0C               	goto	l2656
  7054  0D03                     u3830:
  7055  0D03                     l2652:
  7056  0D03  3000               	movlw	0
  7057  0D04  00B5               	movwf	?___flmul+3
  7058  0D05  3000               	movlw	0
  7059  0D06  00B4               	movwf	?___flmul+2
  7060  0D07  3000               	movlw	0
  7061  0D08  00B3               	movwf	?___flmul+1
  7062  0D09  3000               	movlw	0
  7063  0D0A  00B2               	movwf	?___flmul
  7064  0D0B  2FFF               	goto	l740
  7065  0D0C                     l2656:
  7066  0D0C  0832               	movf	___flmul@b,w
  7067  0D0D  00BA               	movwf	??___flmul
  7068  0D0E  083A               	movf	??___flmul,w
  7069  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  7070  0D10  0838               	movf	___flmul@a+2,w
  7071  0D11  160A  158A  21B4  120A  158A  	fcall	__Umul8_16
  7072  0D16  0871               	movf	?__Umul8_16+1,w
  7073  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  7074  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  7075  0D19  00CB               	movwf	___flmul@temp+1
  7076  0D1A  0870               	movf	?__Umul8_16,w
  7077  0D1B  00CA               	movwf	___flmul@temp
  7078  0D1C                     l2658:
  7079  0D1C  084A               	movf	___flmul@temp,w
  7080  0D1D  00BA               	movwf	??___flmul
  7081  0D1E  01BB               	clrf	??___flmul+1
  7082  0D1F  01BC               	clrf	??___flmul+2
  7083  0D20  01BD               	clrf	??___flmul+3
  7084  0D21  083D               	movf	??___flmul+3,w
  7085  0D22  00C3               	movwf	___flmul@grs+3
  7086  0D23  083C               	movf	??___flmul+2,w
  7087  0D24  00C2               	movwf	___flmul@grs+2
  7088  0D25  083B               	movf	??___flmul+1,w
  7089  0D26  00C1               	movwf	___flmul@grs+1
  7090  0D27  083A               	movf	??___flmul,w
  7091  0D28  00C0               	movwf	___flmul@grs
  7092  0D29                     l2660:
  7093  0D29  084B               	movf	___flmul@temp+1,w
  7094  0D2A  00BA               	movwf	??___flmul
  7095  0D2B  01BB               	clrf	??___flmul+1
  7096  0D2C  01BC               	clrf	??___flmul+2
  7097  0D2D  01BD               	clrf	??___flmul+3
  7098  0D2E  083D               	movf	??___flmul+3,w
  7099  0D2F  00C9               	movwf	___flmul@prod+3
  7100  0D30  083C               	movf	??___flmul+2,w
  7101  0D31  00C8               	movwf	___flmul@prod+2
  7102  0D32  083B               	movf	??___flmul+1,w
  7103  0D33  00C7               	movwf	___flmul@prod+1
  7104  0D34  083A               	movf	??___flmul,w
  7105  0D35  00C6               	movwf	___flmul@prod
  7106  0D36  0833               	movf	___flmul@b+1,w
  7107  0D37  00BA               	movwf	??___flmul
  7108  0D38  083A               	movf	??___flmul,w
  7109  0D39  00F0               	movwf	__Umul8_16@multiplicand
  7110  0D3A  0837               	movf	___flmul@a+1,w
  7111  0D3B  160A  158A  21B4  120A  158A  	fcall	__Umul8_16
  7112  0D40  0871               	movf	?__Umul8_16+1,w
  7113  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  7114  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  7115  0D43  00CB               	movwf	___flmul@temp+1
  7116  0D44  0870               	movf	?__Umul8_16,w
  7117  0D45  00CA               	movwf	___flmul@temp
  7118  0D46                     l2662:
  7119  0D46  084A               	movf	___flmul@temp,w
  7120  0D47  00BA               	movwf	??___flmul
  7121  0D48  01BB               	clrf	??___flmul+1
  7122  0D49  01BC               	clrf	??___flmul+2
  7123  0D4A  01BD               	clrf	??___flmul+3
  7124  0D4B  083A               	movf	??___flmul,w
  7125  0D4C  07C0               	addwf	___flmul@grs,f
  7126  0D4D  083B               	movf	??___flmul+1,w
  7127  0D4E  1103               	clrz
  7128  0D4F  1803               	skipnc
  7129  0D50  3E01               	addlw	1
  7130  0D51  1903               	skipnz
  7131  0D52  2D54               	goto	u3841
  7132  0D53  07C1               	addwf	___flmul@grs+1,f
  7133  0D54                     u3841:
  7134  0D54  083C               	movf	??___flmul+2,w
  7135  0D55  1103               	clrz
  7136  0D56  1803               	skipnc
  7137  0D57  3E01               	addlw	1
  7138  0D58  1903               	skipnz
  7139  0D59  2D5B               	goto	u3842
  7140  0D5A  07C2               	addwf	___flmul@grs+2,f
  7141  0D5B                     u3842:
  7142  0D5B  083D               	movf	??___flmul+3,w
  7143  0D5C  1103               	clrz
  7144  0D5D  1803               	skipnc
  7145  0D5E  3E01               	addlw	1
  7146  0D5F  1903               	skipnz
  7147  0D60  2D62               	goto	u3843
  7148  0D61  07C3               	addwf	___flmul@grs+3,f
  7149  0D62                     u3843:
  7150  0D62                     l2664:
  7151  0D62  084B               	movf	___flmul@temp+1,w
  7152  0D63  00BA               	movwf	??___flmul
  7153  0D64  01BB               	clrf	??___flmul+1
  7154  0D65  01BC               	clrf	??___flmul+2
  7155  0D66  01BD               	clrf	??___flmul+3
  7156  0D67  083A               	movf	??___flmul,w
  7157  0D68  07C6               	addwf	___flmul@prod,f
  7158  0D69  083B               	movf	??___flmul+1,w
  7159  0D6A  1103               	clrz
  7160  0D6B  1803               	skipnc
  7161  0D6C  3E01               	addlw	1
  7162  0D6D  1903               	skipnz
  7163  0D6E  2D70               	goto	u3851
  7164  0D6F  07C7               	addwf	___flmul@prod+1,f
  7165  0D70                     u3851:
  7166  0D70  083C               	movf	??___flmul+2,w
  7167  0D71  1103               	clrz
  7168  0D72  1803               	skipnc
  7169  0D73  3E01               	addlw	1
  7170  0D74  1903               	skipnz
  7171  0D75  2D77               	goto	u3852
  7172  0D76  07C8               	addwf	___flmul@prod+2,f
  7173  0D77                     u3852:
  7174  0D77  083D               	movf	??___flmul+3,w
  7175  0D78  1103               	clrz
  7176  0D79  1803               	skipnc
  7177  0D7A  3E01               	addlw	1
  7178  0D7B  1903               	skipnz
  7179  0D7C  2D7E               	goto	u3853
  7180  0D7D  07C9               	addwf	___flmul@prod+3,f
  7181  0D7E                     u3853:
  7182  0D7E  0834               	movf	___flmul@b+2,w
  7183  0D7F  00BA               	movwf	??___flmul
  7184  0D80  083A               	movf	??___flmul,w
  7185  0D81  00F0               	movwf	__Umul8_16@multiplicand
  7186  0D82  0836               	movf	___flmul@a,w
  7187  0D83  160A  158A  21B4  120A  158A  	fcall	__Umul8_16
  7188  0D88  0871               	movf	?__Umul8_16+1,w
  7189  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  7190  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  7191  0D8B  00CB               	movwf	___flmul@temp+1
  7192  0D8C  0870               	movf	?__Umul8_16,w
  7193  0D8D  00CA               	movwf	___flmul@temp
  7194  0D8E                     l2666:
  7195  0D8E  084A               	movf	___flmul@temp,w
  7196  0D8F  00BA               	movwf	??___flmul
  7197  0D90  01BB               	clrf	??___flmul+1
  7198  0D91  01BC               	clrf	??___flmul+2
  7199  0D92  01BD               	clrf	??___flmul+3
  7200  0D93  083A               	movf	??___flmul,w
  7201  0D94  07C0               	addwf	___flmul@grs,f
  7202  0D95  083B               	movf	??___flmul+1,w
  7203  0D96  1103               	clrz
  7204  0D97  1803               	skipnc
  7205  0D98  3E01               	addlw	1
  7206  0D99  1903               	skipnz
  7207  0D9A  2D9C               	goto	u3861
  7208  0D9B  07C1               	addwf	___flmul@grs+1,f
  7209  0D9C                     u3861:
  7210  0D9C  083C               	movf	??___flmul+2,w
  7211  0D9D  1103               	clrz
  7212  0D9E  1803               	skipnc
  7213  0D9F  3E01               	addlw	1
  7214  0DA0  1903               	skipnz
  7215  0DA1  2DA3               	goto	u3862
  7216  0DA2  07C2               	addwf	___flmul@grs+2,f
  7217  0DA3                     u3862:
  7218  0DA3  083D               	movf	??___flmul+3,w
  7219  0DA4  1103               	clrz
  7220  0DA5  1803               	skipnc
  7221  0DA6  3E01               	addlw	1
  7222  0DA7  1903               	skipnz
  7223  0DA8  2DAA               	goto	u3863
  7224  0DA9  07C3               	addwf	___flmul@grs+3,f
  7225  0DAA                     u3863:
  7226  0DAA                     l2668:
  7227  0DAA  084B               	movf	___flmul@temp+1,w
  7228  0DAB  00BA               	movwf	??___flmul
  7229  0DAC  01BB               	clrf	??___flmul+1
  7230  0DAD  01BC               	clrf	??___flmul+2
  7231  0DAE  01BD               	clrf	??___flmul+3
  7232  0DAF  083A               	movf	??___flmul,w
  7233  0DB0  07C6               	addwf	___flmul@prod,f
  7234  0DB1  083B               	movf	??___flmul+1,w
  7235  0DB2  1103               	clrz
  7236  0DB3  1803               	skipnc
  7237  0DB4  3E01               	addlw	1
  7238  0DB5  1903               	skipnz
  7239  0DB6  2DB8               	goto	u3871
  7240  0DB7  07C7               	addwf	___flmul@prod+1,f
  7241  0DB8                     u3871:
  7242  0DB8  083C               	movf	??___flmul+2,w
  7243  0DB9  1103               	clrz
  7244  0DBA  1803               	skipnc
  7245  0DBB  3E01               	addlw	1
  7246  0DBC  1903               	skipnz
  7247  0DBD  2DBF               	goto	u3872
  7248  0DBE  07C8               	addwf	___flmul@prod+2,f
  7249  0DBF                     u3872:
  7250  0DBF  083D               	movf	??___flmul+3,w
  7251  0DC0  1103               	clrz
  7252  0DC1  1803               	skipnc
  7253  0DC2  3E01               	addlw	1
  7254  0DC3  1903               	skipnz
  7255  0DC4  2DC6               	goto	u3873
  7256  0DC5  07C9               	addwf	___flmul@prod+3,f
  7257  0DC6                     u3873:
  7258  0DC6                     l2670:
  7259  0DC6  3008               	movlw	8
  7260  0DC7  00BA               	movwf	??___flmul
  7261  0DC8                     u3885:
  7262  0DC8  1003               	clrc
  7263  0DC9  0DC0               	rlf	___flmul@grs,f
  7264  0DCA  0DC1               	rlf	___flmul@grs+1,f
  7265  0DCB  0DC2               	rlf	___flmul@grs+2,f
  7266  0DCC  0DC3               	rlf	___flmul@grs+3,f
  7267  0DCD  0BBA               	decfsz	??___flmul,f
  7268  0DCE  2DC8               	goto	u3885
  7269  0DCF                     l2672:
  7270  0DCF  0833               	movf	___flmul@b+1,w
  7271  0DD0  00BA               	movwf	??___flmul
  7272  0DD1  083A               	movf	??___flmul,w
  7273  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  7274  0DD3  0836               	movf	___flmul@a,w
  7275  0DD4  160A  158A  21B4  120A  158A  	fcall	__Umul8_16
  7276  0DD9  0871               	movf	?__Umul8_16+1,w
  7277  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  7278  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  7279  0DDC  00CB               	movwf	___flmul@temp+1
  7280  0DDD  0870               	movf	?__Umul8_16,w
  7281  0DDE  00CA               	movwf	___flmul@temp
  7282  0DDF                     l2674:
  7283  0DDF  084A               	movf	___flmul@temp,w
  7284  0DE0  00BA               	movwf	??___flmul
  7285  0DE1  084B               	movf	___flmul@temp+1,w
  7286  0DE2  00BB               	movwf	??___flmul+1
  7287  0DE3  01BC               	clrf	??___flmul+2
  7288  0DE4  01BD               	clrf	??___flmul+3
  7289  0DE5  083A               	movf	??___flmul,w
  7290  0DE6  07C0               	addwf	___flmul@grs,f
  7291  0DE7  083B               	movf	??___flmul+1,w
  7292  0DE8  1103               	clrz
  7293  0DE9  1803               	skipnc
  7294  0DEA  3E01               	addlw	1
  7295  0DEB  1903               	skipnz
  7296  0DEC  2DEE               	goto	u3891
  7297  0DED  07C1               	addwf	___flmul@grs+1,f
  7298  0DEE                     u3891:
  7299  0DEE  083C               	movf	??___flmul+2,w
  7300  0DEF  1103               	clrz
  7301  0DF0  1803               	skipnc
  7302  0DF1  3E01               	addlw	1
  7303  0DF2  1903               	skipnz
  7304  0DF3  2DF5               	goto	u3892
  7305  0DF4  07C2               	addwf	___flmul@grs+2,f
  7306  0DF5                     u3892:
  7307  0DF5  083D               	movf	??___flmul+3,w
  7308  0DF6  1103               	clrz
  7309  0DF7  1803               	skipnc
  7310  0DF8  3E01               	addlw	1
  7311  0DF9  1903               	skipnz
  7312  0DFA  2DFC               	goto	u3893
  7313  0DFB  07C3               	addwf	___flmul@grs+3,f
  7314  0DFC                     u3893:
  7315  0DFC                     l2676:
  7316  0DFC  0832               	movf	___flmul@b,w
  7317  0DFD  00BA               	movwf	??___flmul
  7318  0DFE  083A               	movf	??___flmul,w
  7319  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  7320  0E00  0837               	movf	___flmul@a+1,w
  7321  0E01  160A  158A  21B4  120A  158A  	fcall	__Umul8_16
  7322  0E06  0871               	movf	?__Umul8_16+1,w
  7323  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  7324  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  7325  0E09  00CB               	movwf	___flmul@temp+1
  7326  0E0A  0870               	movf	?__Umul8_16,w
  7327  0E0B  00CA               	movwf	___flmul@temp
  7328  0E0C                     l2678:
  7329  0E0C  084A               	movf	___flmul@temp,w
  7330  0E0D  00BA               	movwf	??___flmul
  7331  0E0E  084B               	movf	___flmul@temp+1,w
  7332  0E0F  00BB               	movwf	??___flmul+1
  7333  0E10  01BC               	clrf	??___flmul+2
  7334  0E11  01BD               	clrf	??___flmul+3
  7335  0E12  083A               	movf	??___flmul,w
  7336  0E13  07C0               	addwf	___flmul@grs,f
  7337  0E14  083B               	movf	??___flmul+1,w
  7338  0E15  1103               	clrz
  7339  0E16  1803               	skipnc
  7340  0E17  3E01               	addlw	1
  7341  0E18  1903               	skipnz
  7342  0E19  2E1B               	goto	u3901
  7343  0E1A  07C1               	addwf	___flmul@grs+1,f
  7344  0E1B                     u3901:
  7345  0E1B  083C               	movf	??___flmul+2,w
  7346  0E1C  1103               	clrz
  7347  0E1D  1803               	skipnc
  7348  0E1E  3E01               	addlw	1
  7349  0E1F  1903               	skipnz
  7350  0E20  2E22               	goto	u3902
  7351  0E21  07C2               	addwf	___flmul@grs+2,f
  7352  0E22                     u3902:
  7353  0E22  083D               	movf	??___flmul+3,w
  7354  0E23  1103               	clrz
  7355  0E24  1803               	skipnc
  7356  0E25  3E01               	addlw	1
  7357  0E26  1903               	skipnz
  7358  0E27  2E29               	goto	u3903
  7359  0E28  07C3               	addwf	___flmul@grs+3,f
  7360  0E29                     u3903:
  7361  0E29                     l2680:
  7362  0E29  3008               	movlw	8
  7363  0E2A  00BA               	movwf	??___flmul
  7364  0E2B                     u3915:
  7365  0E2B  1003               	clrc
  7366  0E2C  0DC0               	rlf	___flmul@grs,f
  7367  0E2D  0DC1               	rlf	___flmul@grs+1,f
  7368  0E2E  0DC2               	rlf	___flmul@grs+2,f
  7369  0E2F  0DC3               	rlf	___flmul@grs+3,f
  7370  0E30  0BBA               	decfsz	??___flmul,f
  7371  0E31  2E2B               	goto	u3915
  7372  0E32  0832               	movf	___flmul@b,w
  7373  0E33  00BA               	movwf	??___flmul
  7374  0E34  083A               	movf	??___flmul,w
  7375  0E35  00F0               	movwf	__Umul8_16@multiplicand
  7376  0E36  0836               	movf	___flmul@a,w
  7377  0E37  160A  158A  21B4  120A  158A  	fcall	__Umul8_16
  7378  0E3C  0871               	movf	?__Umul8_16+1,w
  7379  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  7380  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  7381  0E3F  00CB               	movwf	___flmul@temp+1
  7382  0E40  0870               	movf	?__Umul8_16,w
  7383  0E41  00CA               	movwf	___flmul@temp
  7384  0E42                     l2682:
  7385  0E42  084A               	movf	___flmul@temp,w
  7386  0E43  00BA               	movwf	??___flmul
  7387  0E44  084B               	movf	___flmul@temp+1,w
  7388  0E45  00BB               	movwf	??___flmul+1
  7389  0E46  01BC               	clrf	??___flmul+2
  7390  0E47  01BD               	clrf	??___flmul+3
  7391  0E48  083A               	movf	??___flmul,w
  7392  0E49  07C0               	addwf	___flmul@grs,f
  7393  0E4A  083B               	movf	??___flmul+1,w
  7394  0E4B  1103               	clrz
  7395  0E4C  1803               	skipnc
  7396  0E4D  3E01               	addlw	1
  7397  0E4E  1903               	skipnz
  7398  0E4F  2E51               	goto	u3921
  7399  0E50  07C1               	addwf	___flmul@grs+1,f
  7400  0E51                     u3921:
  7401  0E51  083C               	movf	??___flmul+2,w
  7402  0E52  1103               	clrz
  7403  0E53  1803               	skipnc
  7404  0E54  3E01               	addlw	1
  7405  0E55  1903               	skipnz
  7406  0E56  2E58               	goto	u3922
  7407  0E57  07C2               	addwf	___flmul@grs+2,f
  7408  0E58                     u3922:
  7409  0E58  083D               	movf	??___flmul+3,w
  7410  0E59  1103               	clrz
  7411  0E5A  1803               	skipnc
  7412  0E5B  3E01               	addlw	1
  7413  0E5C  1903               	skipnz
  7414  0E5D  2E5F               	goto	u3923
  7415  0E5E  07C3               	addwf	___flmul@grs+3,f
  7416  0E5F                     u3923:
  7417  0E5F                     l2684:
  7418  0E5F  0833               	movf	___flmul@b+1,w
  7419  0E60  00BA               	movwf	??___flmul
  7420  0E61  083A               	movf	??___flmul,w
  7421  0E62  00F0               	movwf	__Umul8_16@multiplicand
  7422  0E63  0838               	movf	___flmul@a+2,w
  7423  0E64  160A  158A  21B4  120A  158A  	fcall	__Umul8_16
  7424  0E69  0871               	movf	?__Umul8_16+1,w
  7425  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  7426  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  7427  0E6C  00CB               	movwf	___flmul@temp+1
  7428  0E6D  0870               	movf	?__Umul8_16,w
  7429  0E6E  00CA               	movwf	___flmul@temp
  7430  0E6F  084A               	movf	___flmul@temp,w
  7431  0E70  00BA               	movwf	??___flmul
  7432  0E71  084B               	movf	___flmul@temp+1,w
  7433  0E72  00BB               	movwf	??___flmul+1
  7434  0E73  01BC               	clrf	??___flmul+2
  7435  0E74  01BD               	clrf	??___flmul+3
  7436  0E75  083A               	movf	??___flmul,w
  7437  0E76  07C6               	addwf	___flmul@prod,f
  7438  0E77  083B               	movf	??___flmul+1,w
  7439  0E78  1103               	clrz
  7440  0E79  1803               	skipnc
  7441  0E7A  3E01               	addlw	1
  7442  0E7B  1903               	skipnz
  7443  0E7C  2E7E               	goto	u3931
  7444  0E7D  07C7               	addwf	___flmul@prod+1,f
  7445  0E7E                     u3931:
  7446  0E7E  083C               	movf	??___flmul+2,w
  7447  0E7F  1103               	clrz
  7448  0E80  1803               	skipnc
  7449  0E81  3E01               	addlw	1
  7450  0E82  1903               	skipnz
  7451  0E83  2E85               	goto	u3932
  7452  0E84  07C8               	addwf	___flmul@prod+2,f
  7453  0E85                     u3932:
  7454  0E85  083D               	movf	??___flmul+3,w
  7455  0E86  1103               	clrz
  7456  0E87  1803               	skipnc
  7457  0E88  3E01               	addlw	1
  7458  0E89  1903               	skipnz
  7459  0E8A  2E8C               	goto	u3933
  7460  0E8B  07C9               	addwf	___flmul@prod+3,f
  7461  0E8C                     u3933:
  7462  0E8C                     l2686:
  7463  0E8C  0834               	movf	___flmul@b+2,w
  7464  0E8D  00BA               	movwf	??___flmul
  7465  0E8E  083A               	movf	??___flmul,w
  7466  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  7467  0E90  0837               	movf	___flmul@a+1,w
  7468  0E91  160A  158A  21B4  120A  158A  	fcall	__Umul8_16
  7469  0E96  0871               	movf	?__Umul8_16+1,w
  7470  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  7471  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  7472  0E99  00CB               	movwf	___flmul@temp+1
  7473  0E9A  0870               	movf	?__Umul8_16,w
  7474  0E9B  00CA               	movwf	___flmul@temp
  7475  0E9C                     l2688:
  7476  0E9C  084A               	movf	___flmul@temp,w
  7477  0E9D  00BA               	movwf	??___flmul
  7478  0E9E  084B               	movf	___flmul@temp+1,w
  7479  0E9F  00BB               	movwf	??___flmul+1
  7480  0EA0  01BC               	clrf	??___flmul+2
  7481  0EA1  01BD               	clrf	??___flmul+3
  7482  0EA2  083A               	movf	??___flmul,w
  7483  0EA3  07C6               	addwf	___flmul@prod,f
  7484  0EA4  083B               	movf	??___flmul+1,w
  7485  0EA5  1103               	clrz
  7486  0EA6  1803               	skipnc
  7487  0EA7  3E01               	addlw	1
  7488  0EA8  1903               	skipnz
  7489  0EA9  2EAB               	goto	u3941
  7490  0EAA  07C7               	addwf	___flmul@prod+1,f
  7491  0EAB                     u3941:
  7492  0EAB  083C               	movf	??___flmul+2,w
  7493  0EAC  1103               	clrz
  7494  0EAD  1803               	skipnc
  7495  0EAE  3E01               	addlw	1
  7496  0EAF  1903               	skipnz
  7497  0EB0  2EB2               	goto	u3942
  7498  0EB1  07C8               	addwf	___flmul@prod+2,f
  7499  0EB2                     u3942:
  7500  0EB2  083D               	movf	??___flmul+3,w
  7501  0EB3  1103               	clrz
  7502  0EB4  1803               	skipnc
  7503  0EB5  3E01               	addlw	1
  7504  0EB6  1903               	skipnz
  7505  0EB7  2EB9               	goto	u3943
  7506  0EB8  07C9               	addwf	___flmul@prod+3,f
  7507  0EB9                     u3943:
  7508  0EB9  0834               	movf	___flmul@b+2,w
  7509  0EBA  00BA               	movwf	??___flmul
  7510  0EBB  083A               	movf	??___flmul,w
  7511  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  7512  0EBD  0838               	movf	___flmul@a+2,w
  7513  0EBE  160A  158A  21B4  120A  158A  	fcall	__Umul8_16
  7514  0EC3  0871               	movf	?__Umul8_16+1,w
  7515  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  7516  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  7517  0EC6  00CB               	movwf	___flmul@temp+1
  7518  0EC7  0870               	movf	?__Umul8_16,w
  7519  0EC8  00CA               	movwf	___flmul@temp
  7520  0EC9                     l2690:
  7521  0EC9  084A               	movf	___flmul@temp,w
  7522  0ECA  00BA               	movwf	??___flmul
  7523  0ECB  084B               	movf	___flmul@temp+1,w
  7524  0ECC  00BB               	movwf	??___flmul+1
  7525  0ECD  01BC               	clrf	??___flmul+2
  7526  0ECE  01BD               	clrf	??___flmul+3
  7527  0ECF  3008               	movlw	8
  7528  0ED0                     u3955:
  7529  0ED0  1003               	clrc
  7530  0ED1  0DBA               	rlf	??___flmul,f
  7531  0ED2  0DBB               	rlf	??___flmul+1,f
  7532  0ED3  0DBC               	rlf	??___flmul+2,f
  7533  0ED4  0DBD               	rlf	??___flmul+3,f
  7534  0ED5                     u3950:
  7535  0ED5  3EFF               	addlw	-1
  7536  0ED6  1D03               	skipz
  7537  0ED7  2ED0               	goto	u3955
  7538  0ED8  083A               	movf	??___flmul,w
  7539  0ED9  07C6               	addwf	___flmul@prod,f
  7540  0EDA  083B               	movf	??___flmul+1,w
  7541  0EDB  1103               	clrz
  7542  0EDC  1803               	skipnc
  7543  0EDD  3E01               	addlw	1
  7544  0EDE  1903               	skipnz
  7545  0EDF  2EE1               	goto	u3961
  7546  0EE0  07C7               	addwf	___flmul@prod+1,f
  7547  0EE1                     u3961:
  7548  0EE1  083C               	movf	??___flmul+2,w
  7549  0EE2  1103               	clrz
  7550  0EE3  1803               	skipnc
  7551  0EE4  3E01               	addlw	1
  7552  0EE5  1903               	skipnz
  7553  0EE6  2EE8               	goto	u3962
  7554  0EE7  07C8               	addwf	___flmul@prod+2,f
  7555  0EE8                     u3962:
  7556  0EE8  083D               	movf	??___flmul+3,w
  7557  0EE9  1103               	clrz
  7558  0EEA  1803               	skipnc
  7559  0EEB  3E01               	addlw	1
  7560  0EEC  1903               	skipnz
  7561  0EED  2EEF               	goto	u3963
  7562  0EEE  07C9               	addwf	___flmul@prod+3,f
  7563  0EEF                     u3963:
  7564  0EEF                     l2692:
  7565  0EEF  0840               	movf	___flmul@grs,w
  7566  0EF0  00BA               	movwf	??___flmul
  7567  0EF1  0841               	movf	___flmul@grs+1,w
  7568  0EF2  00BB               	movwf	??___flmul+1
  7569  0EF3  0842               	movf	___flmul@grs+2,w
  7570  0EF4  00BC               	movwf	??___flmul+2
  7571  0EF5  0843               	movf	___flmul@grs+3,w
  7572  0EF6  00BD               	movwf	??___flmul+3
  7573  0EF7  3018               	movlw	24
  7574  0EF8                     u3975:
  7575  0EF8  1003               	clrc
  7576  0EF9  0CBD               	rrf	??___flmul+3,f
  7577  0EFA  0CBC               	rrf	??___flmul+2,f
  7578  0EFB  0CBB               	rrf	??___flmul+1,f
  7579  0EFC  0CBA               	rrf	??___flmul,f
  7580  0EFD                     u3970:
  7581  0EFD  3EFF               	addlw	-1
  7582  0EFE  1D03               	skipz
  7583  0EFF  2EF8               	goto	u3975
  7584  0F00  083A               	movf	??___flmul,w
  7585  0F01  07C6               	addwf	___flmul@prod,f
  7586  0F02  083B               	movf	??___flmul+1,w
  7587  0F03  1103               	clrz
  7588  0F04  1803               	skipnc
  7589  0F05  3E01               	addlw	1
  7590  0F06  1903               	skipnz
  7591  0F07  2F09               	goto	u3981
  7592  0F08  07C7               	addwf	___flmul@prod+1,f
  7593  0F09                     u3981:
  7594  0F09  083C               	movf	??___flmul+2,w
  7595  0F0A  1103               	clrz
  7596  0F0B  1803               	skipnc
  7597  0F0C  3E01               	addlw	1
  7598  0F0D  1903               	skipnz
  7599  0F0E  2F10               	goto	u3982
  7600  0F0F  07C8               	addwf	___flmul@prod+2,f
  7601  0F10                     u3982:
  7602  0F10  083D               	movf	??___flmul+3,w
  7603  0F11  1103               	clrz
  7604  0F12  1803               	skipnc
  7605  0F13  3E01               	addlw	1
  7606  0F14  1903               	skipnz
  7607  0F15  2F17               	goto	u3983
  7608  0F16  07C9               	addwf	___flmul@prod+3,f
  7609  0F17                     u3983:
  7610  0F17                     l2694:
  7611  0F17  3008               	movlw	8
  7612  0F18  00BA               	movwf	??___flmul
  7613  0F19                     u3995:
  7614  0F19  1003               	clrc
  7615  0F1A  0DC0               	rlf	___flmul@grs,f
  7616  0F1B  0DC1               	rlf	___flmul@grs+1,f
  7617  0F1C  0DC2               	rlf	___flmul@grs+2,f
  7618  0F1D  0DC3               	rlf	___flmul@grs+3,f
  7619  0F1E  0BBA               	decfsz	??___flmul,f
  7620  0F1F  2F19               	goto	u3995
  7621  0F20                     l2696:
  7622  0F20  0845               	movf	___flmul@bexp,w
  7623  0F21  0744               	addwf	___flmul@aexp,w
  7624  0F22  00BA               	movwf	??___flmul
  7625  0F23  01BB               	clrf	??___flmul+1
  7626  0F24  0DBB               	rlf	??___flmul+1,f
  7627  0F25  083A               	movf	??___flmul,w
  7628  0F26  3E82               	addlw	130
  7629  0F27  00CA               	movwf	___flmul@temp
  7630  0F28  083B               	movf	??___flmul+1,w
  7631  0F29  1803               	skipnc
  7632  0F2A  3E01               	addlw	1
  7633  0F2B  3EFF               	addlw	255
  7634  0F2C  00CB               	movwf	___flmul@temp+1
  7635  0F2D  2F4B               	goto	l2708
  7636  0F2E                     l2698:
  7637  0F2E  3001               	movlw	1
  7638  0F2F  00BA               	movwf	??___flmul
  7639  0F30                     u4005:
  7640  0F30  1003               	clrc
  7641  0F31  0DC6               	rlf	___flmul@prod,f
  7642  0F32  0DC7               	rlf	___flmul@prod+1,f
  7643  0F33  0DC8               	rlf	___flmul@prod+2,f
  7644  0F34  0DC9               	rlf	___flmul@prod+3,f
  7645  0F35  0BBA               	decfsz	??___flmul,f
  7646  0F36  2F30               	goto	u4005
  7647  0F37                     l2700:
  7648  0F37  1FC3               	btfss	___flmul@grs+3,7
  7649  0F38  2F3A               	goto	u4011
  7650  0F39  2F3B               	goto	u4010
  7651  0F3A                     u4011:
  7652  0F3A  2F3C               	goto	l2704
  7653  0F3B                     u4010:
  7654  0F3B                     l2702:
  7655  0F3B  1446               	bsf	___flmul@prod,0
  7656  0F3C                     l2704:
  7657  0F3C  3001               	movlw	1
  7658  0F3D  00BA               	movwf	??___flmul
  7659  0F3E                     u4025:
  7660  0F3E  1003               	clrc
  7661  0F3F  0DC0               	rlf	___flmul@grs,f
  7662  0F40  0DC1               	rlf	___flmul@grs+1,f
  7663  0F41  0DC2               	rlf	___flmul@grs+2,f
  7664  0F42  0DC3               	rlf	___flmul@grs+3,f
  7665  0F43  0BBA               	decfsz	??___flmul,f
  7666  0F44  2F3E               	goto	u4025
  7667  0F45                     l2706:
  7668  0F45  30FF               	movlw	255
  7669  0F46  07CA               	addwf	___flmul@temp,f
  7670  0F47  1803               	skipnc
  7671  0F48  0ACB               	incf	___flmul@temp+1,f
  7672  0F49  30FF               	movlw	255
  7673  0F4A  07CB               	addwf	___flmul@temp+1,f
  7674  0F4B                     l2708:
  7675  0F4B  1FC8               	btfss	___flmul@prod+2,7
  7676  0F4C  2F4E               	goto	u4031
  7677  0F4D  2F4F               	goto	u4030
  7678  0F4E                     u4031:
  7679  0F4E  2F2E               	goto	l2698
  7680  0F4F                     u4030:
  7681  0F4F                     l2710:
  7682  0F4F  01C4               	clrf	___flmul@aexp
  7683  0F50                     l2712:
  7684  0F50  1FC3               	btfss	___flmul@grs+3,7
  7685  0F51  2F53               	goto	u4041
  7686  0F52  2F54               	goto	u4040
  7687  0F53                     u4041:
  7688  0F53  2F70               	goto	l2720
  7689  0F54                     u4040:
  7690  0F54                     l2714:
  7691  0F54  30FF               	movlw	255
  7692  0F55  0540               	andwf	___flmul@grs,w
  7693  0F56  00BA               	movwf	??___flmul
  7694  0F57  30FF               	movlw	255
  7695  0F58  0541               	andwf	___flmul@grs+1,w
  7696  0F59  00BB               	movwf	??___flmul+1
  7697  0F5A  30FF               	movlw	255
  7698  0F5B  0542               	andwf	___flmul@grs+2,w
  7699  0F5C  00BC               	movwf	??___flmul+2
  7700  0F5D  307F               	movlw	127
  7701  0F5E  0543               	andwf	___flmul@grs+3,w
  7702  0F5F  00BD               	movwf	??___flmul+3
  7703  0F60  083D               	movf	??___flmul+3,w
  7704  0F61  043C               	iorwf	??___flmul+2,w
  7705  0F62  043B               	iorwf	??___flmul+1,w
  7706  0F63  043A               	iorwf	??___flmul,w
  7707  0F64  1903               	skipnz
  7708  0F65  2F67               	goto	u4051
  7709  0F66  2F68               	goto	u4050
  7710  0F67                     u4051:
  7711  0F67  2F6B               	goto	l746
  7712  0F68                     u4050:
  7713  0F68                     l2716:
  7714  0F68  01C4               	clrf	___flmul@aexp
  7715  0F69  0AC4               	incf	___flmul@aexp,f
  7716  0F6A  2F70               	goto	l2720
  7717  0F6B                     l746:
  7718  0F6B  1C46               	btfss	___flmul@prod,0
  7719  0F6C  2F6E               	goto	u4061
  7720  0F6D  2F6F               	goto	u4060
  7721  0F6E                     u4061:
  7722  0F6E  2F70               	goto	l2720
  7723  0F6F                     u4060:
  7724  0F6F  2F68               	goto	l2716
  7725  0F70                     l2720:
  7726  0F70  0844               	movf	___flmul@aexp,w
  7727  0F71  1903               	btfsc	3,2
  7728  0F72  2F74               	goto	u4071
  7729  0F73  2F75               	goto	u4070
  7730  0F74                     u4071:
  7731  0F74  2FA6               	goto	l2730
  7732  0F75                     u4070:
  7733  0F75                     l2722:
  7734  0F75  3001               	movlw	1
  7735  0F76  07C6               	addwf	___flmul@prod,f
  7736  0F77  3000               	movlw	0
  7737  0F78  1803               	skipnc
  7738  0F79  3001               	movlw	1
  7739  0F7A  07C7               	addwf	___flmul@prod+1,f
  7740  0F7B  3000               	movlw	0
  7741  0F7C  1803               	skipnc
  7742  0F7D  3001               	movlw	1
  7743  0F7E  07C8               	addwf	___flmul@prod+2,f
  7744  0F7F  3000               	movlw	0
  7745  0F80  1803               	skipnc
  7746  0F81  3001               	movlw	1
  7747  0F82  07C9               	addwf	___flmul@prod+3,f
  7748  0F83                     l2724:
  7749  0F83  1C49               	btfss	___flmul@prod+3,0
  7750  0F84  2F86               	goto	u4081
  7751  0F85  2F87               	goto	u4080
  7752  0F86                     u4081:
  7753  0F86  2FA6               	goto	l2730
  7754  0F87                     u4080:
  7755  0F87                     l2726:
  7756  0F87  0846               	movf	___flmul@prod,w
  7757  0F88  00BA               	movwf	??___flmul
  7758  0F89  0847               	movf	___flmul@prod+1,w
  7759  0F8A  00BB               	movwf	??___flmul+1
  7760  0F8B  0848               	movf	___flmul@prod+2,w
  7761  0F8C  00BC               	movwf	??___flmul+2
  7762  0F8D  0849               	movf	___flmul@prod+3,w
  7763  0F8E  00BD               	movwf	??___flmul+3
  7764  0F8F  3001               	movlw	1
  7765  0F90  00BE               	movwf	??___flmul+4
  7766  0F91                     u4095:
  7767  0F91  0D3D               	rlf	??___flmul+3,w
  7768  0F92  0CBD               	rrf	??___flmul+3,f
  7769  0F93  0CBC               	rrf	??___flmul+2,f
  7770  0F94  0CBB               	rrf	??___flmul+1,f
  7771  0F95  0CBA               	rrf	??___flmul,f
  7772  0F96                     u4090:
  7773  0F96  0BBE               	decfsz	??___flmul+4,f
  7774  0F97  2F91               	goto	u4095
  7775  0F98  083D               	movf	??___flmul+3,w
  7776  0F99  00C9               	movwf	___flmul@prod+3
  7777  0F9A  083C               	movf	??___flmul+2,w
  7778  0F9B  00C8               	movwf	___flmul@prod+2
  7779  0F9C  083B               	movf	??___flmul+1,w
  7780  0F9D  00C7               	movwf	___flmul@prod+1
  7781  0F9E  083A               	movf	??___flmul,w
  7782  0F9F  00C6               	movwf	___flmul@prod
  7783  0FA0                     l2728:
  7784  0FA0  3001               	movlw	1
  7785  0FA1  07CA               	addwf	___flmul@temp,f
  7786  0FA2  1803               	skipnc
  7787  0FA3  0ACB               	incf	___flmul@temp+1,f
  7788  0FA4  3000               	movlw	0
  7789  0FA5  07CB               	addwf	___flmul@temp+1,f
  7790  0FA6                     l2730:
  7791  0FA6  084B               	movf	___flmul@temp+1,w
  7792  0FA7  3A80               	xorlw	128
  7793  0FA8  00FF               	movwf	btemp+1
  7794  0FA9  3080               	movlw	128
  7795  0FAA  027F               	subwf	btemp+1,w
  7796  0FAB  1D03               	skipz
  7797  0FAC  2FAF               	goto	u4105
  7798  0FAD  30FF               	movlw	255
  7799  0FAE  024A               	subwf	___flmul@temp,w
  7800  0FAF                     u4105:
  7801  0FAF  1C03               	skipc
  7802  0FB0  2FB2               	goto	u4101
  7803  0FB1  2FB3               	goto	u4100
  7804  0FB2                     u4101:
  7805  0FB2  2FBE               	goto	l2734
  7806  0FB3                     u4100:
  7807  0FB3                     l2732:
  7808  0FB3  307F               	movlw	127
  7809  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  7810  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  7811  0FB6  00C9               	movwf	___flmul@prod+3
  7812  0FB7  3080               	movlw	128
  7813  0FB8  00C8               	movwf	___flmul@prod+2
  7814  0FB9  3000               	movlw	0
  7815  0FBA  00C7               	movwf	___flmul@prod+1
  7816  0FBB  3000               	movlw	0
  7817  0FBC  00C6               	movwf	___flmul@prod
  7818  0FBD  2FF3               	goto	l752
  7819  0FBE                     l2734:
  7820  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  7821  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  7822  0FC0  084B               	movf	___flmul@temp+1,w
  7823  0FC1  3A80               	xorlw	128
  7824  0FC2  00FF               	movwf	btemp+1
  7825  0FC3  3080               	movlw	128
  7826  0FC4  027F               	subwf	btemp+1,w
  7827  0FC5  1D03               	skipz
  7828  0FC6  2FC9               	goto	u4115
  7829  0FC7  3001               	movlw	1
  7830  0FC8  024A               	subwf	___flmul@temp,w
  7831  0FC9                     u4115:
  7832  0FC9  1803               	skipnc
  7833  0FCA  2FCC               	goto	u4111
  7834  0FCB  2FCD               	goto	u4110
  7835  0FCC                     u4111:
  7836  0FCC  2FD9               	goto	l2740
  7837  0FCD                     u4110:
  7838  0FCD                     l2736:
  7839  0FCD  3000               	movlw	0
  7840  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  7841  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  7842  0FD0  00C9               	movwf	___flmul@prod+3
  7843  0FD1  3000               	movlw	0
  7844  0FD2  00C8               	movwf	___flmul@prod+2
  7845  0FD3  3000               	movlw	0
  7846  0FD4  00C7               	movwf	___flmul@prod+1
  7847  0FD5  3000               	movlw	0
  7848  0FD6  00C6               	movwf	___flmul@prod
  7849  0FD7                     l2738:
  7850  0FD7  01BF               	clrf	___flmul@sign
  7851  0FD8  2FF3               	goto	l752
  7852  0FD9                     l2740:
  7853  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  7854  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  7855  0FDB  084A               	movf	___flmul@temp,w
  7856  0FDC  00BA               	movwf	??___flmul
  7857  0FDD  083A               	movf	??___flmul,w
  7858  0FDE  00C5               	movwf	___flmul@bexp
  7859  0FDF  30FF               	movlw	255
  7860  0FE0  05C6               	andwf	___flmul@prod,f
  7861  0FE1  30FF               	movlw	255
  7862  0FE2  05C7               	andwf	___flmul@prod+1,f
  7863  0FE3  307F               	movlw	127
  7864  0FE4  05C8               	andwf	___flmul@prod+2,f
  7865  0FE5  3000               	movlw	0
  7866  0FE6  05C9               	andwf	___flmul@prod+3,f
  7867  0FE7                     l2742:
  7868  0FE7  1C45               	btfss	___flmul@bexp,0
  7869  0FE8  2FEA               	goto	u4121
  7870  0FE9  2FEB               	goto	u4120
  7871  0FEA                     u4121:
  7872  0FEA  2FEC               	goto	l2746
  7873  0FEB                     u4120:
  7874  0FEB                     l2744:
  7875  0FEB  17C8               	bsf	___flmul@prod+2,7
  7876  0FEC                     l2746:
  7877  0FEC  0845               	movf	___flmul@bexp,w
  7878  0FED  00BA               	movwf	??___flmul
  7879  0FEE  1003               	clrc
  7880  0FEF  0C3A               	rrf	??___flmul,w
  7881  0FF0  00BB               	movwf	??___flmul+1
  7882  0FF1  083B               	movf	??___flmul+1,w
  7883  0FF2  00C9               	movwf	___flmul@prod+3
  7884  0FF3                     l752:
  7885  0FF3  083F               	movf	___flmul@sign,w
  7886  0FF4  00BA               	movwf	??___flmul
  7887  0FF5  083A               	movf	??___flmul,w
  7888  0FF6  04C9               	iorwf	___flmul@prod+3,f
  7889  0FF7                     l2748:
  7890  0FF7  0849               	movf	___flmul@prod+3,w
  7891  0FF8  00B5               	movwf	?___flmul+3
  7892  0FF9  0848               	movf	___flmul@prod+2,w
  7893  0FFA  00B4               	movwf	?___flmul+2
  7894  0FFB  0847               	movf	___flmul@prod+1,w
  7895  0FFC  00B3               	movwf	?___flmul+1
  7896  0FFD  0846               	movf	___flmul@prod,w
  7897  0FFE  00B2               	movwf	?___flmul
  7898  0FFF                     l740:
  7899  0FFF  0008               	return
  7900  1000                     __end_of___flmul:
  7901                           
  7902                           	psect	text21
  7903  19B4                     __ptext21:	
  7904 ;; *************** function __Umul8_16 *****************
  7905 ;; Defined at:
  7906 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  7907 ;; Parameters:    Size  Location     Type
  7908 ;;  multiplier      1    wreg     unsigned char 
  7909 ;;  multiplicand    1    0[COMMON] unsigned char 
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;  multiplier      1    8[COMMON] unsigned char 
  7912 ;;  word_mpld       2    6[COMMON] unsigned int 
  7913 ;;  product         2    4[COMMON] unsigned int 
  7914 ;; Return value:  Size  Location     Type
  7915 ;;                  2    0[COMMON] unsigned int 
  7916 ;; Registers used:
  7917 ;;		wreg, status,2, status,0
  7918 ;; Tracked objects:
  7919 ;;		On entry : 0/0
  7920 ;;		On exit  : 0/0
  7921 ;;		Unchanged: 0/0
  7922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7923 ;;      Params:         2       0       0       0       0
  7924 ;;      Locals:         5       0       0       0       0
  7925 ;;      Temps:          2       0       0       0       0
  7926 ;;      Totals:         9       0       0       0       0
  7927 ;;Total ram usage:        9 bytes
  7928 ;; Hardware stack levels used:    1
  7929 ;; This function calls:
  7930 ;;		Nothing
  7931 ;; This function is called by:
  7932 ;;		___flmul
  7933 ;; This function uses a non-reentrant model
  7934 ;;
  7935                           
  7936                           
  7937                           ;psect for function __Umul8_16
  7938  19B4                     __Umul8_16:
  7939                           
  7940                           ;incstack = 0
  7941                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7942                           ;__Umul8_16@multiplier stored from wreg
  7943  19B4  00F8               	movwf	__Umul8_16@multiplier
  7944  19B5                     l2274:
  7945  19B5  01F4               	clrf	__Umul8_16@product
  7946  19B6  01F5               	clrf	__Umul8_16@product+1
  7947  19B7                     l2276:
  7948  19B7  0870               	movf	__Umul8_16@multiplicand,w
  7949  19B8  00F2               	movwf	??__Umul8_16
  7950  19B9  01F3               	clrf	??__Umul8_16+1
  7951  19BA  0872               	movf	??__Umul8_16,w
  7952  19BB  00F6               	movwf	__Umul8_16@word_mpld
  7953  19BC  0873               	movf	??__Umul8_16+1,w
  7954  19BD  00F7               	movwf	__Umul8_16@word_mpld+1
  7955  19BE                     l2278:
  7956  19BE  1C78               	btfss	__Umul8_16@multiplier,0
  7957  19BF  29C1               	goto	u2951
  7958  19C0  29C2               	goto	u2950
  7959  19C1                     u2951:
  7960  19C1  29C8               	goto	l759
  7961  19C2                     u2950:
  7962  19C2                     l2280:
  7963  19C2  0876               	movf	__Umul8_16@word_mpld,w
  7964  19C3  07F4               	addwf	__Umul8_16@product,f
  7965  19C4  1803               	skipnc
  7966  19C5  0AF5               	incf	__Umul8_16@product+1,f
  7967  19C6  0877               	movf	__Umul8_16@word_mpld+1,w
  7968  19C7  07F5               	addwf	__Umul8_16@product+1,f
  7969  19C8                     l759:
  7970  19C8  3001               	movlw	1
  7971  19C9                     u2965:
  7972  19C9  1003               	clrc
  7973  19CA  0DF6               	rlf	__Umul8_16@word_mpld,f
  7974  19CB  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7975  19CC  3EFF               	addlw	-1
  7976  19CD  1D03               	skipz
  7977  19CE  29C9               	goto	u2965
  7978  19CF  1003               	clrc
  7979  19D0  0CF8               	rrf	__Umul8_16@multiplier,f
  7980  19D1                     l2282:
  7981  19D1  0878               	movf	__Umul8_16@multiplier,w
  7982  19D2  1D03               	btfss	3,2
  7983  19D3  29D5               	goto	u2971
  7984  19D4  29D6               	goto	u2970
  7985  19D5                     u2971:
  7986  19D5  29BE               	goto	l2278
  7987  19D6                     u2970:
  7988  19D6                     l2284:
  7989  19D6  0875               	movf	__Umul8_16@product+1,w
  7990  19D7  00F1               	movwf	?__Umul8_16+1
  7991  19D8  0874               	movf	__Umul8_16@product,w
  7992  19D9  00F0               	movwf	?__Umul8_16
  7993  19DA                     l761:
  7994  19DA  0008               	return
  7995  19DB                     __end_of__Umul8_16:
  7996                           
  7997                           	psect	text22
  7998  1E85                     __ptext22:	
  7999 ;; *************** function __tdiv_to_l_ *****************
  8000 ;; Defined at:
  8001 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  8002 ;; Parameters:    Size  Location     Type
  8003 ;;  f1              4    0[COMMON] float 
  8004 ;;  f2              4    4[COMMON] float 
  8005 ;; Auto vars:     Size  Location     Type
  8006 ;;  quot            4    0[BANK0 ] unsigned long 
  8007 ;;  exp1            1    5[BANK0 ] unsigned char 
  8008 ;;  cntr            1    4[BANK0 ] unsigned char 
  8009 ;; Return value:  Size  Location     Type
  8010 ;;                  4    0[COMMON] unsigned long 
  8011 ;; Registers used:
  8012 ;;		wreg, status,2, status,0
  8013 ;; Tracked objects:
  8014 ;;		On entry : 0/0
  8015 ;;		On exit  : 0/0
  8016 ;;		Unchanged: 0/0
  8017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8018 ;;      Params:         8       0       0       0       0
  8019 ;;      Locals:         0       6       0       0       0
  8020 ;;      Temps:          4       0       0       0       0
  8021 ;;      Totals:        12       6       0       0       0
  8022 ;;Total ram usage:       18 bytes
  8023 ;; Hardware stack levels used:    1
  8024 ;; This function calls:
  8025 ;;		Nothing
  8026 ;; This function is called by:
  8027 ;;		_sprintf
  8028 ;; This function uses a non-reentrant model
  8029 ;;
  8030                           
  8031                           
  8032                           ;psect for function __tdiv_to_l_
  8033  1E85                     __tdiv_to_l_:
  8034  1E85                     l2838:	
  8035                           ;incstack = 0
  8036                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  8037                           
  8038  1E85  0870               	movf	__tdiv_to_l_@f1,w
  8039  1E86  00F8               	movwf	??__tdiv_to_l_
  8040  1E87  0871               	movf	__tdiv_to_l_@f1+1,w
  8041  1E88  00F9               	movwf	??__tdiv_to_l_+1
  8042  1E89  0872               	movf	__tdiv_to_l_@f1+2,w
  8043  1E8A  00FA               	movwf	??__tdiv_to_l_+2
  8044  1E8B  1003               	clrc
  8045  1E8C  0D79               	rlf	??__tdiv_to_l_+1,w
  8046  1E8D  0D7A               	rlf	??__tdiv_to_l_+2,w
  8047  1E8E  00FB               	movwf	??__tdiv_to_l_+3
  8048  1E8F  087B               	movf	??__tdiv_to_l_+3,w
  8049  1E90  1283               	bcf	3,5	;RP0=0, select bank0
  8050  1E91  1303               	bcf	3,6	;RP1=0, select bank0
  8051  1E92  00A5               	movwf	__tdiv_to_l_@exp1
  8052  1E93  0825               	movf	__tdiv_to_l_@exp1,w
  8053  1E94  1D03               	btfss	3,2
  8054  1E95  2E97               	goto	u4401
  8055  1E96  2E98               	goto	u4400
  8056  1E97                     u4401:
  8057  1E97  2EA1               	goto	l2844
  8058  1E98                     u4400:
  8059  1E98                     l2840:
  8060  1E98  3000               	movlw	0
  8061  1E99  00F3               	movwf	?__tdiv_to_l_+3
  8062  1E9A  3000               	movlw	0
  8063  1E9B  00F2               	movwf	?__tdiv_to_l_+2
  8064  1E9C  3000               	movlw	0
  8065  1E9D  00F1               	movwf	?__tdiv_to_l_+1
  8066  1E9E  3000               	movlw	0
  8067  1E9F  00F0               	movwf	?__tdiv_to_l_
  8068  1EA0  2F41               	goto	l534
  8069  1EA1                     l2844:
  8070  1EA1  0874               	movf	__tdiv_to_l_@f2,w
  8071  1EA2  00F8               	movwf	??__tdiv_to_l_
  8072  1EA3  0875               	movf	__tdiv_to_l_@f2+1,w
  8073  1EA4  00F9               	movwf	??__tdiv_to_l_+1
  8074  1EA5  0876               	movf	__tdiv_to_l_@f2+2,w
  8075  1EA6  00FA               	movwf	??__tdiv_to_l_+2
  8076  1EA7  1003               	clrc
  8077  1EA8  0D79               	rlf	??__tdiv_to_l_+1,w
  8078  1EA9  0D7A               	rlf	??__tdiv_to_l_+2,w
  8079  1EAA  00FB               	movwf	??__tdiv_to_l_+3
  8080  1EAB  087B               	movf	??__tdiv_to_l_+3,w
  8081  1EAC  00A4               	movwf	__tdiv_to_l_@cntr
  8082  1EAD  0824               	movf	__tdiv_to_l_@cntr,w
  8083  1EAE  1D03               	btfss	3,2
  8084  1EAF  2EB1               	goto	u4411
  8085  1EB0  2EB2               	goto	u4410
  8086  1EB1                     u4411:
  8087  1EB1  2EB3               	goto	l535
  8088  1EB2                     u4410:
  8089  1EB2  2E98               	goto	l2840
  8090  1EB3                     l535:
  8091  1EB3  17F1               	bsf	__tdiv_to_l_@f1+1,7
  8092  1EB4                     l2850:
  8093  1EB4  30FF               	movlw	255
  8094  1EB5  05F0               	andwf	__tdiv_to_l_@f1,f
  8095  1EB6  30FF               	movlw	255
  8096  1EB7  05F1               	andwf	__tdiv_to_l_@f1+1,f
  8097  1EB8  3000               	movlw	0
  8098  1EB9  05F2               	andwf	__tdiv_to_l_@f1+2,f
  8099  1EBA                     l2852:
  8100  1EBA  17F5               	bsf	__tdiv_to_l_@f2+1,7
  8101  1EBB  30FF               	movlw	255
  8102  1EBC  05F4               	andwf	__tdiv_to_l_@f2,f
  8103  1EBD  30FF               	movlw	255
  8104  1EBE  05F5               	andwf	__tdiv_to_l_@f2+1,f
  8105  1EBF  3000               	movlw	0
  8106  1EC0  05F6               	andwf	__tdiv_to_l_@f2+2,f
  8107  1EC1  3000               	movlw	0
  8108  1EC2  00A3               	movwf	__tdiv_to_l_@quot+3
  8109  1EC3  3000               	movlw	0
  8110  1EC4  00A2               	movwf	__tdiv_to_l_@quot+2
  8111  1EC5  3000               	movlw	0
  8112  1EC6  00A1               	movwf	__tdiv_to_l_@quot+1
  8113  1EC7  3000               	movlw	0
  8114  1EC8  00A0               	movwf	__tdiv_to_l_@quot
  8115  1EC9                     l2854:
  8116  1EC9  307F               	movlw	127
  8117  1ECA  02A5               	subwf	__tdiv_to_l_@exp1,f
  8118  1ECB                     l2856:
  8119  1ECB  3098               	movlw	152
  8120  1ECC  0724               	addwf	__tdiv_to_l_@cntr,w
  8121  1ECD  00F8               	movwf	??__tdiv_to_l_
  8122  1ECE  0878               	movf	??__tdiv_to_l_,w
  8123  1ECF  02A5               	subwf	__tdiv_to_l_@exp1,f
  8124  1ED0  3018               	movlw	24
  8125  1ED1  00F8               	movwf	??__tdiv_to_l_
  8126  1ED2  0878               	movf	??__tdiv_to_l_,w
  8127  1ED3  00A4               	movwf	__tdiv_to_l_@cntr
  8128  1ED4                     l2858:
  8129  1ED4  3001               	movlw	1
  8130  1ED5  00F8               	movwf	??__tdiv_to_l_
  8131  1ED6                     u4425:
  8132  1ED6  1003               	clrc
  8133  1ED7  0DA0               	rlf	__tdiv_to_l_@quot,f
  8134  1ED8  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  8135  1ED9  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  8136  1EDA  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  8137  1EDB  0BF8               	decfsz	??__tdiv_to_l_,f
  8138  1EDC  2ED6               	goto	u4425
  8139  1EDD                     l2860:
  8140  1EDD  0876               	movf	__tdiv_to_l_@f2+2,w
  8141  1EDE  0272               	subwf	__tdiv_to_l_@f1+2,w
  8142  1EDF  1D03               	skipz
  8143  1EE0  2EE7               	goto	u4435
  8144  1EE1  0875               	movf	__tdiv_to_l_@f2+1,w
  8145  1EE2  0271               	subwf	__tdiv_to_l_@f1+1,w
  8146  1EE3  1D03               	skipz
  8147  1EE4  2EE7               	goto	u4435
  8148  1EE5  0874               	movf	__tdiv_to_l_@f2,w
  8149  1EE6  0270               	subwf	__tdiv_to_l_@f1,w
  8150  1EE7                     u4435:
  8151  1EE7  1C03               	skipc
  8152  1EE8  2EEA               	goto	u4431
  8153  1EE9  2EEB               	goto	u4430
  8154  1EEA                     u4431:
  8155  1EEA  2EF6               	goto	l2866
  8156  1EEB                     u4430:
  8157  1EEB                     l2862:
  8158  1EEB  0874               	movf	__tdiv_to_l_@f2,w
  8159  1EEC  02F0               	subwf	__tdiv_to_l_@f1,f
  8160  1EED  0875               	movf	__tdiv_to_l_@f2+1,w
  8161  1EEE  1C03               	skipc
  8162  1EEF  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  8163  1EF0  02F1               	subwf	__tdiv_to_l_@f1+1,f
  8164  1EF1  0876               	movf	__tdiv_to_l_@f2+2,w
  8165  1EF2  1C03               	skipc
  8166  1EF3  0A76               	incf	__tdiv_to_l_@f2+2,w
  8167  1EF4  02F2               	subwf	__tdiv_to_l_@f1+2,f
  8168  1EF5                     l2864:
  8169  1EF5  1420               	bsf	__tdiv_to_l_@quot,0
  8170  1EF6                     l2866:
  8171  1EF6  3001               	movlw	1
  8172  1EF7                     u4445:
  8173  1EF7  1003               	clrc
  8174  1EF8  0DF0               	rlf	__tdiv_to_l_@f1,f
  8175  1EF9  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  8176  1EFA  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  8177  1EFB  3EFF               	addlw	-1
  8178  1EFC  1D03               	skipz
  8179  1EFD  2EF7               	goto	u4445
  8180  1EFE                     l2868:
  8181  1EFE  3001               	movlw	1
  8182  1EFF  02A4               	subwf	__tdiv_to_l_@cntr,f
  8183  1F00  1D03               	btfss	3,2
  8184  1F01  2F03               	goto	u4451
  8185  1F02  2F04               	goto	u4450
  8186  1F03                     u4451:
  8187  1F03  2ED4               	goto	l2858
  8188  1F04                     u4450:
  8189  1F04                     l538:
  8190  1F04  1FA5               	btfss	__tdiv_to_l_@exp1,7
  8191  1F05  2F07               	goto	u4461
  8192  1F06  2F08               	goto	u4460
  8193  1F07                     u4461:
  8194  1F07  2F22               	goto	l2878
  8195  1F08                     u4460:
  8196  1F08                     l2870:
  8197  1F08  0825               	movf	__tdiv_to_l_@exp1,w
  8198  1F09  3A80               	xorlw	128
  8199  1F0A  3E97               	addlw	151
  8200  1F0B  1803               	skipnc
  8201  1F0C  2F0E               	goto	u4471
  8202  1F0D  2F0F               	goto	u4470
  8203  1F0E                     u4471:
  8204  1F0E  2F10               	goto	l2876
  8205  1F0F                     u4470:
  8206  1F0F  2E98               	goto	l2840
  8207  1F10                     l2876:
  8208  1F10  3001               	movlw	1
  8209  1F11                     u4485:
  8210  1F11  1003               	clrc
  8211  1F12  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  8212  1F13  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  8213  1F14  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  8214  1F15  0CA0               	rrf	__tdiv_to_l_@quot,f
  8215  1F16  3EFF               	addlw	-1
  8216  1F17  1D03               	skipz
  8217  1F18  2F11               	goto	u4485
  8218  1F19  3001               	movlw	1
  8219  1F1A  00F8               	movwf	??__tdiv_to_l_
  8220  1F1B  0878               	movf	??__tdiv_to_l_,w
  8221  1F1C  07A5               	addwf	__tdiv_to_l_@exp1,f
  8222  1F1D  1D03               	btfss	3,2
  8223  1F1E  2F20               	goto	u4491
  8224  1F1F  2F21               	goto	u4490
  8225  1F20                     u4491:
  8226  1F20  2F10               	goto	l2876
  8227  1F21                     u4490:
  8228  1F21  2F39               	goto	l2886
  8229  1F22                     l2878:
  8230  1F22  3018               	movlw	24
  8231  1F23  0225               	subwf	__tdiv_to_l_@exp1,w
  8232  1F24  1C03               	skipc
  8233  1F25  2F27               	goto	u4501
  8234  1F26  2F28               	goto	u4500
  8235  1F27                     u4501:
  8236  1F27  2F34               	goto	l545
  8237  1F28                     u4500:
  8238  1F28  2E98               	goto	l2840
  8239  1F29                     l2884:
  8240  1F29  3001               	movlw	1
  8241  1F2A  00F8               	movwf	??__tdiv_to_l_
  8242  1F2B                     u4515:
  8243  1F2B  1003               	clrc
  8244  1F2C  0DA0               	rlf	__tdiv_to_l_@quot,f
  8245  1F2D  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  8246  1F2E  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  8247  1F2F  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  8248  1F30  0BF8               	decfsz	??__tdiv_to_l_,f
  8249  1F31  2F2B               	goto	u4515
  8250  1F32  3001               	movlw	1
  8251  1F33  02A5               	subwf	__tdiv_to_l_@exp1,f
  8252  1F34                     l545:
  8253  1F34  0825               	movf	__tdiv_to_l_@exp1,w
  8254  1F35  1D03               	btfss	3,2
  8255  1F36  2F38               	goto	u4521
  8256  1F37  2F39               	goto	u4520
  8257  1F38                     u4521:
  8258  1F38  2F29               	goto	l2884
  8259  1F39                     u4520:
  8260  1F39                     l2886:
  8261  1F39  0823               	movf	__tdiv_to_l_@quot+3,w
  8262  1F3A  00F3               	movwf	?__tdiv_to_l_+3
  8263  1F3B  0822               	movf	__tdiv_to_l_@quot+2,w
  8264  1F3C  00F2               	movwf	?__tdiv_to_l_+2
  8265  1F3D  0821               	movf	__tdiv_to_l_@quot+1,w
  8266  1F3E  00F1               	movwf	?__tdiv_to_l_+1
  8267  1F3F  0820               	movf	__tdiv_to_l_@quot,w
  8268  1F40  00F0               	movwf	?__tdiv_to_l_
  8269  1F41                     l534:
  8270  1F41  0008               	return
  8271  1F42                     __end_of__tdiv_to_l_:
  8272                           
  8273                           	psect	text23
  8274  1F42                     __ptext23:	
  8275 ;; *************** function __div_to_l_ *****************
  8276 ;; Defined at:
  8277 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  8278 ;; Parameters:    Size  Location     Type
  8279 ;;  f1              4    0[COMMON] unsigned long 
  8280 ;;  f2              4    4[COMMON] unsigned long 
  8281 ;; Auto vars:     Size  Location     Type
  8282 ;;  quot            4    0[BANK0 ] unsigned long 
  8283 ;;  exp1            1    5[BANK0 ] unsigned char 
  8284 ;;  cntr            1    4[BANK0 ] unsigned char 
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  4    0[COMMON] unsigned long 
  8287 ;; Registers used:
  8288 ;;		wreg, status,2, status,0
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8294 ;;      Params:         8       0       0       0       0
  8295 ;;      Locals:         0       6       0       0       0
  8296 ;;      Temps:          1       0       0       0       0
  8297 ;;      Totals:         9       6       0       0       0
  8298 ;;Total ram usage:       15 bytes
  8299 ;; Hardware stack levels used:    1
  8300 ;; This function calls:
  8301 ;;		Nothing
  8302 ;; This function is called by:
  8303 ;;		_sprintf
  8304 ;; This function uses a non-reentrant model
  8305 ;;
  8306                           
  8307                           
  8308                           ;psect for function __div_to_l_
  8309  1F42                     __div_to_l_:
  8310  1F42                     l2890:	
  8311                           ;incstack = 0
  8312                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  8313                           
  8314  1F42  1003               	clrc
  8315  1F43  0D72               	rlf	__div_to_l_@f1+2,w
  8316  1F44  0D73               	rlf	__div_to_l_@f1+3,w
  8317  1F45  00F8               	movwf	??__div_to_l_
  8318  1F46  0878               	movf	??__div_to_l_,w
  8319  1F47  1283               	bcf	3,5	;RP0=0, select bank0
  8320  1F48  1303               	bcf	3,6	;RP1=0, select bank0
  8321  1F49  00A5               	movwf	__div_to_l_@exp1
  8322  1F4A  0825               	movf	__div_to_l_@exp1,w
  8323  1F4B  1D03               	btfss	3,2
  8324  1F4C  2F4E               	goto	u4531
  8325  1F4D  2F4F               	goto	u4530
  8326  1F4E                     u4531:
  8327  1F4E  2F58               	goto	l2896
  8328  1F4F                     u4530:
  8329  1F4F                     l2892:
  8330  1F4F  3000               	movlw	0
  8331  1F50  00F3               	movwf	?__div_to_l_+3
  8332  1F51  3000               	movlw	0
  8333  1F52  00F2               	movwf	?__div_to_l_+2
  8334  1F53  3000               	movlw	0
  8335  1F54  00F1               	movwf	?__div_to_l_+1
  8336  1F55  3000               	movlw	0
  8337  1F56  00F0               	movwf	?__div_to_l_
  8338  1F57  2FFF               	goto	l487
  8339  1F58                     l2896:
  8340  1F58  1003               	clrc
  8341  1F59  0D76               	rlf	__div_to_l_@f2+2,w
  8342  1F5A  0D77               	rlf	__div_to_l_@f2+3,w
  8343  1F5B  00F8               	movwf	??__div_to_l_
  8344  1F5C  0878               	movf	??__div_to_l_,w
  8345  1F5D  00A4               	movwf	__div_to_l_@cntr
  8346  1F5E  0824               	movf	__div_to_l_@cntr,w
  8347  1F5F  1D03               	btfss	3,2
  8348  1F60  2F62               	goto	u4541
  8349  1F61  2F63               	goto	u4540
  8350  1F62                     u4541:
  8351  1F62  2F64               	goto	l488
  8352  1F63                     u4540:
  8353  1F63  2F4F               	goto	l2892
  8354  1F64                     l488:
  8355  1F64  17F2               	bsf	__div_to_l_@f1+2,7
  8356  1F65                     l2902:
  8357  1F65  30FF               	movlw	255
  8358  1F66  05F0               	andwf	__div_to_l_@f1,f
  8359  1F67  30FF               	movlw	255
  8360  1F68  05F1               	andwf	__div_to_l_@f1+1,f
  8361  1F69  30FF               	movlw	255
  8362  1F6A  05F2               	andwf	__div_to_l_@f1+2,f
  8363  1F6B  3000               	movlw	0
  8364  1F6C  05F3               	andwf	__div_to_l_@f1+3,f
  8365  1F6D                     l2904:
  8366  1F6D  17F6               	bsf	__div_to_l_@f2+2,7
  8367  1F6E  30FF               	movlw	255
  8368  1F6F  05F4               	andwf	__div_to_l_@f2,f
  8369  1F70  30FF               	movlw	255
  8370  1F71  05F5               	andwf	__div_to_l_@f2+1,f
  8371  1F72  30FF               	movlw	255
  8372  1F73  05F6               	andwf	__div_to_l_@f2+2,f
  8373  1F74  3000               	movlw	0
  8374  1F75  05F7               	andwf	__div_to_l_@f2+3,f
  8375  1F76  3000               	movlw	0
  8376  1F77  00A3               	movwf	__div_to_l_@quot+3
  8377  1F78  3000               	movlw	0
  8378  1F79  00A2               	movwf	__div_to_l_@quot+2
  8379  1F7A  3000               	movlw	0
  8380  1F7B  00A1               	movwf	__div_to_l_@quot+1
  8381  1F7C  3000               	movlw	0
  8382  1F7D  00A0               	movwf	__div_to_l_@quot
  8383  1F7E                     l2906:
  8384  1F7E  307F               	movlw	127
  8385  1F7F  02A5               	subwf	__div_to_l_@exp1,f
  8386  1F80                     l2908:
  8387  1F80  30A0               	movlw	160
  8388  1F81  0724               	addwf	__div_to_l_@cntr,w
  8389  1F82  00F8               	movwf	??__div_to_l_
  8390  1F83  0878               	movf	??__div_to_l_,w
  8391  1F84  02A5               	subwf	__div_to_l_@exp1,f
  8392  1F85  3020               	movlw	32
  8393  1F86  00F8               	movwf	??__div_to_l_
  8394  1F87  0878               	movf	??__div_to_l_,w
  8395  1F88  00A4               	movwf	__div_to_l_@cntr
  8396  1F89                     l2910:
  8397  1F89  3001               	movlw	1
  8398  1F8A  00F8               	movwf	??__div_to_l_
  8399  1F8B                     u4555:
  8400  1F8B  1003               	clrc
  8401  1F8C  0DA0               	rlf	__div_to_l_@quot,f
  8402  1F8D  0DA1               	rlf	__div_to_l_@quot+1,f
  8403  1F8E  0DA2               	rlf	__div_to_l_@quot+2,f
  8404  1F8F  0DA3               	rlf	__div_to_l_@quot+3,f
  8405  1F90  0BF8               	decfsz	??__div_to_l_,f
  8406  1F91  2F8B               	goto	u4555
  8407  1F92                     l2912:
  8408  1F92  0877               	movf	__div_to_l_@f2+3,w
  8409  1F93  0273               	subwf	__div_to_l_@f1+3,w
  8410  1F94  1D03               	skipz
  8411  1F95  2FA0               	goto	u4565
  8412  1F96  0876               	movf	__div_to_l_@f2+2,w
  8413  1F97  0272               	subwf	__div_to_l_@f1+2,w
  8414  1F98  1D03               	skipz
  8415  1F99  2FA0               	goto	u4565
  8416  1F9A  0875               	movf	__div_to_l_@f2+1,w
  8417  1F9B  0271               	subwf	__div_to_l_@f1+1,w
  8418  1F9C  1D03               	skipz
  8419  1F9D  2FA0               	goto	u4565
  8420  1F9E  0874               	movf	__div_to_l_@f2,w
  8421  1F9F  0270               	subwf	__div_to_l_@f1,w
  8422  1FA0                     u4565:
  8423  1FA0  1C03               	skipc
  8424  1FA1  2FA3               	goto	u4561
  8425  1FA2  2FA4               	goto	u4560
  8426  1FA3                     u4561:
  8427  1FA3  2FB3               	goto	l2918
  8428  1FA4                     u4560:
  8429  1FA4                     l2914:
  8430  1FA4  0874               	movf	__div_to_l_@f2,w
  8431  1FA5  02F0               	subwf	__div_to_l_@f1,f
  8432  1FA6  0875               	movf	__div_to_l_@f2+1,w
  8433  1FA7  1C03               	skipc
  8434  1FA8  0F75               	incfsz	__div_to_l_@f2+1,w
  8435  1FA9  02F1               	subwf	__div_to_l_@f1+1,f
  8436  1FAA  0876               	movf	__div_to_l_@f2+2,w
  8437  1FAB  1C03               	skipc
  8438  1FAC  0F76               	incfsz	__div_to_l_@f2+2,w
  8439  1FAD  02F2               	subwf	__div_to_l_@f1+2,f
  8440  1FAE  0877               	movf	__div_to_l_@f2+3,w
  8441  1FAF  1C03               	skipc
  8442  1FB0  0F77               	incfsz	__div_to_l_@f2+3,w
  8443  1FB1  02F3               	subwf	__div_to_l_@f1+3,f
  8444  1FB2                     l2916:
  8445  1FB2  1420               	bsf	__div_to_l_@quot,0
  8446  1FB3                     l2918:
  8447  1FB3  3001               	movlw	1
  8448  1FB4  00F8               	movwf	??__div_to_l_
  8449  1FB5                     u4575:
  8450  1FB5  1003               	clrc
  8451  1FB6  0DF0               	rlf	__div_to_l_@f1,f
  8452  1FB7  0DF1               	rlf	__div_to_l_@f1+1,f
  8453  1FB8  0DF2               	rlf	__div_to_l_@f1+2,f
  8454  1FB9  0DF3               	rlf	__div_to_l_@f1+3,f
  8455  1FBA  0BF8               	decfsz	??__div_to_l_,f
  8456  1FBB  2FB5               	goto	u4575
  8457  1FBC                     l2920:
  8458  1FBC  3001               	movlw	1
  8459  1FBD  02A4               	subwf	__div_to_l_@cntr,f
  8460  1FBE  1D03               	btfss	3,2
  8461  1FBF  2FC1               	goto	u4581
  8462  1FC0  2FC2               	goto	u4580
  8463  1FC1                     u4581:
  8464  1FC1  2F89               	goto	l2910
  8465  1FC2                     u4580:
  8466  1FC2                     l491:
  8467  1FC2  1FA5               	btfss	__div_to_l_@exp1,7
  8468  1FC3  2FC5               	goto	u4591
  8469  1FC4  2FC6               	goto	u4590
  8470  1FC5                     u4591:
  8471  1FC5  2FE0               	goto	l2930
  8472  1FC6                     u4590:
  8473  1FC6                     l2922:
  8474  1FC6  0825               	movf	__div_to_l_@exp1,w
  8475  1FC7  3A80               	xorlw	128
  8476  1FC8  3E9F               	addlw	159
  8477  1FC9  1803               	skipnc
  8478  1FCA  2FCC               	goto	u4601
  8479  1FCB  2FCD               	goto	u4600
  8480  1FCC                     u4601:
  8481  1FCC  2FCE               	goto	l2928
  8482  1FCD                     u4600:
  8483  1FCD  2F4F               	goto	l2892
  8484  1FCE                     l2928:
  8485  1FCE  3001               	movlw	1
  8486  1FCF                     u4615:
  8487  1FCF  1003               	clrc
  8488  1FD0  0CA3               	rrf	__div_to_l_@quot+3,f
  8489  1FD1  0CA2               	rrf	__div_to_l_@quot+2,f
  8490  1FD2  0CA1               	rrf	__div_to_l_@quot+1,f
  8491  1FD3  0CA0               	rrf	__div_to_l_@quot,f
  8492  1FD4  3EFF               	addlw	-1
  8493  1FD5  1D03               	skipz
  8494  1FD6  2FCF               	goto	u4615
  8495  1FD7  3001               	movlw	1
  8496  1FD8  00F8               	movwf	??__div_to_l_
  8497  1FD9  0878               	movf	??__div_to_l_,w
  8498  1FDA  07A5               	addwf	__div_to_l_@exp1,f
  8499  1FDB  1D03               	btfss	3,2
  8500  1FDC  2FDE               	goto	u4621
  8501  1FDD  2FDF               	goto	u4620
  8502  1FDE                     u4621:
  8503  1FDE  2FCE               	goto	l2928
  8504  1FDF                     u4620:
  8505  1FDF  2FF7               	goto	l2938
  8506  1FE0                     l2930:
  8507  1FE0  3020               	movlw	32
  8508  1FE1  0225               	subwf	__div_to_l_@exp1,w
  8509  1FE2  1C03               	skipc
  8510  1FE3  2FE5               	goto	u4631
  8511  1FE4  2FE6               	goto	u4630
  8512  1FE5                     u4631:
  8513  1FE5  2FF2               	goto	l498
  8514  1FE6                     u4630:
  8515  1FE6  2F4F               	goto	l2892
  8516  1FE7                     l2936:
  8517  1FE7  3001               	movlw	1
  8518  1FE8  00F8               	movwf	??__div_to_l_
  8519  1FE9                     u4645:
  8520  1FE9  1003               	clrc
  8521  1FEA  0DA0               	rlf	__div_to_l_@quot,f
  8522  1FEB  0DA1               	rlf	__div_to_l_@quot+1,f
  8523  1FEC  0DA2               	rlf	__div_to_l_@quot+2,f
  8524  1FED  0DA3               	rlf	__div_to_l_@quot+3,f
  8525  1FEE  0BF8               	decfsz	??__div_to_l_,f
  8526  1FEF  2FE9               	goto	u4645
  8527  1FF0  3001               	movlw	1
  8528  1FF1  02A5               	subwf	__div_to_l_@exp1,f
  8529  1FF2                     l498:
  8530  1FF2  0825               	movf	__div_to_l_@exp1,w
  8531  1FF3  1D03               	btfss	3,2
  8532  1FF4  2FF6               	goto	u4651
  8533  1FF5  2FF7               	goto	u4650
  8534  1FF6                     u4651:
  8535  1FF6  2FE7               	goto	l2936
  8536  1FF7                     u4650:
  8537  1FF7                     l2938:
  8538  1FF7  0823               	movf	__div_to_l_@quot+3,w
  8539  1FF8  00F3               	movwf	?__div_to_l_+3
  8540  1FF9  0822               	movf	__div_to_l_@quot+2,w
  8541  1FFA  00F2               	movwf	?__div_to_l_+2
  8542  1FFB  0821               	movf	__div_to_l_@quot+1,w
  8543  1FFC  00F1               	movwf	?__div_to_l_+1
  8544  1FFD  0820               	movf	__div_to_l_@quot,w
  8545  1FFE  00F0               	movwf	?__div_to_l_
  8546  1FFF                     l487:
  8547  1FFF  0008               	return
  8548  2000                     __end_of__div_to_l_:
  8549                           
  8550                           	psect	text24
  8551  1DC9                     __ptext24:	
  8552 ;; *************** function ___xxtofl *****************
  8553 ;; Defined at:
  8554 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8555 ;; Parameters:    Size  Location     Type
  8556 ;;  sign            1    wreg     unsigned char 
  8557 ;;  val             4    4[BANK0 ] long 
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;  sign            1   12[BANK0 ] unsigned char 
  8560 ;;  arg             4   14[BANK0 ] unsigned long 
  8561 ;;  exp             1   13[BANK0 ] unsigned char 
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  4    4[BANK0 ] unsigned char 
  8564 ;; Registers used:
  8565 ;;		wreg, status,2, status,0
  8566 ;; Tracked objects:
  8567 ;;		On entry : 0/0
  8568 ;;		On exit  : 0/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8571 ;;      Params:         0       4       0       0       0
  8572 ;;      Locals:         0       6       0       0       0
  8573 ;;      Temps:          0       4       0       0       0
  8574 ;;      Totals:         0      14       0       0       0
  8575 ;;Total ram usage:       14 bytes
  8576 ;; Hardware stack levels used:    1
  8577 ;; This function calls:
  8578 ;;		Nothing
  8579 ;; This function is called by:
  8580 ;;		_main
  8581 ;;		_conversion
  8582 ;;		_temperaturac
  8583 ;;		_sprintf
  8584 ;; This function uses a non-reentrant model
  8585 ;;
  8586                           
  8587                           
  8588                           ;psect for function ___xxtofl
  8589  1DC9                     ___xxtofl:
  8590                           
  8591                           ;incstack = 0
  8592                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8593                           ;___xxtofl@sign stored from wreg
  8594  1DC9  1283               	bcf	3,5	;RP0=0, select bank0
  8595  1DCA  1303               	bcf	3,6	;RP1=0, select bank0
  8596  1DCB  00AC               	movwf	___xxtofl@sign
  8597  1DCC                     l3082:
  8598  1DCC  082C               	movf	___xxtofl@sign,w
  8599  1DCD  1903               	btfsc	3,2
  8600  1DCE  2DD0               	goto	u5041
  8601  1DCF  2DD1               	goto	u5040
  8602  1DD0                     u5041:
  8603  1DD0  2DE5               	goto	l3088
  8604  1DD1                     u5040:
  8605  1DD1                     l3084:
  8606  1DD1  1FA7               	btfss	___xxtofl@val+3,7
  8607  1DD2  2DD4               	goto	u5051
  8608  1DD3  2DD5               	goto	u5050
  8609  1DD4                     u5051:
  8610  1DD4  2DE5               	goto	l3088
  8611  1DD5                     u5050:
  8612  1DD5                     l3086:
  8613  1DD5  0924               	comf	___xxtofl@val,w
  8614  1DD6  00AE               	movwf	___xxtofl@arg
  8615  1DD7  0925               	comf	___xxtofl@val+1,w
  8616  1DD8  00AF               	movwf	___xxtofl@arg+1
  8617  1DD9  0926               	comf	___xxtofl@val+2,w
  8618  1DDA  00B0               	movwf	___xxtofl@arg+2
  8619  1DDB  0927               	comf	___xxtofl@val+3,w
  8620  1DDC  00B1               	movwf	___xxtofl@arg+3
  8621  1DDD  0AAE               	incf	___xxtofl@arg,f
  8622  1DDE  1903               	skipnz
  8623  1DDF  0AAF               	incf	___xxtofl@arg+1,f
  8624  1DE0  1903               	skipnz
  8625  1DE1  0AB0               	incf	___xxtofl@arg+2,f
  8626  1DE2  1903               	skipnz
  8627  1DE3  0AB1               	incf	___xxtofl@arg+3,f
  8628  1DE4  2DED               	goto	l784
  8629  1DE5                     l3088:
  8630  1DE5  0827               	movf	___xxtofl@val+3,w
  8631  1DE6  00B1               	movwf	___xxtofl@arg+3
  8632  1DE7  0826               	movf	___xxtofl@val+2,w
  8633  1DE8  00B0               	movwf	___xxtofl@arg+2
  8634  1DE9  0825               	movf	___xxtofl@val+1,w
  8635  1DEA  00AF               	movwf	___xxtofl@arg+1
  8636  1DEB  0824               	movf	___xxtofl@val,w
  8637  1DEC  00AE               	movwf	___xxtofl@arg
  8638  1DED                     l784:
  8639  1DED  0827               	movf	___xxtofl@val+3,w
  8640  1DEE  0426               	iorwf	___xxtofl@val+2,w
  8641  1DEF  0425               	iorwf	___xxtofl@val+1,w
  8642  1DF0  0424               	iorwf	___xxtofl@val,w
  8643  1DF1  1D03               	skipz
  8644  1DF2  2DF4               	goto	u5061
  8645  1DF3  2DF5               	goto	u5060
  8646  1DF4                     u5061:
  8647  1DF4  2DFE               	goto	l3094
  8648  1DF5                     u5060:
  8649  1DF5                     l3090:
  8650  1DF5  3000               	movlw	0
  8651  1DF6  00A7               	movwf	?___xxtofl+3
  8652  1DF7  3000               	movlw	0
  8653  1DF8  00A6               	movwf	?___xxtofl+2
  8654  1DF9  3000               	movlw	0
  8655  1DFA  00A5               	movwf	?___xxtofl+1
  8656  1DFB  3000               	movlw	0
  8657  1DFC  00A4               	movwf	?___xxtofl
  8658  1DFD  2E84               	goto	l786
  8659  1DFE                     l3094:
  8660  1DFE  3096               	movlw	150
  8661  1DFF  00A8               	movwf	??___xxtofl
  8662  1E00  0828               	movf	??___xxtofl,w
  8663  1E01  00AD               	movwf	___xxtofl@exp
  8664  1E02  2E10               	goto	l3098
  8665  1E03                     l3096:
  8666  1E03  3001               	movlw	1
  8667  1E04  00A8               	movwf	??___xxtofl
  8668  1E05  0828               	movf	??___xxtofl,w
  8669  1E06  07AD               	addwf	___xxtofl@exp,f
  8670  1E07  3001               	movlw	1
  8671  1E08                     u5075:
  8672  1E08  1003               	clrc
  8673  1E09  0CB1               	rrf	___xxtofl@arg+3,f
  8674  1E0A  0CB0               	rrf	___xxtofl@arg+2,f
  8675  1E0B  0CAF               	rrf	___xxtofl@arg+1,f
  8676  1E0C  0CAE               	rrf	___xxtofl@arg,f
  8677  1E0D  3EFF               	addlw	-1
  8678  1E0E  1D03               	skipz
  8679  1E0F  2E08               	goto	u5075
  8680  1E10                     l3098:
  8681  1E10  30FE               	movlw	254
  8682  1E11  0531               	andwf	___xxtofl@arg+3,w
  8683  1E12  1D03               	btfss	3,2
  8684  1E13  2E15               	goto	u5081
  8685  1E14  2E16               	goto	u5080
  8686  1E15                     u5081:
  8687  1E15  2E03               	goto	l3096
  8688  1E16                     u5080:
  8689  1E16  2E32               	goto	l790
  8690  1E17                     l3100:
  8691  1E17  3001               	movlw	1
  8692  1E18  00A8               	movwf	??___xxtofl
  8693  1E19  0828               	movf	??___xxtofl,w
  8694  1E1A  07AD               	addwf	___xxtofl@exp,f
  8695  1E1B                     l3102:
  8696  1E1B  3001               	movlw	1
  8697  1E1C  07AE               	addwf	___xxtofl@arg,f
  8698  1E1D  3000               	movlw	0
  8699  1E1E  1803               	skipnc
  8700  1E1F  3001               	movlw	1
  8701  1E20  07AF               	addwf	___xxtofl@arg+1,f
  8702  1E21  3000               	movlw	0
  8703  1E22  1803               	skipnc
  8704  1E23  3001               	movlw	1
  8705  1E24  07B0               	addwf	___xxtofl@arg+2,f
  8706  1E25  3000               	movlw	0
  8707  1E26  1803               	skipnc
  8708  1E27  3001               	movlw	1
  8709  1E28  07B1               	addwf	___xxtofl@arg+3,f
  8710  1E29                     l3104:
  8711  1E29  3001               	movlw	1
  8712  1E2A                     u5095:
  8713  1E2A  1003               	clrc
  8714  1E2B  0CB1               	rrf	___xxtofl@arg+3,f
  8715  1E2C  0CB0               	rrf	___xxtofl@arg+2,f
  8716  1E2D  0CAF               	rrf	___xxtofl@arg+1,f
  8717  1E2E  0CAE               	rrf	___xxtofl@arg,f
  8718  1E2F  3EFF               	addlw	-1
  8719  1E30  1D03               	skipz
  8720  1E31  2E2A               	goto	u5095
  8721  1E32                     l790:
  8722  1E32  30FF               	movlw	255
  8723  1E33  0531               	andwf	___xxtofl@arg+3,w
  8724  1E34  1D03               	btfss	3,2
  8725  1E35  2E37               	goto	u5101
  8726  1E36  2E38               	goto	u5100
  8727  1E37                     u5101:
  8728  1E37  2E17               	goto	l3100
  8729  1E38                     u5100:
  8730  1E38  2E44               	goto	l3108
  8731  1E39                     l3106:
  8732  1E39  3001               	movlw	1
  8733  1E3A  02AD               	subwf	___xxtofl@exp,f
  8734  1E3B  3001               	movlw	1
  8735  1E3C  00A8               	movwf	??___xxtofl
  8736  1E3D                     u5115:
  8737  1E3D  1003               	clrc
  8738  1E3E  0DAE               	rlf	___xxtofl@arg,f
  8739  1E3F  0DAF               	rlf	___xxtofl@arg+1,f
  8740  1E40  0DB0               	rlf	___xxtofl@arg+2,f
  8741  1E41  0DB1               	rlf	___xxtofl@arg+3,f
  8742  1E42  0BA8               	decfsz	??___xxtofl,f
  8743  1E43  2E3D               	goto	u5115
  8744  1E44                     l3108:
  8745  1E44  1BB0               	btfsc	___xxtofl@arg+2,7
  8746  1E45  2E47               	goto	u5121
  8747  1E46  2E48               	goto	u5120
  8748  1E47                     u5121:
  8749  1E47  2E4E               	goto	l797
  8750  1E48                     u5120:
  8751  1E48                     l3110:
  8752  1E48  3002               	movlw	2
  8753  1E49  022D               	subwf	___xxtofl@exp,w
  8754  1E4A  1803               	skipnc
  8755  1E4B  2E4D               	goto	u5131
  8756  1E4C  2E4E               	goto	u5130
  8757  1E4D                     u5131:
  8758  1E4D  2E39               	goto	l3106
  8759  1E4E                     u5130:
  8760  1E4E                     l797:
  8761  1E4E  182D               	btfsc	___xxtofl@exp,0
  8762  1E4F  2E51               	goto	u5141
  8763  1E50  2E52               	goto	u5140
  8764  1E51                     u5141:
  8765  1E51  2E5A               	goto	l798
  8766  1E52                     u5140:
  8767  1E52                     l3112:
  8768  1E52  30FF               	movlw	255
  8769  1E53  05AE               	andwf	___xxtofl@arg,f
  8770  1E54  30FF               	movlw	255
  8771  1E55  05AF               	andwf	___xxtofl@arg+1,f
  8772  1E56  307F               	movlw	127
  8773  1E57  05B0               	andwf	___xxtofl@arg+2,f
  8774  1E58  30FF               	movlw	255
  8775  1E59  05B1               	andwf	___xxtofl@arg+3,f
  8776  1E5A                     l798:
  8777  1E5A  1003               	clrc
  8778  1E5B  0CAD               	rrf	___xxtofl@exp,f
  8779  1E5C                     l3114:
  8780  1E5C  082D               	movf	___xxtofl@exp,w
  8781  1E5D  00A8               	movwf	??___xxtofl
  8782  1E5E  01A9               	clrf	??___xxtofl+1
  8783  1E5F  01AA               	clrf	??___xxtofl+2
  8784  1E60  01AB               	clrf	??___xxtofl+3
  8785  1E61  3018               	movlw	24
  8786  1E62                     u5155:
  8787  1E62  1003               	clrc
  8788  1E63  0DA8               	rlf	??___xxtofl,f
  8789  1E64  0DA9               	rlf	??___xxtofl+1,f
  8790  1E65  0DAA               	rlf	??___xxtofl+2,f
  8791  1E66  0DAB               	rlf	??___xxtofl+3,f
  8792  1E67                     u5150:
  8793  1E67  3EFF               	addlw	-1
  8794  1E68  1D03               	skipz
  8795  1E69  2E62               	goto	u5155
  8796  1E6A  0828               	movf	??___xxtofl,w
  8797  1E6B  04AE               	iorwf	___xxtofl@arg,f
  8798  1E6C  0829               	movf	??___xxtofl+1,w
  8799  1E6D  04AF               	iorwf	___xxtofl@arg+1,f
  8800  1E6E  082A               	movf	??___xxtofl+2,w
  8801  1E6F  04B0               	iorwf	___xxtofl@arg+2,f
  8802  1E70  082B               	movf	??___xxtofl+3,w
  8803  1E71  04B1               	iorwf	___xxtofl@arg+3,f
  8804  1E72                     l3116:
  8805  1E72  082C               	movf	___xxtofl@sign,w
  8806  1E73  1903               	btfsc	3,2
  8807  1E74  2E76               	goto	u5161
  8808  1E75  2E77               	goto	u5160
  8809  1E76                     u5161:
  8810  1E76  2E7C               	goto	l3122
  8811  1E77                     u5160:
  8812  1E77                     l3118:
  8813  1E77  1FA7               	btfss	___xxtofl@val+3,7
  8814  1E78  2E7A               	goto	u5171
  8815  1E79  2E7B               	goto	u5170
  8816  1E7A                     u5171:
  8817  1E7A  2E7C               	goto	l3122
  8818  1E7B                     u5170:
  8819  1E7B                     l3120:
  8820  1E7B  17B1               	bsf	___xxtofl@arg+3,7
  8821  1E7C                     l3122:
  8822  1E7C  0831               	movf	___xxtofl@arg+3,w
  8823  1E7D  00A7               	movwf	?___xxtofl+3
  8824  1E7E  0830               	movf	___xxtofl@arg+2,w
  8825  1E7F  00A6               	movwf	?___xxtofl+2
  8826  1E80  082F               	movf	___xxtofl@arg+1,w
  8827  1E81  00A5               	movwf	?___xxtofl+1
  8828  1E82  082E               	movf	___xxtofl@arg,w
  8829  1E83  00A4               	movwf	?___xxtofl
  8830  1E84                     l786:
  8831  1E84  0008               	return
  8832  1E85                     __end_of___xxtofl:
  8833                           
  8834                           	psect	text25
  8835  1969                     __ptext25:	
  8836 ;; *************** function ___wmul *****************
  8837 ;; Defined at:
  8838 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  8839 ;; Parameters:    Size  Location     Type
  8840 ;;  multiplier      2    0[COMMON] unsigned int 
  8841 ;;  multiplicand    2    2[COMMON] unsigned int 
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;  product         2    4[COMMON] unsigned int 
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  2    0[COMMON] unsigned int 
  8846 ;; Registers used:
  8847 ;;		wreg, status,2, status,0
  8848 ;; Tracked objects:
  8849 ;;		On entry : 0/0
  8850 ;;		On exit  : 0/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8853 ;;      Params:         4       0       0       0       0
  8854 ;;      Locals:         2       0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0
  8856 ;;      Totals:         6       0       0       0       0
  8857 ;;Total ram usage:        6 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; This function calls:
  8860 ;;		Nothing
  8861 ;; This function is called by:
  8862 ;;		_conversion
  8863 ;;		_sprintf
  8864 ;; This function uses a non-reentrant model
  8865 ;;
  8866                           
  8867                           
  8868                           ;psect for function ___wmul
  8869  1969                     ___wmul:
  8870  1969                     l2942:	
  8871                           ;incstack = 0
  8872                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8873                           
  8874  1969  01F4               	clrf	___wmul@product
  8875  196A  01F5               	clrf	___wmul@product+1
  8876  196B                     l2944:
  8877  196B  1C70               	btfss	___wmul@multiplier,0
  8878  196C  296E               	goto	u4661
  8879  196D  296F               	goto	u4660
  8880  196E                     u4661:
  8881  196E  2975               	goto	l317
  8882  196F                     u4660:
  8883  196F                     l2946:
  8884  196F  0872               	movf	___wmul@multiplicand,w
  8885  1970  07F4               	addwf	___wmul@product,f
  8886  1971  1803               	skipnc
  8887  1972  0AF5               	incf	___wmul@product+1,f
  8888  1973  0873               	movf	___wmul@multiplicand+1,w
  8889  1974  07F5               	addwf	___wmul@product+1,f
  8890  1975                     l317:
  8891  1975  3001               	movlw	1
  8892  1976                     u4675:
  8893  1976  1003               	clrc
  8894  1977  0DF2               	rlf	___wmul@multiplicand,f
  8895  1978  0DF3               	rlf	___wmul@multiplicand+1,f
  8896  1979  3EFF               	addlw	-1
  8897  197A  1D03               	skipz
  8898  197B  2976               	goto	u4675
  8899  197C                     l2948:
  8900  197C  3001               	movlw	1
  8901  197D                     u4685:
  8902  197D  1003               	clrc
  8903  197E  0CF1               	rrf	___wmul@multiplier+1,f
  8904  197F  0CF0               	rrf	___wmul@multiplier,f
  8905  1980  3EFF               	addlw	-1
  8906  1981  1D03               	skipz
  8907  1982  297D               	goto	u4685
  8908  1983                     l2950:
  8909  1983  0870               	movf	___wmul@multiplier,w
  8910  1984  0471               	iorwf	___wmul@multiplier+1,w
  8911  1985  1D03               	btfss	3,2
  8912  1986  2988               	goto	u4691
  8913  1987  2989               	goto	u4690
  8914  1988                     u4691:
  8915  1988  296B               	goto	l2944
  8916  1989                     u4690:
  8917  1989                     l2952:
  8918  1989  0875               	movf	___wmul@product+1,w
  8919  198A  00F1               	movwf	?___wmul+1
  8920  198B  0874               	movf	___wmul@product,w
  8921  198C  00F0               	movwf	?___wmul
  8922  198D                     l319:
  8923  198D  0008               	return
  8924  198E                     __end_of___wmul:
  8925                           
  8926                           	psect	text26
  8927  1B2B                     __ptext26:	
  8928 ;; *************** function ___llmod *****************
  8929 ;; Defined at:
  8930 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  8931 ;; Parameters:    Size  Location     Type
  8932 ;;  divisor         4    0[COMMON] unsigned long 
  8933 ;;  dividend        4    4[COMMON] unsigned long 
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;  counter         1    9[COMMON] unsigned char 
  8936 ;; Return value:  Size  Location     Type
  8937 ;;                  4    0[COMMON] unsigned long 
  8938 ;; Registers used:
  8939 ;;		wreg, status,2, status,0
  8940 ;; Tracked objects:
  8941 ;;		On entry : 0/0
  8942 ;;		On exit  : 0/0
  8943 ;;		Unchanged: 0/0
  8944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8945 ;;      Params:         8       0       0       0       0
  8946 ;;      Locals:         1       0       0       0       0
  8947 ;;      Temps:          1       0       0       0       0
  8948 ;;      Totals:        10       0       0       0       0
  8949 ;;Total ram usage:       10 bytes
  8950 ;; Hardware stack levels used:    1
  8951 ;; This function calls:
  8952 ;;		Nothing
  8953 ;; This function is called by:
  8954 ;;		_sprintf
  8955 ;; This function uses a non-reentrant model
  8956 ;;
  8957                           
  8958                           
  8959                           ;psect for function ___llmod
  8960  1B2B                     ___llmod:
  8961  1B2B                     l3056:	
  8962                           ;incstack = 0
  8963                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8964                           
  8965  1B2B  0873               	movf	___llmod@divisor+3,w
  8966  1B2C  0472               	iorwf	___llmod@divisor+2,w
  8967  1B2D  0471               	iorwf	___llmod@divisor+1,w
  8968  1B2E  0470               	iorwf	___llmod@divisor,w
  8969  1B2F  1903               	skipnz
  8970  1B30  2B32               	goto	u4981
  8971  1B31  2B33               	goto	u4980
  8972  1B32                     u4981:
  8973  1B32  2B76               	goto	l3072
  8974  1B33                     u4980:
  8975  1B33                     l3058:
  8976  1B33  01F9               	clrf	___llmod@counter
  8977  1B34  0AF9               	incf	___llmod@counter,f
  8978  1B35  2B43               	goto	l3062
  8979  1B36                     l3060:
  8980  1B36  3001               	movlw	1
  8981  1B37  00F8               	movwf	??___llmod
  8982  1B38                     u4995:
  8983  1B38  1003               	clrc
  8984  1B39  0DF0               	rlf	___llmod@divisor,f
  8985  1B3A  0DF1               	rlf	___llmod@divisor+1,f
  8986  1B3B  0DF2               	rlf	___llmod@divisor+2,f
  8987  1B3C  0DF3               	rlf	___llmod@divisor+3,f
  8988  1B3D  0BF8               	decfsz	??___llmod,f
  8989  1B3E  2B38               	goto	u4995
  8990  1B3F  3001               	movlw	1
  8991  1B40  00F8               	movwf	??___llmod
  8992  1B41  0878               	movf	??___llmod,w
  8993  1B42  07F9               	addwf	___llmod@counter,f
  8994  1B43                     l3062:
  8995  1B43  1FF3               	btfss	___llmod@divisor+3,7
  8996  1B44  2B46               	goto	u5001
  8997  1B45  2B47               	goto	u5000
  8998  1B46                     u5001:
  8999  1B46  2B36               	goto	l3060
  9000  1B47                     u5000:
  9001  1B47                     l3064:
  9002  1B47  0873               	movf	___llmod@divisor+3,w
  9003  1B48  0277               	subwf	___llmod@dividend+3,w
  9004  1B49  1D03               	skipz
  9005  1B4A  2B55               	goto	u5015
  9006  1B4B  0872               	movf	___llmod@divisor+2,w
  9007  1B4C  0276               	subwf	___llmod@dividend+2,w
  9008  1B4D  1D03               	skipz
  9009  1B4E  2B55               	goto	u5015
  9010  1B4F  0871               	movf	___llmod@divisor+1,w
  9011  1B50  0275               	subwf	___llmod@dividend+1,w
  9012  1B51  1D03               	skipz
  9013  1B52  2B55               	goto	u5015
  9014  1B53  0870               	movf	___llmod@divisor,w
  9015  1B54  0274               	subwf	___llmod@dividend,w
  9016  1B55                     u5015:
  9017  1B55  1C03               	skipc
  9018  1B56  2B58               	goto	u5011
  9019  1B57  2B59               	goto	u5010
  9020  1B58                     u5011:
  9021  1B58  2B67               	goto	l3068
  9022  1B59                     u5010:
  9023  1B59                     l3066:
  9024  1B59  0870               	movf	___llmod@divisor,w
  9025  1B5A  02F4               	subwf	___llmod@dividend,f
  9026  1B5B  0871               	movf	___llmod@divisor+1,w
  9027  1B5C  1C03               	skipc
  9028  1B5D  0F71               	incfsz	___llmod@divisor+1,w
  9029  1B5E  02F5               	subwf	___llmod@dividend+1,f
  9030  1B5F  0872               	movf	___llmod@divisor+2,w
  9031  1B60  1C03               	skipc
  9032  1B61  0F72               	incfsz	___llmod@divisor+2,w
  9033  1B62  02F6               	subwf	___llmod@dividend+2,f
  9034  1B63  0873               	movf	___llmod@divisor+3,w
  9035  1B64  1C03               	skipc
  9036  1B65  0F73               	incfsz	___llmod@divisor+3,w
  9037  1B66  02F7               	subwf	___llmod@dividend+3,f
  9038  1B67                     l3068:
  9039  1B67  3001               	movlw	1
  9040  1B68                     u5025:
  9041  1B68  1003               	clrc
  9042  1B69  0CF3               	rrf	___llmod@divisor+3,f
  9043  1B6A  0CF2               	rrf	___llmod@divisor+2,f
  9044  1B6B  0CF1               	rrf	___llmod@divisor+1,f
  9045  1B6C  0CF0               	rrf	___llmod@divisor,f
  9046  1B6D  3EFF               	addlw	-1
  9047  1B6E  1D03               	skipz
  9048  1B6F  2B68               	goto	u5025
  9049  1B70                     l3070:
  9050  1B70  3001               	movlw	1
  9051  1B71  02F9               	subwf	___llmod@counter,f
  9052  1B72  1D03               	btfss	3,2
  9053  1B73  2B75               	goto	u5031
  9054  1B74  2B76               	goto	u5030
  9055  1B75                     u5031:
  9056  1B75  2B47               	goto	l3064
  9057  1B76                     u5030:
  9058  1B76                     l3072:
  9059  1B76  0877               	movf	___llmod@dividend+3,w
  9060  1B77  00F3               	movwf	?___llmod+3
  9061  1B78  0876               	movf	___llmod@dividend+2,w
  9062  1B79  00F2               	movwf	?___llmod+2
  9063  1B7A  0875               	movf	___llmod@dividend+1,w
  9064  1B7B  00F1               	movwf	?___llmod+1
  9065  1B7C  0874               	movf	___llmod@dividend,w
  9066  1B7D  00F0               	movwf	?___llmod
  9067  1B7E                     l573:
  9068  1B7E  0008               	return
  9069  1B7F                     __end_of___llmod:
  9070                           
  9071                           	psect	text27
  9072  1BD8                     __ptext27:	
  9073 ;; *************** function ___lldiv *****************
  9074 ;; Defined at:
  9075 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  9076 ;; Parameters:    Size  Location     Type
  9077 ;;  divisor         4    0[COMMON] unsigned long 
  9078 ;;  dividend        4    4[COMMON] unsigned long 
  9079 ;; Auto vars:     Size  Location     Type
  9080 ;;  quotient        4    9[COMMON] unsigned long 
  9081 ;;  counter         1   13[COMMON] unsigned char 
  9082 ;; Return value:  Size  Location     Type
  9083 ;;                  4    0[COMMON] unsigned long 
  9084 ;; Registers used:
  9085 ;;		wreg, status,2, status,0
  9086 ;; Tracked objects:
  9087 ;;		On entry : 0/0
  9088 ;;		On exit  : 0/0
  9089 ;;		Unchanged: 0/0
  9090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9091 ;;      Params:         8       0       0       0       0
  9092 ;;      Locals:         5       0       0       0       0
  9093 ;;      Temps:          1       0       0       0       0
  9094 ;;      Totals:        14       0       0       0       0
  9095 ;;Total ram usage:       14 bytes
  9096 ;; Hardware stack levels used:    1
  9097 ;; This function calls:
  9098 ;;		Nothing
  9099 ;; This function is called by:
  9100 ;;		_sprintf
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103                           
  9104                           
  9105                           ;psect for function ___lldiv
  9106  1BD8                     ___lldiv:
  9107  1BD8                     l2956:	
  9108                           ;incstack = 0
  9109                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9110                           
  9111  1BD8  3000               	movlw	0
  9112  1BD9  00FC               	movwf	___lldiv@quotient+3
  9113  1BDA  3000               	movlw	0
  9114  1BDB  00FB               	movwf	___lldiv@quotient+2
  9115  1BDC  3000               	movlw	0
  9116  1BDD  00FA               	movwf	___lldiv@quotient+1
  9117  1BDE  3000               	movlw	0
  9118  1BDF  00F9               	movwf	___lldiv@quotient
  9119  1BE0  0873               	movf	___lldiv@divisor+3,w
  9120  1BE1  0472               	iorwf	___lldiv@divisor+2,w
  9121  1BE2  0471               	iorwf	___lldiv@divisor+1,w
  9122  1BE3  0470               	iorwf	___lldiv@divisor,w
  9123  1BE4  1903               	skipnz
  9124  1BE5  2BE7               	goto	u4701
  9125  1BE6  2BE8               	goto	u4700
  9126  1BE7                     u4701:
  9127  1BE7  2C35               	goto	l2976
  9128  1BE8                     u4700:
  9129  1BE8                     l2958:
  9130  1BE8  01FD               	clrf	___lldiv@counter
  9131  1BE9  0AFD               	incf	___lldiv@counter,f
  9132  1BEA  2BF8               	goto	l2962
  9133  1BEB                     l2960:
  9134  1BEB  3001               	movlw	1
  9135  1BEC  00F8               	movwf	??___lldiv
  9136  1BED                     u4715:
  9137  1BED  1003               	clrc
  9138  1BEE  0DF0               	rlf	___lldiv@divisor,f
  9139  1BEF  0DF1               	rlf	___lldiv@divisor+1,f
  9140  1BF0  0DF2               	rlf	___lldiv@divisor+2,f
  9141  1BF1  0DF3               	rlf	___lldiv@divisor+3,f
  9142  1BF2  0BF8               	decfsz	??___lldiv,f
  9143  1BF3  2BED               	goto	u4715
  9144  1BF4  3001               	movlw	1
  9145  1BF5  00F8               	movwf	??___lldiv
  9146  1BF6  0878               	movf	??___lldiv,w
  9147  1BF7  07FD               	addwf	___lldiv@counter,f
  9148  1BF8                     l2962:
  9149  1BF8  1FF3               	btfss	___lldiv@divisor+3,7
  9150  1BF9  2BFB               	goto	u4721
  9151  1BFA  2BFC               	goto	u4720
  9152  1BFB                     u4721:
  9153  1BFB  2BEB               	goto	l2960
  9154  1BFC                     u4720:
  9155  1BFC                     l2964:
  9156  1BFC  3001               	movlw	1
  9157  1BFD  00F8               	movwf	??___lldiv
  9158  1BFE                     u4735:
  9159  1BFE  1003               	clrc
  9160  1BFF  0DF9               	rlf	___lldiv@quotient,f
  9161  1C00  0DFA               	rlf	___lldiv@quotient+1,f
  9162  1C01  0DFB               	rlf	___lldiv@quotient+2,f
  9163  1C02  0DFC               	rlf	___lldiv@quotient+3,f
  9164  1C03  0BF8               	decfsz	??___lldiv,f
  9165  1C04  2BFE               	goto	u4735
  9166  1C05                     l2966:
  9167  1C05  0873               	movf	___lldiv@divisor+3,w
  9168  1C06  0277               	subwf	___lldiv@dividend+3,w
  9169  1C07  1D03               	skipz
  9170  1C08  2C13               	goto	u4745
  9171  1C09  0872               	movf	___lldiv@divisor+2,w
  9172  1C0A  0276               	subwf	___lldiv@dividend+2,w
  9173  1C0B  1D03               	skipz
  9174  1C0C  2C13               	goto	u4745
  9175  1C0D  0871               	movf	___lldiv@divisor+1,w
  9176  1C0E  0275               	subwf	___lldiv@dividend+1,w
  9177  1C0F  1D03               	skipz
  9178  1C10  2C13               	goto	u4745
  9179  1C11  0870               	movf	___lldiv@divisor,w
  9180  1C12  0274               	subwf	___lldiv@dividend,w
  9181  1C13                     u4745:
  9182  1C13  1C03               	skipc
  9183  1C14  2C16               	goto	u4741
  9184  1C15  2C17               	goto	u4740
  9185  1C16                     u4741:
  9186  1C16  2C26               	goto	l2972
  9187  1C17                     u4740:
  9188  1C17                     l2968:
  9189  1C17  0870               	movf	___lldiv@divisor,w
  9190  1C18  02F4               	subwf	___lldiv@dividend,f
  9191  1C19  0871               	movf	___lldiv@divisor+1,w
  9192  1C1A  1C03               	skipc
  9193  1C1B  0F71               	incfsz	___lldiv@divisor+1,w
  9194  1C1C  02F5               	subwf	___lldiv@dividend+1,f
  9195  1C1D  0872               	movf	___lldiv@divisor+2,w
  9196  1C1E  1C03               	skipc
  9197  1C1F  0F72               	incfsz	___lldiv@divisor+2,w
  9198  1C20  02F6               	subwf	___lldiv@dividend+2,f
  9199  1C21  0873               	movf	___lldiv@divisor+3,w
  9200  1C22  1C03               	skipc
  9201  1C23  0F73               	incfsz	___lldiv@divisor+3,w
  9202  1C24  02F7               	subwf	___lldiv@dividend+3,f
  9203  1C25                     l2970:
  9204  1C25  1479               	bsf	___lldiv@quotient,0
  9205  1C26                     l2972:
  9206  1C26  3001               	movlw	1
  9207  1C27                     u4755:
  9208  1C27  1003               	clrc
  9209  1C28  0CF3               	rrf	___lldiv@divisor+3,f
  9210  1C29  0CF2               	rrf	___lldiv@divisor+2,f
  9211  1C2A  0CF1               	rrf	___lldiv@divisor+1,f
  9212  1C2B  0CF0               	rrf	___lldiv@divisor,f
  9213  1C2C  3EFF               	addlw	-1
  9214  1C2D  1D03               	skipz
  9215  1C2E  2C27               	goto	u4755
  9216  1C2F                     l2974:
  9217  1C2F  3001               	movlw	1
  9218  1C30  02FD               	subwf	___lldiv@counter,f
  9219  1C31  1D03               	btfss	3,2
  9220  1C32  2C34               	goto	u4761
  9221  1C33  2C35               	goto	u4760
  9222  1C34                     u4761:
  9223  1C34  2BFC               	goto	l2964
  9224  1C35                     u4760:
  9225  1C35                     l2976:
  9226  1C35  087C               	movf	___lldiv@quotient+3,w
  9227  1C36  00F3               	movwf	?___lldiv+3
  9228  1C37  087B               	movf	___lldiv@quotient+2,w
  9229  1C38  00F2               	movwf	?___lldiv+2
  9230  1C39  087A               	movf	___lldiv@quotient+1,w
  9231  1C3A  00F1               	movwf	?___lldiv+1
  9232  1C3B  0879               	movf	___lldiv@quotient,w
  9233  1C3C  00F0               	movwf	?___lldiv
  9234  1C3D                     l353:
  9235  1C3D  0008               	return
  9236  1C3E                     __end_of___lldiv:
  9237                           
  9238                           	psect	text28
  9239  1CAB                     __ptext28:	
  9240 ;; *************** function ___fltol *****************
  9241 ;; Defined at:
  9242 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;  f1              4   63[BANK0 ] unsigned long 
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;  exp1            1   73[BANK0 ] unsigned char 
  9247 ;;  sign1           1   72[BANK0 ] unsigned char 
  9248 ;; Return value:  Size  Location     Type
  9249 ;;                  4   63[BANK0 ] long 
  9250 ;; Registers used:
  9251 ;;		wreg, status,2, status,0
  9252 ;; Tracked objects:
  9253 ;;		On entry : 0/0
  9254 ;;		On exit  : 0/0
  9255 ;;		Unchanged: 0/0
  9256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9257 ;;      Params:         0       4       0       0       0
  9258 ;;      Locals:         0       2       0       0       0
  9259 ;;      Temps:          0       5       0       0       0
  9260 ;;      Totals:         0      11       0       0       0
  9261 ;;Total ram usage:       11 bytes
  9262 ;; Hardware stack levels used:    1
  9263 ;; This function calls:
  9264 ;;		Nothing
  9265 ;; This function is called by:
  9266 ;;		_sprintf
  9267 ;; This function uses a non-reentrant model
  9268 ;;
  9269                           
  9270                           
  9271                           ;psect for function ___fltol
  9272  1CAB                     ___fltol:
  9273  1CAB                     l3020:	
  9274                           ;incstack = 0
  9275                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  9276                           
  9277  1CAB  1003               	clrc
  9278  1CAC  1283               	bcf	3,5	;RP0=0, select bank0
  9279  1CAD  1303               	bcf	3,6	;RP1=0, select bank0
  9280  1CAE  0D61               	rlf	___fltol@f1+2,w
  9281  1CAF  0D62               	rlf	___fltol@f1+3,w
  9282  1CB0  00E3               	movwf	??___fltol
  9283  1CB1  0863               	movf	??___fltol,w
  9284  1CB2  00E9               	movwf	___fltol@exp1
  9285  1CB3  0869               	movf	___fltol@exp1,w
  9286  1CB4  1D03               	btfss	3,2
  9287  1CB5  2CB7               	goto	u4881
  9288  1CB6  2CB8               	goto	u4880
  9289  1CB7                     u4881:
  9290  1CB7  2CC1               	goto	l3026
  9291  1CB8                     u4880:
  9292  1CB8                     l3022:
  9293  1CB8  3000               	movlw	0
  9294  1CB9  00E2               	movwf	?___fltol+3
  9295  1CBA  3000               	movlw	0
  9296  1CBB  00E1               	movwf	?___fltol+2
  9297  1CBC  3000               	movlw	0
  9298  1CBD  00E0               	movwf	?___fltol+1
  9299  1CBE  3000               	movlw	0
  9300  1CBF  00DF               	movwf	?___fltol
  9301  1CC0  2D26               	goto	l520
  9302  1CC1                     l3026:
  9303  1CC1  085F               	movf	___fltol@f1,w
  9304  1CC2  00E3               	movwf	??___fltol
  9305  1CC3  0860               	movf	___fltol@f1+1,w
  9306  1CC4  00E4               	movwf	??___fltol+1
  9307  1CC5  0861               	movf	___fltol@f1+2,w
  9308  1CC6  00E5               	movwf	??___fltol+2
  9309  1CC7  0862               	movf	___fltol@f1+3,w
  9310  1CC8  00E6               	movwf	??___fltol+3
  9311  1CC9  301F               	movlw	31
  9312  1CCA                     u4895:
  9313  1CCA  1003               	clrc
  9314  1CCB  0CE6               	rrf	??___fltol+3,f
  9315  1CCC  0CE5               	rrf	??___fltol+2,f
  9316  1CCD  0CE4               	rrf	??___fltol+1,f
  9317  1CCE  0CE3               	rrf	??___fltol,f
  9318  1CCF                     u4890:
  9319  1CCF  3EFF               	addlw	-1
  9320  1CD0  1D03               	skipz
  9321  1CD1  2CCA               	goto	u4895
  9322  1CD2  0863               	movf	??___fltol,w
  9323  1CD3  00E7               	movwf	??___fltol+4
  9324  1CD4  0867               	movf	??___fltol+4,w
  9325  1CD5  00E8               	movwf	___fltol@sign1
  9326  1CD6                     l3028:
  9327  1CD6  17E1               	bsf	___fltol@f1+2,7
  9328  1CD7                     l3030:
  9329  1CD7  30FF               	movlw	255
  9330  1CD8  05DF               	andwf	___fltol@f1,f
  9331  1CD9  30FF               	movlw	255
  9332  1CDA  05E0               	andwf	___fltol@f1+1,f
  9333  1CDB  30FF               	movlw	255
  9334  1CDC  05E1               	andwf	___fltol@f1+2,f
  9335  1CDD  3000               	movlw	0
  9336  1CDE  05E2               	andwf	___fltol@f1+3,f
  9337  1CDF                     l3032:
  9338  1CDF  3096               	movlw	150
  9339  1CE0  02E9               	subwf	___fltol@exp1,f
  9340  1CE1                     l3034:
  9341  1CE1  1FE9               	btfss	___fltol@exp1,7
  9342  1CE2  2CE4               	goto	u4901
  9343  1CE3  2CE5               	goto	u4900
  9344  1CE4                     u4901:
  9345  1CE4  2CFF               	goto	l3044
  9346  1CE5                     u4900:
  9347  1CE5                     l3036:
  9348  1CE5  0869               	movf	___fltol@exp1,w
  9349  1CE6  3A80               	xorlw	128
  9350  1CE7  3E97               	addlw	151
  9351  1CE8  1803               	skipnc
  9352  1CE9  2CEB               	goto	u4911
  9353  1CEA  2CEC               	goto	u4910
  9354  1CEB                     u4911:
  9355  1CEB  2CED               	goto	l3042
  9356  1CEC                     u4910:
  9357  1CEC  2CB8               	goto	l3022
  9358  1CED                     l3042:
  9359  1CED  3001               	movlw	1
  9360  1CEE                     u4925:
  9361  1CEE  1003               	clrc
  9362  1CEF  0CE2               	rrf	___fltol@f1+3,f
  9363  1CF0  0CE1               	rrf	___fltol@f1+2,f
  9364  1CF1  0CE0               	rrf	___fltol@f1+1,f
  9365  1CF2  0CDF               	rrf	___fltol@f1,f
  9366  1CF3  3EFF               	addlw	-1
  9367  1CF4  1D03               	skipz
  9368  1CF5  2CEE               	goto	u4925
  9369  1CF6  3001               	movlw	1
  9370  1CF7  00E3               	movwf	??___fltol
  9371  1CF8  0863               	movf	??___fltol,w
  9372  1CF9  07E9               	addwf	___fltol@exp1,f
  9373  1CFA  1D03               	btfss	3,2
  9374  1CFB  2CFD               	goto	u4931
  9375  1CFC  2CFE               	goto	u4930
  9376  1CFD                     u4931:
  9377  1CFD  2CED               	goto	l3042
  9378  1CFE                     u4930:
  9379  1CFE  2D16               	goto	l3052
  9380  1CFF                     l3044:
  9381  1CFF  3020               	movlw	32
  9382  1D00  0269               	subwf	___fltol@exp1,w
  9383  1D01  1C03               	skipc
  9384  1D02  2D04               	goto	u4941
  9385  1D03  2D05               	goto	u4940
  9386  1D04                     u4941:
  9387  1D04  2D11               	goto	l527
  9388  1D05                     u4940:
  9389  1D05  2CB8               	goto	l3022
  9390  1D06                     l3050:
  9391  1D06  3001               	movlw	1
  9392  1D07  00E3               	movwf	??___fltol
  9393  1D08                     u4955:
  9394  1D08  1003               	clrc
  9395  1D09  0DDF               	rlf	___fltol@f1,f
  9396  1D0A  0DE0               	rlf	___fltol@f1+1,f
  9397  1D0B  0DE1               	rlf	___fltol@f1+2,f
  9398  1D0C  0DE2               	rlf	___fltol@f1+3,f
  9399  1D0D  0BE3               	decfsz	??___fltol,f
  9400  1D0E  2D08               	goto	u4955
  9401  1D0F  3001               	movlw	1
  9402  1D10  02E9               	subwf	___fltol@exp1,f
  9403  1D11                     l527:
  9404  1D11  0869               	movf	___fltol@exp1,w
  9405  1D12  1D03               	btfss	3,2
  9406  1D13  2D15               	goto	u4961
  9407  1D14  2D16               	goto	u4960
  9408  1D15                     u4961:
  9409  1D15  2D06               	goto	l3050
  9410  1D16                     u4960:
  9411  1D16                     l3052:
  9412  1D16  0868               	movf	___fltol@sign1,w
  9413  1D17  1903               	btfsc	3,2
  9414  1D18  2D1A               	goto	u4971
  9415  1D19  2D1B               	goto	u4970
  9416  1D1A                     u4971:
  9417  1D1A  2D26               	goto	l530
  9418  1D1B                     u4970:
  9419  1D1B                     l3054:
  9420  1D1B  09DF               	comf	___fltol@f1,f
  9421  1D1C  09E0               	comf	___fltol@f1+1,f
  9422  1D1D  09E1               	comf	___fltol@f1+2,f
  9423  1D1E  09E2               	comf	___fltol@f1+3,f
  9424  1D1F  0ADF               	incf	___fltol@f1,f
  9425  1D20  1903               	skipnz
  9426  1D21  0AE0               	incf	___fltol@f1+1,f
  9427  1D22  1903               	skipnz
  9428  1D23  0AE1               	incf	___fltol@f1+2,f
  9429  1D24  1903               	skipnz
  9430  1D25  0AE2               	incf	___fltol@f1+3,f
  9431  1D26                     l530:
  9432  1D26                     l520:
  9433  1D26  0008               	return
  9434  1D27                     __end_of___fltol:
  9435                           
  9436                           	psect	text29
  9437  1ADB                     __ptext29:	
  9438 ;; *************** function ___flsub *****************
  9439 ;; Defined at:
  9440 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  9441 ;; Parameters:    Size  Location     Type
  9442 ;;  a               4    4[BANK1 ] long 
  9443 ;;  b               4    8[BANK1 ] long 
  9444 ;; Auto vars:     Size  Location     Type
  9445 ;;		None
  9446 ;; Return value:  Size  Location     Type
  9447 ;;                  4    4[BANK1 ] long 
  9448 ;; Registers used:
  9449 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9450 ;; Tracked objects:
  9451 ;;		On entry : 0/0
  9452 ;;		On exit  : 0/0
  9453 ;;		Unchanged: 0/0
  9454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9455 ;;      Params:         0       0       8       0       0
  9456 ;;      Locals:         0       0       0       0       0
  9457 ;;      Temps:          0       0       0       0       0
  9458 ;;      Totals:         0       0       8       0       0
  9459 ;;Total ram usage:        8 bytes
  9460 ;; Hardware stack levels used:    1
  9461 ;; Hardware stack levels required when called:    1
  9462 ;; This function calls:
  9463 ;;		___fladd
  9464 ;; This function is called by:
  9465 ;;		_sprintf
  9466 ;; This function uses a non-reentrant model
  9467 ;;
  9468                           
  9469                           
  9470                           ;psect for function ___flsub
  9471  1ADB                     ___flsub:
  9472  1ADB                     l3076:	
  9473                           ;incstack = 0
  9474                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9475                           
  9476  1ADB  3080               	movlw	128
  9477  1ADC  1683               	bsf	3,5	;RP0=1, select bank1
  9478  1ADD  1303               	bcf	3,6	;RP1=0, select bank1
  9479  1ADE  06A7               	xorwf	(___flsub@a+3)^(0+128),f
  9480  1ADF                     l3078:
  9481  1ADF  082B               	movf	(___flsub@b+3)^(0+128),w
  9482  1AE0  1283               	bcf	3,5	;RP0=0, select bank0
  9483  1AE1  1303               	bcf	3,6	;RP1=0, select bank0
  9484  1AE2  00E3               	movwf	___fladd@b+3
  9485  1AE3  1683               	bsf	3,5	;RP0=1, select bank1
  9486  1AE4  1303               	bcf	3,6	;RP1=0, select bank1
  9487  1AE5  082A               	movf	(___flsub@b+2)^(0+128),w
  9488  1AE6  1283               	bcf	3,5	;RP0=0, select bank0
  9489  1AE7  1303               	bcf	3,6	;RP1=0, select bank0
  9490  1AE8  00E2               	movwf	___fladd@b+2
  9491  1AE9  1683               	bsf	3,5	;RP0=1, select bank1
  9492  1AEA  1303               	bcf	3,6	;RP1=0, select bank1
  9493  1AEB  0829               	movf	(___flsub@b+1)^(0+128),w
  9494  1AEC  1283               	bcf	3,5	;RP0=0, select bank0
  9495  1AED  1303               	bcf	3,6	;RP1=0, select bank0
  9496  1AEE  00E1               	movwf	___fladd@b+1
  9497  1AEF  1683               	bsf	3,5	;RP0=1, select bank1
  9498  1AF0  1303               	bcf	3,6	;RP1=0, select bank1
  9499  1AF1  0828               	movf	___flsub@b^(0+128),w
  9500  1AF2  1283               	bcf	3,5	;RP0=0, select bank0
  9501  1AF3  1303               	bcf	3,6	;RP1=0, select bank0
  9502  1AF4  00E0               	movwf	___fladd@b
  9503  1AF5  1683               	bsf	3,5	;RP0=1, select bank1
  9504  1AF6  1303               	bcf	3,6	;RP1=0, select bank1
  9505  1AF7  0827               	movf	(___flsub@a+3)^(0+128),w
  9506  1AF8  1283               	bcf	3,5	;RP0=0, select bank0
  9507  1AF9  1303               	bcf	3,6	;RP1=0, select bank0
  9508  1AFA  00E7               	movwf	___fladd@a+3
  9509  1AFB  1683               	bsf	3,5	;RP0=1, select bank1
  9510  1AFC  1303               	bcf	3,6	;RP1=0, select bank1
  9511  1AFD  0826               	movf	(___flsub@a+2)^(0+128),w
  9512  1AFE  1283               	bcf	3,5	;RP0=0, select bank0
  9513  1AFF  1303               	bcf	3,6	;RP1=0, select bank0
  9514  1B00  00E6               	movwf	___fladd@a+2
  9515  1B01  1683               	bsf	3,5	;RP0=1, select bank1
  9516  1B02  1303               	bcf	3,6	;RP1=0, select bank1
  9517  1B03  0825               	movf	(___flsub@a+1)^(0+128),w
  9518  1B04  1283               	bcf	3,5	;RP0=0, select bank0
  9519  1B05  1303               	bcf	3,6	;RP1=0, select bank0
  9520  1B06  00E5               	movwf	___fladd@a+1
  9521  1B07  1683               	bsf	3,5	;RP0=1, select bank1
  9522  1B08  1303               	bcf	3,6	;RP1=0, select bank1
  9523  1B09  0824               	movf	___flsub@a^(0+128),w
  9524  1B0A  1283               	bcf	3,5	;RP0=0, select bank0
  9525  1B0B  1303               	bcf	3,6	;RP1=0, select bank0
  9526  1B0C  00E4               	movwf	___fladd@a
  9527  1B0D  160A  118A  24C0  160A  158A  	fcall	___fladd
  9528  1B12  1283               	bcf	3,5	;RP0=0, select bank0
  9529  1B13  1303               	bcf	3,6	;RP1=0, select bank0
  9530  1B14  0863               	movf	?___fladd+3,w
  9531  1B15  1683               	bsf	3,5	;RP0=1, select bank1
  9532  1B16  1303               	bcf	3,6	;RP1=0, select bank1
  9533  1B17  00A7               	movwf	(?___flsub+3)^(0+128)
  9534  1B18  1283               	bcf	3,5	;RP0=0, select bank0
  9535  1B19  1303               	bcf	3,6	;RP1=0, select bank0
  9536  1B1A  0862               	movf	?___fladd+2,w
  9537  1B1B  1683               	bsf	3,5	;RP0=1, select bank1
  9538  1B1C  1303               	bcf	3,6	;RP1=0, select bank1
  9539  1B1D  00A6               	movwf	(?___flsub+2)^(0+128)
  9540  1B1E  1283               	bcf	3,5	;RP0=0, select bank0
  9541  1B1F  1303               	bcf	3,6	;RP1=0, select bank0
  9542  1B20  0861               	movf	?___fladd+1,w
  9543  1B21  1683               	bsf	3,5	;RP0=1, select bank1
  9544  1B22  1303               	bcf	3,6	;RP1=0, select bank1
  9545  1B23  00A5               	movwf	(?___flsub+1)^(0+128)
  9546  1B24  1283               	bcf	3,5	;RP0=0, select bank0
  9547  1B25  1303               	bcf	3,6	;RP1=0, select bank0
  9548  1B26  0860               	movf	?___fladd,w
  9549  1B27  1683               	bsf	3,5	;RP0=1, select bank1
  9550  1B28  1303               	bcf	3,6	;RP1=0, select bank1
  9551  1B29  00A4               	movwf	?___flsub^(0+128)
  9552  1B2A                     l690:
  9553  1B2A  0008               	return
  9554  1B2B                     __end_of___flsub:
  9555                           
  9556                           	psect	text30
  9557  14C0                     __ptext30:	
  9558 ;; *************** function ___fladd *****************
  9559 ;; Defined at:
  9560 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;  b               4   64[BANK0 ] long 
  9563 ;;  a               4   68[BANK0 ] long 
  9564 ;; Auto vars:     Size  Location     Type
  9565 ;;  grs             1    3[BANK1 ] unsigned char 
  9566 ;;  bexp            1    2[BANK1 ] unsigned char 
  9567 ;;  aexp            1    1[BANK1 ] unsigned char 
  9568 ;;  signs           1    0[BANK1 ] unsigned char 
  9569 ;; Return value:  Size  Location     Type
  9570 ;;                  4   64[BANK0 ] unsigned char 
  9571 ;; Registers used:
  9572 ;;		wreg, status,2, status,0, btemp+1
  9573 ;; Tracked objects:
  9574 ;;		On entry : 0/0
  9575 ;;		On exit  : 0/0
  9576 ;;		Unchanged: 0/0
  9577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9578 ;;      Params:         0       8       0       0       0
  9579 ;;      Locals:         0       0       4       0       0
  9580 ;;      Temps:          0       8       0       0       0
  9581 ;;      Totals:         0      16       4       0       0
  9582 ;;Total ram usage:       20 bytes
  9583 ;; Hardware stack levels used:    1
  9584 ;; This function calls:
  9585 ;;		Nothing
  9586 ;; This function is called by:
  9587 ;;		_sprintf
  9588 ;;		___flsub
  9589 ;; This function uses a non-reentrant model
  9590 ;;
  9591                           
  9592                           
  9593                           ;psect for function ___fladd
  9594  14C0                     ___fladd:
  9595  14C0                     l2418:	
  9596                           ;incstack = 0
  9597                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  9598                           
  9599  14C0  1283               	bcf	3,5	;RP0=0, select bank0
  9600  14C1  1303               	bcf	3,6	;RP1=0, select bank0
  9601  14C2  0863               	movf	___fladd@b+3,w
  9602  14C3  3980               	andlw	128
  9603  14C4  00E8               	movwf	??___fladd
  9604  14C5  0868               	movf	??___fladd,w
  9605  14C6  1683               	bsf	3,5	;RP0=1, select bank1
  9606  14C7  1303               	bcf	3,6	;RP1=0, select bank1
  9607  14C8  00A0               	movwf	___fladd@signs^(0+128)
  9608  14C9                     l2420:
  9609  14C9  1283               	bcf	3,5	;RP0=0, select bank0
  9610  14CA  1303               	bcf	3,6	;RP1=0, select bank0
  9611  14CB  0863               	movf	___fladd@b+3,w
  9612  14CC  00E8               	movwf	??___fladd
  9613  14CD  0768               	addwf	??___fladd,w
  9614  14CE  00E9               	movwf	??___fladd+1
  9615  14CF  0869               	movf	??___fladd+1,w
  9616  14D0  1683               	bsf	3,5	;RP0=1, select bank1
  9617  14D1  1303               	bcf	3,6	;RP1=0, select bank1
  9618  14D2  00A2               	movwf	___fladd@bexp^(0+128)
  9619  14D3                     l2422:
  9620  14D3  1283               	bcf	3,5	;RP0=0, select bank0
  9621  14D4  1303               	bcf	3,6	;RP1=0, select bank0
  9622  14D5  1FE2               	btfss	___fladd@b+2,7
  9623  14D6  2CD8               	goto	u3301
  9624  14D7  2CD9               	goto	u3300
  9625  14D8                     u3301:
  9626  14D8  2CDC               	goto	l2426
  9627  14D9                     u3300:
  9628  14D9                     l2424:
  9629  14D9  1683               	bsf	3,5	;RP0=1, select bank1
  9630  14DA  1303               	bcf	3,6	;RP1=0, select bank1
  9631  14DB  1422               	bsf	___fladd@bexp^(0+128),0
  9632  14DC                     l2426:
  9633  14DC  1683               	bsf	3,5	;RP0=1, select bank1
  9634  14DD  1303               	bcf	3,6	;RP1=0, select bank1
  9635  14DE  0822               	movf	___fladd@bexp^(0+128),w
  9636  14DF  1903               	btfsc	3,2
  9637  14E0  2CE2               	goto	u3311
  9638  14E1  2CE3               	goto	u3310
  9639  14E2                     u3311:
  9640  14E2  2CF6               	goto	l2436
  9641  14E3                     u3310:
  9642  14E3                     l2428:
  9643  14E3  0A22               	incf	___fladd@bexp^(0+128),w
  9644  14E4  1D03               	btfss	3,2
  9645  14E5  2CE7               	goto	u3321
  9646  14E6  2CE8               	goto	u3320
  9647  14E7                     u3321:
  9648  14E7  2CF2               	goto	l2432
  9649  14E8                     u3320:
  9650  14E8                     l2430:
  9651  14E8  3000               	movlw	0
  9652  14E9  1283               	bcf	3,5	;RP0=0, select bank0
  9653  14EA  1303               	bcf	3,6	;RP1=0, select bank0
  9654  14EB  00E3               	movwf	___fladd@b+3
  9655  14EC  3000               	movlw	0
  9656  14ED  00E2               	movwf	___fladd@b+2
  9657  14EE  3000               	movlw	0
  9658  14EF  00E1               	movwf	___fladd@b+1
  9659  14F0  3000               	movlw	0
  9660  14F1  00E0               	movwf	___fladd@b
  9661  14F2                     l2432:
  9662  14F2  1283               	bcf	3,5	;RP0=0, select bank0
  9663  14F3  17E2               	bsf	___fladd@b+2,7
  9664  14F4                     l2434:
  9665  14F4  01E3               	clrf	___fladd@b+3
  9666  14F5  2D00               	goto	l2438
  9667  14F6                     l2436:
  9668  14F6  3000               	movlw	0
  9669  14F7  1283               	bcf	3,5	;RP0=0, select bank0
  9670  14F8  1303               	bcf	3,6	;RP1=0, select bank0
  9671  14F9  00E3               	movwf	___fladd@b+3
  9672  14FA  3000               	movlw	0
  9673  14FB  00E2               	movwf	___fladd@b+2
  9674  14FC  3000               	movlw	0
  9675  14FD  00E1               	movwf	___fladd@b+1
  9676  14FE  3000               	movlw	0
  9677  14FF  00E0               	movwf	___fladd@b
  9678  1500                     l2438:
  9679  1500  0867               	movf	___fladd@a+3,w
  9680  1501  3980               	andlw	128
  9681  1502  00E8               	movwf	??___fladd
  9682  1503  0868               	movf	??___fladd,w
  9683  1504  1683               	bsf	3,5	;RP0=1, select bank1
  9684  1505  1303               	bcf	3,6	;RP1=0, select bank1
  9685  1506  00A1               	movwf	___fladd@aexp^(0+128)
  9686  1507                     l2440:
  9687  1507  0821               	movf	___fladd@aexp^(0+128),w
  9688  1508  0620               	xorwf	___fladd@signs^(0+128),w
  9689  1509  1903               	skipnz
  9690  150A  2D0C               	goto	u3331
  9691  150B  2D0D               	goto	u3330
  9692  150C                     u3331:
  9693  150C  2D0E               	goto	l2444
  9694  150D                     u3330:
  9695  150D                     l2442:
  9696  150D  1720               	bsf	___fladd@signs^(0+128),6
  9697  150E                     l2444:
  9698  150E  1283               	bcf	3,5	;RP0=0, select bank0
  9699  150F  1303               	bcf	3,6	;RP1=0, select bank0
  9700  1510  0867               	movf	___fladd@a+3,w
  9701  1511  00E8               	movwf	??___fladd
  9702  1512  0768               	addwf	??___fladd,w
  9703  1513  00E9               	movwf	??___fladd+1
  9704  1514  0869               	movf	??___fladd+1,w
  9705  1515  1683               	bsf	3,5	;RP0=1, select bank1
  9706  1516  1303               	bcf	3,6	;RP1=0, select bank1
  9707  1517  00A1               	movwf	___fladd@aexp^(0+128)
  9708  1518                     l2446:
  9709  1518  1283               	bcf	3,5	;RP0=0, select bank0
  9710  1519  1303               	bcf	3,6	;RP1=0, select bank0
  9711  151A  1FE6               	btfss	___fladd@a+2,7
  9712  151B  2D1D               	goto	u3341
  9713  151C  2D1E               	goto	u3340
  9714  151D                     u3341:
  9715  151D  2D21               	goto	l2450
  9716  151E                     u3340:
  9717  151E                     l2448:
  9718  151E  1683               	bsf	3,5	;RP0=1, select bank1
  9719  151F  1303               	bcf	3,6	;RP1=0, select bank1
  9720  1520  1421               	bsf	___fladd@aexp^(0+128),0
  9721  1521                     l2450:
  9722  1521  1683               	bsf	3,5	;RP0=1, select bank1
  9723  1522  1303               	bcf	3,6	;RP1=0, select bank1
  9724  1523  0821               	movf	___fladd@aexp^(0+128),w
  9725  1524  1903               	btfsc	3,2
  9726  1525  2D27               	goto	u3351
  9727  1526  2D28               	goto	u3350
  9728  1527                     u3351:
  9729  1527  2D3B               	goto	l2460
  9730  1528                     u3350:
  9731  1528                     l2452:
  9732  1528  0A21               	incf	___fladd@aexp^(0+128),w
  9733  1529  1D03               	btfss	3,2
  9734  152A  2D2C               	goto	u3361
  9735  152B  2D2D               	goto	u3360
  9736  152C                     u3361:
  9737  152C  2D37               	goto	l2456
  9738  152D                     u3360:
  9739  152D                     l2454:
  9740  152D  3000               	movlw	0
  9741  152E  1283               	bcf	3,5	;RP0=0, select bank0
  9742  152F  1303               	bcf	3,6	;RP1=0, select bank0
  9743  1530  00E7               	movwf	___fladd@a+3
  9744  1531  3000               	movlw	0
  9745  1532  00E6               	movwf	___fladd@a+2
  9746  1533  3000               	movlw	0
  9747  1534  00E5               	movwf	___fladd@a+1
  9748  1535  3000               	movlw	0
  9749  1536  00E4               	movwf	___fladd@a
  9750  1537                     l2456:
  9751  1537  1283               	bcf	3,5	;RP0=0, select bank0
  9752  1538  17E6               	bsf	___fladd@a+2,7
  9753  1539                     l2458:
  9754  1539  01E7               	clrf	___fladd@a+3
  9755  153A  2D45               	goto	l644
  9756  153B                     l2460:
  9757  153B  3000               	movlw	0
  9758  153C  1283               	bcf	3,5	;RP0=0, select bank0
  9759  153D  1303               	bcf	3,6	;RP1=0, select bank0
  9760  153E  00E7               	movwf	___fladd@a+3
  9761  153F  3000               	movlw	0
  9762  1540  00E6               	movwf	___fladd@a+2
  9763  1541  3000               	movlw	0
  9764  1542  00E5               	movwf	___fladd@a+1
  9765  1543  3000               	movlw	0
  9766  1544  00E4               	movwf	___fladd@a
  9767  1545                     l644:
  9768  1545  1683               	bsf	3,5	;RP0=1, select bank1
  9769  1546  1303               	bcf	3,6	;RP1=0, select bank1
  9770  1547  0822               	movf	___fladd@bexp^(0+128),w
  9771  1548  0221               	subwf	___fladd@aexp^(0+128),w
  9772  1549  1803               	skipnc
  9773  154A  2D4C               	goto	u3371
  9774  154B  2D4D               	goto	u3370
  9775  154C                     u3371:
  9776  154C  2DC3               	goto	l2496
  9777  154D                     u3370:
  9778  154D                     l2462:
  9779  154D  1F20               	btfss	___fladd@signs^(0+128),6
  9780  154E  2D50               	goto	u3381
  9781  154F  2D51               	goto	u3380
  9782  1550                     u3381:
  9783  1550  2D59               	goto	l2466
  9784  1551                     u3380:
  9785  1551                     l2464:
  9786  1551  3080               	movlw	128
  9787  1552  1283               	bcf	3,5	;RP0=0, select bank0
  9788  1553  1303               	bcf	3,6	;RP1=0, select bank0
  9789  1554  00E8               	movwf	??___fladd
  9790  1555  0868               	movf	??___fladd,w
  9791  1556  1683               	bsf	3,5	;RP0=1, select bank1
  9792  1557  1303               	bcf	3,6	;RP1=0, select bank1
  9793  1558  06A0               	xorwf	___fladd@signs^(0+128),f
  9794  1559                     l2466:
  9795  1559  0822               	movf	___fladd@bexp^(0+128),w
  9796  155A  1283               	bcf	3,5	;RP0=0, select bank0
  9797  155B  1303               	bcf	3,6	;RP1=0, select bank0
  9798  155C  00E8               	movwf	??___fladd
  9799  155D  0868               	movf	??___fladd,w
  9800  155E  1683               	bsf	3,5	;RP0=1, select bank1
  9801  155F  1303               	bcf	3,6	;RP1=0, select bank1
  9802  1560  00A3               	movwf	___fladd@grs^(0+128)
  9803  1561                     l2468:
  9804  1561  0821               	movf	___fladd@aexp^(0+128),w
  9805  1562  1283               	bcf	3,5	;RP0=0, select bank0
  9806  1563  1303               	bcf	3,6	;RP1=0, select bank0
  9807  1564  00E8               	movwf	??___fladd
  9808  1565  0868               	movf	??___fladd,w
  9809  1566  1683               	bsf	3,5	;RP0=1, select bank1
  9810  1567  1303               	bcf	3,6	;RP1=0, select bank1
  9811  1568  00A2               	movwf	___fladd@bexp^(0+128)
  9812  1569                     l2470:
  9813  1569  0823               	movf	___fladd@grs^(0+128),w
  9814  156A  1283               	bcf	3,5	;RP0=0, select bank0
  9815  156B  1303               	bcf	3,6	;RP1=0, select bank0
  9816  156C  00E8               	movwf	??___fladd
  9817  156D  0868               	movf	??___fladd,w
  9818  156E  1683               	bsf	3,5	;RP0=1, select bank1
  9819  156F  1303               	bcf	3,6	;RP1=0, select bank1
  9820  1570  00A1               	movwf	___fladd@aexp^(0+128)
  9821  1571                     l2472:
  9822  1571  1283               	bcf	3,5	;RP0=0, select bank0
  9823  1572  1303               	bcf	3,6	;RP1=0, select bank0
  9824  1573  0860               	movf	___fladd@b,w
  9825  1574  00E8               	movwf	??___fladd
  9826  1575  0868               	movf	??___fladd,w
  9827  1576  1683               	bsf	3,5	;RP0=1, select bank1
  9828  1577  1303               	bcf	3,6	;RP1=0, select bank1
  9829  1578  00A3               	movwf	___fladd@grs^(0+128)
  9830  1579                     l2474:
  9831  1579  1283               	bcf	3,5	;RP0=0, select bank0
  9832  157A  1303               	bcf	3,6	;RP1=0, select bank0
  9833  157B  0864               	movf	___fladd@a,w
  9834  157C  00E8               	movwf	??___fladd
  9835  157D  0868               	movf	??___fladd,w
  9836  157E  00E0               	movwf	___fladd@b
  9837  157F                     l2476:
  9838  157F  1683               	bsf	3,5	;RP0=1, select bank1
  9839  1580  1303               	bcf	3,6	;RP1=0, select bank1
  9840  1581  0823               	movf	___fladd@grs^(0+128),w
  9841  1582  1283               	bcf	3,5	;RP0=0, select bank0
  9842  1583  1303               	bcf	3,6	;RP1=0, select bank0
  9843  1584  00E8               	movwf	??___fladd
  9844  1585  0868               	movf	??___fladd,w
  9845  1586  00E4               	movwf	___fladd@a
  9846  1587                     l2478:
  9847  1587  0861               	movf	___fladd@b+1,w
  9848  1588  00E8               	movwf	??___fladd
  9849  1589  0868               	movf	??___fladd,w
  9850  158A  1683               	bsf	3,5	;RP0=1, select bank1
  9851  158B  1303               	bcf	3,6	;RP1=0, select bank1
  9852  158C  00A3               	movwf	___fladd@grs^(0+128)
  9853  158D                     l2480:
  9854  158D  1283               	bcf	3,5	;RP0=0, select bank0
  9855  158E  1303               	bcf	3,6	;RP1=0, select bank0
  9856  158F  0865               	movf	___fladd@a+1,w
  9857  1590  00E8               	movwf	??___fladd
  9858  1591  0868               	movf	??___fladd,w
  9859  1592  00E1               	movwf	___fladd@b+1
  9860  1593                     l2482:
  9861  1593  1683               	bsf	3,5	;RP0=1, select bank1
  9862  1594  1303               	bcf	3,6	;RP1=0, select bank1
  9863  1595  0823               	movf	___fladd@grs^(0+128),w
  9864  1596  1283               	bcf	3,5	;RP0=0, select bank0
  9865  1597  1303               	bcf	3,6	;RP1=0, select bank0
  9866  1598  00E8               	movwf	??___fladd
  9867  1599  0868               	movf	??___fladd,w
  9868  159A  00E5               	movwf	___fladd@a+1
  9869  159B                     l2484:
  9870  159B  0862               	movf	___fladd@b+2,w
  9871  159C  00E8               	movwf	??___fladd
  9872  159D  0868               	movf	??___fladd,w
  9873  159E  1683               	bsf	3,5	;RP0=1, select bank1
  9874  159F  1303               	bcf	3,6	;RP1=0, select bank1
  9875  15A0  00A3               	movwf	___fladd@grs^(0+128)
  9876  15A1                     l2486:
  9877  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  9878  15A2  1303               	bcf	3,6	;RP1=0, select bank0
  9879  15A3  0866               	movf	___fladd@a+2,w
  9880  15A4  00E8               	movwf	??___fladd
  9881  15A5  0868               	movf	??___fladd,w
  9882  15A6  00E2               	movwf	___fladd@b+2
  9883  15A7                     l2488:
  9884  15A7  1683               	bsf	3,5	;RP0=1, select bank1
  9885  15A8  1303               	bcf	3,6	;RP1=0, select bank1
  9886  15A9  0823               	movf	___fladd@grs^(0+128),w
  9887  15AA  1283               	bcf	3,5	;RP0=0, select bank0
  9888  15AB  1303               	bcf	3,6	;RP1=0, select bank0
  9889  15AC  00E8               	movwf	??___fladd
  9890  15AD  0868               	movf	??___fladd,w
  9891  15AE  00E6               	movwf	___fladd@a+2
  9892  15AF                     l2490:
  9893  15AF  0863               	movf	___fladd@b+3,w
  9894  15B0  00E8               	movwf	??___fladd
  9895  15B1  0868               	movf	??___fladd,w
  9896  15B2  1683               	bsf	3,5	;RP0=1, select bank1
  9897  15B3  1303               	bcf	3,6	;RP1=0, select bank1
  9898  15B4  00A3               	movwf	___fladd@grs^(0+128)
  9899  15B5                     l2492:
  9900  15B5  1283               	bcf	3,5	;RP0=0, select bank0
  9901  15B6  1303               	bcf	3,6	;RP1=0, select bank0
  9902  15B7  0867               	movf	___fladd@a+3,w
  9903  15B8  00E8               	movwf	??___fladd
  9904  15B9  0868               	movf	??___fladd,w
  9905  15BA  00E3               	movwf	___fladd@b+3
  9906  15BB                     l2494:
  9907  15BB  1683               	bsf	3,5	;RP0=1, select bank1
  9908  15BC  1303               	bcf	3,6	;RP1=0, select bank1
  9909  15BD  0823               	movf	___fladd@grs^(0+128),w
  9910  15BE  1283               	bcf	3,5	;RP0=0, select bank0
  9911  15BF  1303               	bcf	3,6	;RP1=0, select bank0
  9912  15C0  00E8               	movwf	??___fladd
  9913  15C1  0868               	movf	??___fladd,w
  9914  15C2  00E7               	movwf	___fladd@a+3
  9915  15C3                     l2496:
  9916  15C3  1683               	bsf	3,5	;RP0=1, select bank1
  9917  15C4  1303               	bcf	3,6	;RP1=0, select bank1
  9918  15C5  01A3               	clrf	___fladd@grs^(0+128)
  9919  15C6                     l2498:
  9920  15C6  0821               	movf	___fladd@aexp^(0+128),w
  9921  15C7  1283               	bcf	3,5	;RP0=0, select bank0
  9922  15C8  1303               	bcf	3,6	;RP1=0, select bank0
  9923  15C9  00E8               	movwf	??___fladd
  9924  15CA  01E9               	clrf	??___fladd+1
  9925  15CB  0869               	movf	??___fladd+1,w
  9926  15CC  00EB               	movwf	??___fladd+3
  9927  15CD  1683               	bsf	3,5	;RP0=1, select bank1
  9928  15CE  1303               	bcf	3,6	;RP1=0, select bank1
  9929  15CF  0822               	movf	___fladd@bexp^(0+128),w
  9930  15D0  1283               	bcf	3,5	;RP0=0, select bank0
  9931  15D1  1303               	bcf	3,6	;RP1=0, select bank0
  9932  15D2  0268               	subwf	??___fladd,w
  9933  15D3  00EA               	movwf	??___fladd+2
  9934  15D4  1C03               	skipc
  9935  15D5  03EB               	decf	??___fladd+3,f
  9936  15D6  086B               	movf	??___fladd+3,w
  9937  15D7  3A80               	xorlw	128
  9938  15D8  00FF               	movwf	btemp+1
  9939  15D9  3080               	movlw	128
  9940  15DA  027F               	subwf	btemp+1,w
  9941  15DB  1D03               	skipz
  9942  15DC  2DDF               	goto	u3395
  9943  15DD  301A               	movlw	26
  9944  15DE  026A               	subwf	??___fladd+2,w
  9945  15DF                     u3395:
  9946  15DF  1C03               	skipc
  9947  15E0  2DE2               	goto	u3391
  9948  15E1  2DE3               	goto	u3390
  9949  15E2                     u3391:
  9950  15E2  2E35               	goto	l2514
  9951  15E3                     u3390:
  9952  15E3                     l2500:
  9953  15E3  1283               	bcf	3,5	;RP0=0, select bank0
  9954  15E4  1303               	bcf	3,6	;RP1=0, select bank0
  9955  15E5  0863               	movf	___fladd@b+3,w
  9956  15E6  0462               	iorwf	___fladd@b+2,w
  9957  15E7  0461               	iorwf	___fladd@b+1,w
  9958  15E8  0460               	iorwf	___fladd@b,w
  9959  15E9  1D03               	skipz
  9960  15EA  2DEC               	goto	u3401
  9961  15EB  2DEE               	goto	u3400
  9962  15EC                     u3401:
  9963  15EC  3001               	movlw	1
  9964  15ED  2DEF               	goto	u3410
  9965  15EE                     u3400:
  9966  15EE  3000               	movlw	0
  9967  15EF                     u3410:
  9968  15EF  00E8               	movwf	??___fladd
  9969  15F0  0868               	movf	??___fladd,w
  9970  15F1  1683               	bsf	3,5	;RP0=1, select bank1
  9971  15F2  1303               	bcf	3,6	;RP1=0, select bank1
  9972  15F3  00A3               	movwf	___fladd@grs^(0+128)
  9973  15F4  3000               	movlw	0
  9974  15F5  1283               	bcf	3,5	;RP0=0, select bank0
  9975  15F6  1303               	bcf	3,6	;RP1=0, select bank0
  9976  15F7  00E3               	movwf	___fladd@b+3
  9977  15F8  3000               	movlw	0
  9978  15F9  00E2               	movwf	___fladd@b+2
  9979  15FA  3000               	movlw	0
  9980  15FB  00E1               	movwf	___fladd@b+1
  9981  15FC  3000               	movlw	0
  9982  15FD  00E0               	movwf	___fladd@b
  9983  15FE  1683               	bsf	3,5	;RP0=1, select bank1
  9984  15FF  1303               	bcf	3,6	;RP1=0, select bank1
  9985  1600  0821               	movf	___fladd@aexp^(0+128),w
  9986  1601  1283               	bcf	3,5	;RP0=0, select bank0
  9987  1602  1303               	bcf	3,6	;RP1=0, select bank0
  9988  1603  00E8               	movwf	??___fladd
  9989  1604  0868               	movf	??___fladd,w
  9990  1605  1683               	bsf	3,5	;RP0=1, select bank1
  9991  1606  1303               	bcf	3,6	;RP1=0, select bank1
  9992  1607  00A2               	movwf	___fladd@bexp^(0+128)
  9993  1608  2E3D               	goto	l648
  9994  1609                     l650:
  9995  1609  1C23               	btfss	___fladd@grs^(0+128),0
  9996  160A  2E0C               	goto	u3421
  9997  160B  2E0D               	goto	u3420
  9998  160C                     u3421:
  9999  160C  2E1A               	goto	l2504
 10000  160D                     u3420:
 10001  160D                     l2502:
 10002  160D  0823               	movf	___fladd@grs^(0+128),w
 10003  160E  1283               	bcf	3,5	;RP0=0, select bank0
 10004  160F  1303               	bcf	3,6	;RP1=0, select bank0
 10005  1610  00E8               	movwf	??___fladd
 10006  1611  1003               	clrc
 10007  1612  0C68               	rrf	??___fladd,w
 10008  1613  3801               	iorlw	1
 10009  1614  00E9               	movwf	??___fladd+1
 10010  1615  0869               	movf	??___fladd+1,w
 10011  1616  1683               	bsf	3,5	;RP0=1, select bank1
 10012  1617  1303               	bcf	3,6	;RP1=0, select bank1
 10013  1618  00A3               	movwf	___fladd@grs^(0+128)
 10014  1619  2E1C               	goto	l2506
 10015  161A                     l2504:
 10016  161A  1003               	clrc
 10017  161B  0CA3               	rrf	___fladd@grs^(0+128),f
 10018  161C                     l2506:
 10019  161C  1283               	bcf	3,5	;RP0=0, select bank0
 10020  161D  1303               	bcf	3,6	;RP1=0, select bank0
 10021  161E  1C60               	btfss	___fladd@b,0
 10022  161F  2E21               	goto	u3431
 10023  1620  2E22               	goto	u3430
 10024  1621                     u3431:
 10025  1621  2E25               	goto	l2510
 10026  1622                     u3430:
 10027  1622                     l2508:
 10028  1622  1683               	bsf	3,5	;RP0=1, select bank1
 10029  1623  1303               	bcf	3,6	;RP1=0, select bank1
 10030  1624  17A3               	bsf	___fladd@grs^(0+128),7
 10031  1625                     l2510:
 10032  1625  3001               	movlw	1
 10033  1626  1283               	bcf	3,5	;RP0=0, select bank0
 10034  1627  00E8               	movwf	??___fladd
 10035  1628                     u3445:
 10036  1628  0D63               	rlf	___fladd@b+3,w
 10037  1629  0CE3               	rrf	___fladd@b+3,f
 10038  162A  0CE2               	rrf	___fladd@b+2,f
 10039  162B  0CE1               	rrf	___fladd@b+1,f
 10040  162C  0CE0               	rrf	___fladd@b,f
 10041  162D  0BE8               	decfsz	??___fladd& (0+127),f
 10042  162E  2E28               	goto	u3445
 10043  162F                     l2512:
 10044  162F  3001               	movlw	1
 10045  1630  00E8               	movwf	??___fladd
 10046  1631  0868               	movf	??___fladd,w
 10047  1632  1683               	bsf	3,5	;RP0=1, select bank1
 10048  1633  1303               	bcf	3,6	;RP1=0, select bank1
 10049  1634  07A2               	addwf	___fladd@bexp^(0+128),f
 10050  1635                     l2514:
 10051  1635  1683               	bsf	3,5	;RP0=1, select bank1
 10052  1636  1303               	bcf	3,6	;RP1=0, select bank1
 10053  1637  0821               	movf	___fladd@aexp^(0+128),w
 10054  1638  0222               	subwf	___fladd@bexp^(0+128),w
 10055  1639  1C03               	skipc
 10056  163A  2E3C               	goto	u3451
 10057  163B  2E3D               	goto	u3450
 10058  163C                     u3451:
 10059  163C  2E09               	goto	l650
 10060  163D                     u3450:
 10061  163D                     l648:
 10062  163D  1B20               	btfsc	___fladd@signs^(0+128),6
 10063  163E  2E40               	goto	u3461
 10064  163F  2E41               	goto	u3460
 10065  1640                     u3461:
 10066  1640  2E9D               	goto	l2540
 10067  1641                     u3460:
 10068  1641                     l2516:
 10069  1641  0822               	movf	___fladd@bexp^(0+128),w
 10070  1642  1D03               	btfss	3,2
 10071  1643  2E45               	goto	u3471
 10072  1644  2E46               	goto	u3470
 10073  1645                     u3471:
 10074  1645  2E51               	goto	l2522
 10075  1646                     u3470:
 10076  1646                     l2518:
 10077  1646  3000               	movlw	0
 10078  1647  1283               	bcf	3,5	;RP0=0, select bank0
 10079  1648  1303               	bcf	3,6	;RP1=0, select bank0
 10080  1649  00E3               	movwf	?___fladd+3
 10081  164A  3000               	movlw	0
 10082  164B  00E2               	movwf	?___fladd+2
 10083  164C  3000               	movlw	0
 10084  164D  00E1               	movwf	?___fladd+1
 10085  164E  3000               	movlw	0
 10086  164F  00E0               	movwf	?___fladd
 10087  1650  2FFF               	goto	l657
 10088  1651                     l2522:
 10089  1651  1283               	bcf	3,5	;RP0=0, select bank0
 10090  1652  1303               	bcf	3,6	;RP1=0, select bank0
 10091  1653  0864               	movf	___fladd@a,w
 10092  1654  07E0               	addwf	___fladd@b,f
 10093  1655  0865               	movf	___fladd@a+1,w
 10094  1656  1103               	clrz
 10095  1657  1803               	skipnc
 10096  1658  3E01               	addlw	1
 10097  1659  1903               	skipnz
 10098  165A  2E5C               	goto	u3481
 10099  165B  07E1               	addwf	___fladd@b+1,f
 10100  165C                     u3481:
 10101  165C  0866               	movf	___fladd@a+2,w
 10102  165D  1103               	clrz
 10103  165E  1803               	skipnc
 10104  165F  3E01               	addlw	1
 10105  1660  1903               	skipnz
 10106  1661  2E63               	goto	u3482
 10107  1662  07E2               	addwf	___fladd@b+2,f
 10108  1663                     u3482:
 10109  1663  0867               	movf	___fladd@a+3,w
 10110  1664  1103               	clrz
 10111  1665  1803               	skipnc
 10112  1666  3E01               	addlw	1
 10113  1667  1903               	skipnz
 10114  1668  2E6A               	goto	u3483
 10115  1669  07E3               	addwf	___fladd@b+3,f
 10116  166A                     u3483:
 10117  166A                     l2524:
 10118  166A  1C63               	btfss	___fladd@b+3,0
 10119  166B  2E6D               	goto	u3491
 10120  166C  2E6E               	goto	u3490
 10121  166D                     u3491:
 10122  166D  2F63               	goto	l2574
 10123  166E                     u3490:
 10124  166E                     l2526:
 10125  166E  1683               	bsf	3,5	;RP0=1, select bank1
 10126  166F  1303               	bcf	3,6	;RP1=0, select bank1
 10127  1670  1C23               	btfss	___fladd@grs^(0+128),0
 10128  1671  2E73               	goto	u3501
 10129  1672  2E74               	goto	u3500
 10130  1673                     u3501:
 10131  1673  2E81               	goto	l2530
 10132  1674                     u3500:
 10133  1674                     l2528:
 10134  1674  0823               	movf	___fladd@grs^(0+128),w
 10135  1675  1283               	bcf	3,5	;RP0=0, select bank0
 10136  1676  1303               	bcf	3,6	;RP1=0, select bank0
 10137  1677  00E8               	movwf	??___fladd
 10138  1678  1003               	clrc
 10139  1679  0C68               	rrf	??___fladd,w
 10140  167A  3801               	iorlw	1
 10141  167B  00E9               	movwf	??___fladd+1
 10142  167C  0869               	movf	??___fladd+1,w
 10143  167D  1683               	bsf	3,5	;RP0=1, select bank1
 10144  167E  1303               	bcf	3,6	;RP1=0, select bank1
 10145  167F  00A3               	movwf	___fladd@grs^(0+128)
 10146  1680  2E83               	goto	l2532
 10147  1681                     l2530:
 10148  1681  1003               	clrc
 10149  1682  0CA3               	rrf	___fladd@grs^(0+128),f
 10150  1683                     l2532:
 10151  1683  1283               	bcf	3,5	;RP0=0, select bank0
 10152  1684  1303               	bcf	3,6	;RP1=0, select bank0
 10153  1685  1C60               	btfss	___fladd@b,0
 10154  1686  2E88               	goto	u3511
 10155  1687  2E89               	goto	u3510
 10156  1688                     u3511:
 10157  1688  2E8C               	goto	l2536
 10158  1689                     u3510:
 10159  1689                     l2534:
 10160  1689  1683               	bsf	3,5	;RP0=1, select bank1
 10161  168A  1303               	bcf	3,6	;RP1=0, select bank1
 10162  168B  17A3               	bsf	___fladd@grs^(0+128),7
 10163  168C                     l2536:
 10164  168C  3001               	movlw	1
 10165  168D  1283               	bcf	3,5	;RP0=0, select bank0
 10166  168E  00E8               	movwf	??___fladd
 10167  168F                     u3525:
 10168  168F  0D63               	rlf	___fladd@b+3,w
 10169  1690  0CE3               	rrf	___fladd@b+3,f
 10170  1691  0CE2               	rrf	___fladd@b+2,f
 10171  1692  0CE1               	rrf	___fladd@b+1,f
 10172  1693  0CE0               	rrf	___fladd@b,f
 10173  1694  0BE8               	decfsz	??___fladd& (0+127),f
 10174  1695  2E8F               	goto	u3525
 10175  1696                     l2538:
 10176  1696  3001               	movlw	1
 10177  1697  00E8               	movwf	??___fladd
 10178  1698  0868               	movf	??___fladd,w
 10179  1699  1683               	bsf	3,5	;RP0=1, select bank1
 10180  169A  1303               	bcf	3,6	;RP1=0, select bank1
 10181  169B  07A2               	addwf	___fladd@bexp^(0+128),f
 10182  169C  2F63               	goto	l2574
 10183  169D                     l2540:
 10184  169D  1283               	bcf	3,5	;RP0=0, select bank0
 10185  169E  1303               	bcf	3,6	;RP1=0, select bank0
 10186  169F  0863               	movf	___fladd@b+3,w
 10187  16A0  3A80               	xorlw	128
 10188  16A1  00FF               	movwf	btemp+1
 10189  16A2  0867               	movf	___fladd@a+3,w
 10190  16A3  3A80               	xorlw	128
 10191  16A4  027F               	subwf	btemp+1,w
 10192  16A5  1D03               	skipz
 10193  16A6  2EB1               	goto	u3533
 10194  16A7  0866               	movf	___fladd@a+2,w
 10195  16A8  0262               	subwf	___fladd@b+2,w
 10196  16A9  1D03               	skipz
 10197  16AA  2EB1               	goto	u3533
 10198  16AB  0865               	movf	___fladd@a+1,w
 10199  16AC  0261               	subwf	___fladd@b+1,w
 10200  16AD  1D03               	skipz
 10201  16AE  2EB1               	goto	u3533
 10202  16AF  0864               	movf	___fladd@a,w
 10203  16B0  0260               	subwf	___fladd@b,w
 10204  16B1                     u3533:
 10205  16B1  1803               	skipnc
 10206  16B2  2EB4               	goto	u3531
 10207  16B3  2EB5               	goto	u3530
 10208  16B4                     u3531:
 10209  16B4  2F11               	goto	l2550
 10210  16B5                     u3530:
 10211  16B5                     l2542:
 10212  16B5  30FF               	movlw	255
 10213  16B6  00E8               	movwf	??___fladd
 10214  16B7  30FF               	movlw	255
 10215  16B8  00E9               	movwf	??___fladd+1
 10216  16B9  30FF               	movlw	255
 10217  16BA  00EA               	movwf	??___fladd+2
 10218  16BB  30FF               	movlw	255
 10219  16BC  00EB               	movwf	??___fladd+3
 10220  16BD  0864               	movf	___fladd@a,w
 10221  16BE  00EC               	movwf	??___fladd+4
 10222  16BF  0865               	movf	___fladd@a+1,w
 10223  16C0  00ED               	movwf	??___fladd+5
 10224  16C1  0866               	movf	___fladd@a+2,w
 10225  16C2  00EE               	movwf	??___fladd+6
 10226  16C3  0867               	movf	___fladd@a+3,w
 10227  16C4  00EF               	movwf	??___fladd+7
 10228  16C5  0860               	movf	___fladd@b,w
 10229  16C6  02EC               	subwf	??___fladd+4,f
 10230  16C7  0861               	movf	___fladd@b+1,w
 10231  16C8  1C03               	skipc
 10232  16C9  0F61               	incfsz	___fladd@b+1,w
 10233  16CA  2ECC               	goto	u3541
 10234  16CB  2ECD               	goto	u3542
 10235  16CC                     u3541:
 10236  16CC  02ED               	subwf	??___fladd+5,f
 10237  16CD                     u3542:
 10238  16CD  0862               	movf	___fladd@b+2,w
 10239  16CE  1C03               	skipc
 10240  16CF  0F62               	incfsz	___fladd@b+2,w
 10241  16D0  2ED2               	goto	u3543
 10242  16D1  2ED3               	goto	u3544
 10243  16D2                     u3543:
 10244  16D2  02EE               	subwf	??___fladd+6,f
 10245  16D3                     u3544:
 10246  16D3  0863               	movf	___fladd@b+3,w
 10247  16D4  1C03               	skipc
 10248  16D5  0F63               	incfsz	___fladd@b+3,w
 10249  16D6  2ED8               	goto	u3545
 10250  16D7  2ED9               	goto	u3546
 10251  16D8                     u3545:
 10252  16D8  02EF               	subwf	??___fladd+7,f
 10253  16D9                     u3546:
 10254  16D9  086C               	movf	??___fladd+4,w
 10255  16DA  07E8               	addwf	??___fladd,f
 10256  16DB  086D               	movf	??___fladd+5,w
 10257  16DC  1803               	skipnc
 10258  16DD  0F6D               	incfsz	??___fladd+5,w
 10259  16DE  2EE0               	goto	u3550
 10260  16DF  2EE1               	goto	u3551
 10261  16E0                     u3550:
 10262  16E0  07E9               	addwf	??___fladd+1,f
 10263  16E1                     u3551:
 10264  16E1  086E               	movf	??___fladd+6,w
 10265  16E2  1803               	skipnc
 10266  16E3  0F6E               	incfsz	??___fladd+6,w
 10267  16E4  2EE6               	goto	u3552
 10268  16E5  2EE7               	goto	u3553
 10269  16E6                     u3552:
 10270  16E6  07EA               	addwf	??___fladd+2,f
 10271  16E7                     u3553:
 10272  16E7  086F               	movf	??___fladd+7,w
 10273  16E8  1803               	skipnc
 10274  16E9  0A6F               	incf	??___fladd+7,w
 10275  16EA  07EB               	addwf	??___fladd+3,f
 10276  16EB  086B               	movf	??___fladd+3,w
 10277  16EC  00E3               	movwf	___fladd@b+3
 10278  16ED  086A               	movf	??___fladd+2,w
 10279  16EE  00E2               	movwf	___fladd@b+2
 10280  16EF  0869               	movf	??___fladd+1,w
 10281  16F0  00E1               	movwf	___fladd@b+1
 10282  16F1  0868               	movf	??___fladd,w
 10283  16F2  00E0               	movwf	___fladd@b
 10284  16F3                     l2544:
 10285  16F3  3080               	movlw	128
 10286  16F4  00E8               	movwf	??___fladd
 10287  16F5  0868               	movf	??___fladd,w
 10288  16F6  1683               	bsf	3,5	;RP0=1, select bank1
 10289  16F7  1303               	bcf	3,6	;RP1=0, select bank1
 10290  16F8  06A0               	xorwf	___fladd@signs^(0+128),f
 10291  16F9  09A3               	comf	___fladd@grs^(0+128),f
 10292  16FA  0AA3               	incf	___fladd@grs^(0+128),f
 10293  16FB                     l2546:
 10294  16FB  0823               	movf	___fladd@grs^(0+128),w
 10295  16FC  1D03               	btfss	3,2
 10296  16FD  2EFF               	goto	u3561
 10297  16FE  2F00               	goto	u3560
 10298  16FF                     u3561:
 10299  16FF  2F1F               	goto	l665
 10300  1700                     u3560:
 10301  1700                     l2548:
 10302  1700  3001               	movlw	1
 10303  1701  1283               	bcf	3,5	;RP0=0, select bank0
 10304  1702  1303               	bcf	3,6	;RP1=0, select bank0
 10305  1703  07E0               	addwf	___fladd@b,f
 10306  1704  3000               	movlw	0
 10307  1705  1803               	skipnc
 10308  1706  3001               	movlw	1
 10309  1707  07E1               	addwf	___fladd@b+1,f
 10310  1708  3000               	movlw	0
 10311  1709  1803               	skipnc
 10312  170A  3001               	movlw	1
 10313  170B  07E2               	addwf	___fladd@b+2,f
 10314  170C  3000               	movlw	0
 10315  170D  1803               	skipnc
 10316  170E  3001               	movlw	1
 10317  170F  07E3               	addwf	___fladd@b+3,f
 10318  1710  2F1F               	goto	l665
 10319  1711                     l2550:
 10320  1711  0864               	movf	___fladd@a,w
 10321  1712  02E0               	subwf	___fladd@b,f
 10322  1713  0865               	movf	___fladd@a+1,w
 10323  1714  1C03               	skipc
 10324  1715  0F65               	incfsz	___fladd@a+1,w
 10325  1716  02E1               	subwf	___fladd@b+1,f
 10326  1717  0866               	movf	___fladd@a+2,w
 10327  1718  1C03               	skipc
 10328  1719  0F66               	incfsz	___fladd@a+2,w
 10329  171A  02E2               	subwf	___fladd@b+2,f
 10330  171B  0867               	movf	___fladd@a+3,w
 10331  171C  1C03               	skipc
 10332  171D  0F67               	incfsz	___fladd@a+3,w
 10333  171E  02E3               	subwf	___fladd@b+3,f
 10334  171F                     l665:
 10335  171F  1283               	bcf	3,5	;RP0=0, select bank0
 10336  1720  0863               	movf	___fladd@b+3,w
 10337  1721  0462               	iorwf	___fladd@b+2,w
 10338  1722  0461               	iorwf	___fladd@b+1,w
 10339  1723  0460               	iorwf	___fladd@b,w
 10340  1724  1D03               	skipz
 10341  1725  2F27               	goto	u3571
 10342  1726  2F28               	goto	u3570
 10343  1727                     u3571:
 10344  1727  2F5E               	goto	l2572
 10345  1728                     u3570:
 10346  1728                     l2552:
 10347  1728  1683               	bsf	3,5	;RP0=1, select bank1
 10348  1729  1303               	bcf	3,6	;RP1=0, select bank1
 10349  172A  0823               	movf	___fladd@grs^(0+128),w
 10350  172B  1D03               	btfss	3,2
 10351  172C  2F2E               	goto	u3581
 10352  172D  2F2F               	goto	u3580
 10353  172E                     u3581:
 10354  172E  2F5E               	goto	l2572
 10355  172F                     u3580:
 10356  172F                     l2554:
 10357  172F  3000               	movlw	0
 10358  1730  1283               	bcf	3,5	;RP0=0, select bank0
 10359  1731  1303               	bcf	3,6	;RP1=0, select bank0
 10360  1732  00E3               	movwf	?___fladd+3
 10361  1733  3000               	movlw	0
 10362  1734  00E2               	movwf	?___fladd+2
 10363  1735  3000               	movlw	0
 10364  1736  00E1               	movwf	?___fladd+1
 10365  1737  3000               	movlw	0
 10366  1738  00E0               	movwf	?___fladd
 10367  1739  2FFF               	goto	l657
 10368  173A                     l2558:
 10369  173A  3001               	movlw	1
 10370  173B  00E8               	movwf	??___fladd
 10371  173C                     u3595:
 10372  173C  1003               	clrc
 10373  173D  0DE0               	rlf	___fladd@b,f
 10374  173E  0DE1               	rlf	___fladd@b+1,f
 10375  173F  0DE2               	rlf	___fladd@b+2,f
 10376  1740  0DE3               	rlf	___fladd@b+3,f
 10377  1741  0BE8               	decfsz	??___fladd,f
 10378  1742  2F3C               	goto	u3595
 10379  1743                     l2560:
 10380  1743  1683               	bsf	3,5	;RP0=1, select bank1
 10381  1744  1303               	bcf	3,6	;RP1=0, select bank1
 10382  1745  1FA3               	btfss	___fladd@grs^(0+128),7
 10383  1746  2F48               	goto	u3601
 10384  1747  2F49               	goto	u3600
 10385  1748                     u3601:
 10386  1748  2F4C               	goto	l669
 10387  1749                     u3600:
 10388  1749                     l2562:
 10389  1749  1283               	bcf	3,5	;RP0=0, select bank0
 10390  174A  1303               	bcf	3,6	;RP1=0, select bank0
 10391  174B  1460               	bsf	___fladd@b,0
 10392  174C                     l669:
 10393  174C  1683               	bsf	3,5	;RP0=1, select bank1
 10394  174D  1303               	bcf	3,6	;RP1=0, select bank1
 10395  174E  1C23               	btfss	___fladd@grs^(0+128),0
 10396  174F  2F51               	goto	u3611
 10397  1750  2F52               	goto	u3610
 10398  1751                     u3611:
 10399  1751  2F55               	goto	l2566
 10400  1752                     u3610:
 10401  1752                     l2564:
 10402  1752  1403               	setc
 10403  1753  0DA3               	rlf	___fladd@grs^(0+128),f
 10404  1754  2F57               	goto	l2568
 10405  1755                     l2566:
 10406  1755  1003               	clrc
 10407  1756  0DA3               	rlf	___fladd@grs^(0+128),f
 10408  1757                     l2568:
 10409  1757  0822               	movf	___fladd@bexp^(0+128),w
 10410  1758  1903               	btfsc	3,2
 10411  1759  2F5B               	goto	u3621
 10412  175A  2F5C               	goto	u3620
 10413  175B                     u3621:
 10414  175B  2F5E               	goto	l2572
 10415  175C                     u3620:
 10416  175C                     l2570:
 10417  175C  3001               	movlw	1
 10418  175D  02A2               	subwf	___fladd@bexp^(0+128),f
 10419  175E                     l2572:
 10420  175E  1283               	bcf	3,5	;RP0=0, select bank0
 10421  175F  1FE2               	btfss	___fladd@b+2,7
 10422  1760  2F62               	goto	u3631
 10423  1761  2F63               	goto	u3630
 10424  1762                     u3631:
 10425  1762  2F3A               	goto	l2558
 10426  1763                     u3630:
 10427  1763                     l2574:
 10428  1763  1683               	bsf	3,5	;RP0=1, select bank1
 10429  1764  1303               	bcf	3,6	;RP1=0, select bank1
 10430  1765  01A1               	clrf	___fladd@aexp^(0+128)
 10431  1766                     l2576:
 10432  1766  1FA3               	btfss	___fladd@grs^(0+128),7
 10433  1767  2F69               	goto	u3641
 10434  1768  2F6A               	goto	u3640
 10435  1769                     u3641:
 10436  1769  2F7C               	goto	l2584
 10437  176A                     u3640:
 10438  176A                     l2578:
 10439  176A  0823               	movf	___fladd@grs^(0+128),w
 10440  176B  397F               	andlw	127
 10441  176C  1903               	btfsc	3,2
 10442  176D  2F6F               	goto	u3651
 10443  176E  2F70               	goto	u3650
 10444  176F                     u3651:
 10445  176F  2F75               	goto	l675
 10446  1770                     u3650:
 10447  1770                     l2580:
 10448  1770  1683               	bsf	3,5	;RP0=1, select bank1
 10449  1771  1303               	bcf	3,6	;RP1=0, select bank1
 10450  1772  01A1               	clrf	___fladd@aexp^(0+128)
 10451  1773  0AA1               	incf	___fladd@aexp^(0+128),f
 10452  1774  2F7C               	goto	l2584
 10453  1775                     l675:
 10454  1775  1283               	bcf	3,5	;RP0=0, select bank0
 10455  1776  1303               	bcf	3,6	;RP1=0, select bank0
 10456  1777  1C60               	btfss	___fladd@b,0
 10457  1778  2F7A               	goto	u3661
 10458  1779  2F7B               	goto	u3660
 10459  177A                     u3661:
 10460  177A  2F7C               	goto	l2584
 10461  177B                     u3660:
 10462  177B  2F70               	goto	l2580
 10463  177C                     l2584:
 10464  177C  1683               	bsf	3,5	;RP0=1, select bank1
 10465  177D  1303               	bcf	3,6	;RP1=0, select bank1
 10466  177E  0821               	movf	___fladd@aexp^(0+128),w
 10467  177F  1903               	btfsc	3,2
 10468  1780  2F82               	goto	u3671
 10469  1781  2F83               	goto	u3670
 10470  1782                     u3671:
 10471  1782  2FBF               	goto	l678
 10472  1783                     u3670:
 10473  1783                     l2586:
 10474  1783  3001               	movlw	1
 10475  1784  1283               	bcf	3,5	;RP0=0, select bank0
 10476  1785  1303               	bcf	3,6	;RP1=0, select bank0
 10477  1786  07E0               	addwf	___fladd@b,f
 10478  1787  3000               	movlw	0
 10479  1788  1803               	skipnc
 10480  1789  3001               	movlw	1
 10481  178A  07E1               	addwf	___fladd@b+1,f
 10482  178B  3000               	movlw	0
 10483  178C  1803               	skipnc
 10484  178D  3001               	movlw	1
 10485  178E  07E2               	addwf	___fladd@b+2,f
 10486  178F  3000               	movlw	0
 10487  1790  1803               	skipnc
 10488  1791  3001               	movlw	1
 10489  1792  07E3               	addwf	___fladd@b+3,f
 10490  1793                     l2588:
 10491  1793  1C63               	btfss	___fladd@b+3,0
 10492  1794  2F96               	goto	u3681
 10493  1795  2F97               	goto	u3680
 10494  1796                     u3681:
 10495  1796  2FBF               	goto	l678
 10496  1797                     u3680:
 10497  1797                     l2590:
 10498  1797  0860               	movf	___fladd@b,w
 10499  1798  00E8               	movwf	??___fladd
 10500  1799  0861               	movf	___fladd@b+1,w
 10501  179A  00E9               	movwf	??___fladd+1
 10502  179B  0862               	movf	___fladd@b+2,w
 10503  179C  00EA               	movwf	??___fladd+2
 10504  179D  0863               	movf	___fladd@b+3,w
 10505  179E  00EB               	movwf	??___fladd+3
 10506  179F  3001               	movlw	1
 10507  17A0  00EC               	movwf	??___fladd+4
 10508  17A1                     u3695:
 10509  17A1  0D6B               	rlf	??___fladd+3,w
 10510  17A2  0CEB               	rrf	??___fladd+3,f
 10511  17A3  0CEA               	rrf	??___fladd+2,f
 10512  17A4  0CE9               	rrf	??___fladd+1,f
 10513  17A5  0CE8               	rrf	??___fladd,f
 10514  17A6                     u3690:
 10515  17A6  0BEC               	decfsz	??___fladd+4,f
 10516  17A7  2FA1               	goto	u3695
 10517  17A8  086B               	movf	??___fladd+3,w
 10518  17A9  00E3               	movwf	___fladd@b+3
 10519  17AA  086A               	movf	??___fladd+2,w
 10520  17AB  00E2               	movwf	___fladd@b+2
 10521  17AC  0869               	movf	??___fladd+1,w
 10522  17AD  00E1               	movwf	___fladd@b+1
 10523  17AE  0868               	movf	??___fladd,w
 10524  17AF  00E0               	movwf	___fladd@b
 10525  17B0  1683               	bsf	3,5	;RP0=1, select bank1
 10526  17B1  1303               	bcf	3,6	;RP1=0, select bank1
 10527  17B2  0A22               	incf	___fladd@bexp^(0+128),w
 10528  17B3  1903               	btfsc	3,2
 10529  17B4  2FB6               	goto	u3701
 10530  17B5  2FB7               	goto	u3700
 10531  17B6                     u3701:
 10532  17B6  2FBF               	goto	l678
 10533  17B7                     u3700:
 10534  17B7                     l2592:
 10535  17B7  3001               	movlw	1
 10536  17B8  1283               	bcf	3,5	;RP0=0, select bank0
 10537  17B9  1303               	bcf	3,6	;RP1=0, select bank0
 10538  17BA  00E8               	movwf	??___fladd
 10539  17BB  0868               	movf	??___fladd,w
 10540  17BC  1683               	bsf	3,5	;RP0=1, select bank1
 10541  17BD  1303               	bcf	3,6	;RP1=0, select bank1
 10542  17BE  07A2               	addwf	___fladd@bexp^(0+128),f
 10543  17BF                     l678:
 10544  17BF  1683               	bsf	3,5	;RP0=1, select bank1
 10545  17C0  1303               	bcf	3,6	;RP1=0, select bank1
 10546  17C1  0A22               	incf	___fladd@bexp^(0+128),w
 10547  17C2  1903               	btfsc	3,2
 10548  17C3  2FC5               	goto	u3711
 10549  17C4  2FC6               	goto	u3710
 10550  17C5                     u3711:
 10551  17C5  2FCB               	goto	l2596
 10552  17C6                     u3710:
 10553  17C6                     l2594:
 10554  17C6  0822               	movf	___fladd@bexp^(0+128),w
 10555  17C7  1D03               	btfss	3,2
 10556  17C8  2FCA               	goto	u3721
 10557  17C9  2FCB               	goto	u3720
 10558  17CA                     u3721:
 10559  17CA  2FDD               	goto	l2602
 10560  17CB                     u3720:
 10561  17CB                     l2596:
 10562  17CB  3000               	movlw	0
 10563  17CC  1283               	bcf	3,5	;RP0=0, select bank0
 10564  17CD  1303               	bcf	3,6	;RP1=0, select bank0
 10565  17CE  00E3               	movwf	___fladd@b+3
 10566  17CF  3000               	movlw	0
 10567  17D0  00E2               	movwf	___fladd@b+2
 10568  17D1  3000               	movlw	0
 10569  17D2  00E1               	movwf	___fladd@b+1
 10570  17D3  3000               	movlw	0
 10571  17D4  00E0               	movwf	___fladd@b
 10572  17D5                     l2598:
 10573  17D5  1683               	bsf	3,5	;RP0=1, select bank1
 10574  17D6  1303               	bcf	3,6	;RP1=0, select bank1
 10575  17D7  0822               	movf	___fladd@bexp^(0+128),w
 10576  17D8  1D03               	btfss	3,2
 10577  17D9  2FDB               	goto	u3731
 10578  17DA  2FDC               	goto	u3730
 10579  17DB                     u3731:
 10580  17DB  2FDD               	goto	l2602
 10581  17DC                     u3730:
 10582  17DC                     l2600:
 10583  17DC  01A0               	clrf	___fladd@signs^(0+128)
 10584  17DD                     l2602:
 10585  17DD  1C22               	btfss	___fladd@bexp^(0+128),0
 10586  17DE  2FE0               	goto	u3741
 10587  17DF  2FE1               	goto	u3740
 10588  17E0                     u3741:
 10589  17E0  2FE5               	goto	l2606
 10590  17E1                     u3740:
 10591  17E1                     l2604:
 10592  17E1  1283               	bcf	3,5	;RP0=0, select bank0
 10593  17E2  1303               	bcf	3,6	;RP1=0, select bank0
 10594  17E3  17E2               	bsf	___fladd@b+2,7
 10595  17E4  2FEB               	goto	l686
 10596  17E5                     l2606:
 10597  17E5  307F               	movlw	127
 10598  17E6  1283               	bcf	3,5	;RP0=0, select bank0
 10599  17E7  1303               	bcf	3,6	;RP1=0, select bank0
 10600  17E8  00E8               	movwf	??___fladd
 10601  17E9  0868               	movf	??___fladd,w
 10602  17EA  05E2               	andwf	___fladd@b+2,f
 10603  17EB                     l686:
 10604  17EB  1683               	bsf	3,5	;RP0=1, select bank1
 10605  17EC  1303               	bcf	3,6	;RP1=0, select bank1
 10606  17ED  0822               	movf	___fladd@bexp^(0+128),w
 10607  17EE  1283               	bcf	3,5	;RP0=0, select bank0
 10608  17EF  1303               	bcf	3,6	;RP1=0, select bank0
 10609  17F0  00E8               	movwf	??___fladd
 10610  17F1  1003               	clrc
 10611  17F2  0C68               	rrf	??___fladd,w
 10612  17F3  00E9               	movwf	??___fladd+1
 10613  17F4  0869               	movf	??___fladd+1,w
 10614  17F5  00E3               	movwf	___fladd@b+3
 10615  17F6                     l2608:
 10616  17F6  1683               	bsf	3,5	;RP0=1, select bank1
 10617  17F7  1303               	bcf	3,6	;RP1=0, select bank1
 10618  17F8  1FA0               	btfss	___fladd@signs^(0+128),7
 10619  17F9  2FFB               	goto	u3751
 10620  17FA  2FFC               	goto	u3750
 10621  17FB                     u3751:
 10622  17FB  2FFF               	goto	l687
 10623  17FC                     u3750:
 10624  17FC                     l2610:
 10625  17FC  1283               	bcf	3,5	;RP0=0, select bank0
 10626  17FD  1303               	bcf	3,6	;RP1=0, select bank0
 10627  17FE  17E3               	bsf	___fladd@b+3,7
 10628  17FF                     l687:
 10629  17FF                     l657:
 10630  17FF  0008               	return
 10631  1800                     __end_of___fladd:
 10632                           
 10633                           	psect	text31
 10634  18D6                     __ptext31:	
 10635 ;; *************** function ___flneg *****************
 10636 ;; Defined at:
 10637 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
 10638 ;; Parameters:    Size  Location     Type
 10639 ;;  f1              4    0[COMMON] unsigned char 
 10640 ;; Auto vars:     Size  Location     Type
 10641 ;;		None
 10642 ;; Return value:  Size  Location     Type
 10643 ;;                  4    0[COMMON] unsigned char 
 10644 ;; Registers used:
 10645 ;;		wreg
 10646 ;; Tracked objects:
 10647 ;;		On entry : 0/0
 10648 ;;		On exit  : 0/0
 10649 ;;		Unchanged: 0/0
 10650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10651 ;;      Params:         4       0       0       0       0
 10652 ;;      Locals:         0       0       0       0       0
 10653 ;;      Temps:          0       0       0       0       0
 10654 ;;      Totals:         4       0       0       0       0
 10655 ;;Total ram usage:        4 bytes
 10656 ;; Hardware stack levels used:    1
 10657 ;; This function calls:
 10658 ;;		Nothing
 10659 ;; This function is called by:
 10660 ;;		_sprintf
 10661 ;; This function uses a non-reentrant model
 10662 ;;
 10663                           
 10664                           
 10665                           ;psect for function ___flneg
 10666  18D6                     ___flneg:
 10667  18D6                     l3012:	
 10668                           ;incstack = 0
 10669                           ; Regs used in ___flneg: [wreg]
 10670                           
 10671  18D6  0873               	movf	___flneg@f1+3,w
 10672  18D7  0472               	iorwf	___flneg@f1+2,w
 10673  18D8  0471               	iorwf	___flneg@f1+1,w
 10674  18D9  0470               	iorwf	___flneg@f1,w
 10675  18DA  1903               	skipnz
 10676  18DB  28DD               	goto	u4871
 10677  18DC  28DE               	goto	u4870
 10678  18DD                     u4871:
 10679  18DD  28E0               	goto	l3016
 10680  18DE                     u4870:
 10681  18DE                     l3014:
 10682  18DE  3080               	movlw	128
 10683  18DF  06F3               	xorwf	___flneg@f1+3,f
 10684  18E0                     l3016:
 10685  18E0                     l516:
 10686  18E0  0008               	return
 10687  18E1                     __end_of___flneg:
 10688                           
 10689                           	psect	text32
 10690  1D27                     __ptext32:	
 10691 ;; *************** function ___flge *****************
 10692 ;; Defined at:
 10693 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
 10694 ;; Parameters:    Size  Location     Type
 10695 ;;  ff1             4    0[COMMON] unsigned char 
 10696 ;;  ff2             4    4[COMMON] unsigned char 
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;		None
 10699 ;; Return value:  Size  Location     Type
 10700 ;;		None               void
 10701 ;; Registers used:
 10702 ;;		wreg, status,2, status,0
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10708 ;;      Params:         8       0       0       0       0
 10709 ;;      Locals:         0       0       0       0       0
 10710 ;;      Temps:          4       0       0       0       0
 10711 ;;      Totals:        12       0       0       0       0
 10712 ;;Total ram usage:       12 bytes
 10713 ;; Hardware stack levels used:    1
 10714 ;; This function calls:
 10715 ;;		Nothing
 10716 ;; This function is called by:
 10717 ;;		_sprintf
 10718 ;; This function uses a non-reentrant model
 10719 ;;
 10720                           
 10721                           
 10722                           ;psect for function ___flge
 10723  1D27                     ___flge:
 10724  1D27                     l2992:	
 10725                           ;incstack = 0
 10726                           ; Regs used in ___flge: [wreg+status,2+status,0]
 10727                           
 10728  1D27  3000               	movlw	0
 10729  1D28  0570               	andwf	___flge@ff1,w
 10730  1D29  00F8               	movwf	??___flge
 10731  1D2A  3000               	movlw	0
 10732  1D2B  0571               	andwf	___flge@ff1+1,w
 10733  1D2C  00F9               	movwf	??___flge+1
 10734  1D2D  3080               	movlw	128
 10735  1D2E  0572               	andwf	___flge@ff1+2,w
 10736  1D2F  00FA               	movwf	??___flge+2
 10737  1D30  307F               	movlw	127
 10738  1D31  0573               	andwf	___flge@ff1+3,w
 10739  1D32  00FB               	movwf	??___flge+3
 10740  1D33  087B               	movf	??___flge+3,w
 10741  1D34  047A               	iorwf	??___flge+2,w
 10742  1D35  0479               	iorwf	??___flge+1,w
 10743  1D36  0478               	iorwf	??___flge,w
 10744  1D37  1D03               	skipz
 10745  1D38  2D3A               	goto	u4801
 10746  1D39  2D3B               	goto	u4800
 10747  1D3A                     u4801:
 10748  1D3A  2D43               	goto	l508
 10749  1D3B                     u4800:
 10750  1D3B                     l2994:
 10751  1D3B  3000               	movlw	0
 10752  1D3C  00F3               	movwf	___flge@ff1+3
 10753  1D3D  3000               	movlw	0
 10754  1D3E  00F2               	movwf	___flge@ff1+2
 10755  1D3F  3000               	movlw	0
 10756  1D40  00F1               	movwf	___flge@ff1+1
 10757  1D41  3000               	movlw	0
 10758  1D42  00F0               	movwf	___flge@ff1
 10759  1D43                     l508:
 10760  1D43  3000               	movlw	0
 10761  1D44  0574               	andwf	___flge@ff2,w
 10762  1D45  00F8               	movwf	??___flge
 10763  1D46  3000               	movlw	0
 10764  1D47  0575               	andwf	___flge@ff2+1,w
 10765  1D48  00F9               	movwf	??___flge+1
 10766  1D49  3080               	movlw	128
 10767  1D4A  0576               	andwf	___flge@ff2+2,w
 10768  1D4B  00FA               	movwf	??___flge+2
 10769  1D4C  307F               	movlw	127
 10770  1D4D  0577               	andwf	___flge@ff2+3,w
 10771  1D4E  00FB               	movwf	??___flge+3
 10772  1D4F  087B               	movf	??___flge+3,w
 10773  1D50  047A               	iorwf	??___flge+2,w
 10774  1D51  0479               	iorwf	??___flge+1,w
 10775  1D52  0478               	iorwf	??___flge,w
 10776  1D53  1D03               	skipz
 10777  1D54  2D56               	goto	u4811
 10778  1D55  2D57               	goto	u4810
 10779  1D56                     u4811:
 10780  1D56  2D5F               	goto	l2998
 10781  1D57                     u4810:
 10782  1D57                     l2996:
 10783  1D57  3000               	movlw	0
 10784  1D58  00F7               	movwf	___flge@ff2+3
 10785  1D59  3000               	movlw	0
 10786  1D5A  00F6               	movwf	___flge@ff2+2
 10787  1D5B  3000               	movlw	0
 10788  1D5C  00F5               	movwf	___flge@ff2+1
 10789  1D5D  3000               	movlw	0
 10790  1D5E  00F4               	movwf	___flge@ff2
 10791  1D5F                     l2998:
 10792  1D5F  1FF3               	btfss	___flge@ff1+3,7
 10793  1D60  2D62               	goto	u4821
 10794  1D61  2D63               	goto	u4820
 10795  1D62                     u4821:
 10796  1D62  2D87               	goto	l3002
 10797  1D63                     u4820:
 10798  1D63                     l3000:
 10799  1D63  3000               	movlw	0
 10800  1D64  00F8               	movwf	??___flge
 10801  1D65  3000               	movlw	0
 10802  1D66  00F9               	movwf	??___flge+1
 10803  1D67  3000               	movlw	0
 10804  1D68  00FA               	movwf	??___flge+2
 10805  1D69  3080               	movlw	128
 10806  1D6A  00FB               	movwf	??___flge+3
 10807  1D6B  0870               	movf	___flge@ff1,w
 10808  1D6C  02F8               	subwf	??___flge,f
 10809  1D6D  0871               	movf	___flge@ff1+1,w
 10810  1D6E  1C03               	skipc
 10811  1D6F  0F71               	incfsz	___flge@ff1+1,w
 10812  1D70  2D72               	goto	u4831
 10813  1D71  2D73               	goto	u4832
 10814  1D72                     u4831:
 10815  1D72  02F9               	subwf	??___flge+1,f
 10816  1D73                     u4832:
 10817  1D73  0872               	movf	___flge@ff1+2,w
 10818  1D74  1C03               	skipc
 10819  1D75  0F72               	incfsz	___flge@ff1+2,w
 10820  1D76  2D78               	goto	u4833
 10821  1D77  2D79               	goto	u4834
 10822  1D78                     u4833:
 10823  1D78  02FA               	subwf	??___flge+2,f
 10824  1D79                     u4834:
 10825  1D79  0873               	movf	___flge@ff1+3,w
 10826  1D7A  1C03               	skipc
 10827  1D7B  0F73               	incfsz	___flge@ff1+3,w
 10828  1D7C  2D7E               	goto	u4835
 10829  1D7D  2D7F               	goto	u4836
 10830  1D7E                     u4835:
 10831  1D7E  02FB               	subwf	??___flge+3,f
 10832  1D7F                     u4836:
 10833  1D7F  087B               	movf	??___flge+3,w
 10834  1D80  00F3               	movwf	___flge@ff1+3
 10835  1D81  087A               	movf	??___flge+2,w
 10836  1D82  00F2               	movwf	___flge@ff1+2
 10837  1D83  0879               	movf	??___flge+1,w
 10838  1D84  00F1               	movwf	___flge@ff1+1
 10839  1D85  0878               	movf	??___flge,w
 10840  1D86  00F0               	movwf	___flge@ff1
 10841  1D87                     l3002:
 10842  1D87  1FF7               	btfss	___flge@ff2+3,7
 10843  1D88  2D8A               	goto	u4841
 10844  1D89  2D8B               	goto	u4840
 10845  1D8A                     u4841:
 10846  1D8A  2DAF               	goto	l511
 10847  1D8B                     u4840:
 10848  1D8B                     l3004:
 10849  1D8B  3000               	movlw	0
 10850  1D8C  00F8               	movwf	??___flge
 10851  1D8D  3000               	movlw	0
 10852  1D8E  00F9               	movwf	??___flge+1
 10853  1D8F  3000               	movlw	0
 10854  1D90  00FA               	movwf	??___flge+2
 10855  1D91  3080               	movlw	128
 10856  1D92  00FB               	movwf	??___flge+3
 10857  1D93  0874               	movf	___flge@ff2,w
 10858  1D94  02F8               	subwf	??___flge,f
 10859  1D95  0875               	movf	___flge@ff2+1,w
 10860  1D96  1C03               	skipc
 10861  1D97  0F75               	incfsz	___flge@ff2+1,w
 10862  1D98  2D9A               	goto	u4851
 10863  1D99  2D9B               	goto	u4852
 10864  1D9A                     u4851:
 10865  1D9A  02F9               	subwf	??___flge+1,f
 10866  1D9B                     u4852:
 10867  1D9B  0876               	movf	___flge@ff2+2,w
 10868  1D9C  1C03               	skipc
 10869  1D9D  0F76               	incfsz	___flge@ff2+2,w
 10870  1D9E  2DA0               	goto	u4853
 10871  1D9F  2DA1               	goto	u4854
 10872  1DA0                     u4853:
 10873  1DA0  02FA               	subwf	??___flge+2,f
 10874  1DA1                     u4854:
 10875  1DA1  0877               	movf	___flge@ff2+3,w
 10876  1DA2  1C03               	skipc
 10877  1DA3  0F77               	incfsz	___flge@ff2+3,w
 10878  1DA4  2DA6               	goto	u4855
 10879  1DA5  2DA7               	goto	u4856
 10880  1DA6                     u4855:
 10881  1DA6  02FB               	subwf	??___flge+3,f
 10882  1DA7                     u4856:
 10883  1DA7  087B               	movf	??___flge+3,w
 10884  1DA8  00F7               	movwf	___flge@ff2+3
 10885  1DA9  087A               	movf	??___flge+2,w
 10886  1DAA  00F6               	movwf	___flge@ff2+2
 10887  1DAB  0879               	movf	??___flge+1,w
 10888  1DAC  00F5               	movwf	___flge@ff2+1
 10889  1DAD  0878               	movf	??___flge,w
 10890  1DAE  00F4               	movwf	___flge@ff2
 10891  1DAF                     l511:
 10892  1DAF  3080               	movlw	128
 10893  1DB0  06F3               	xorwf	___flge@ff1+3,f
 10894  1DB1  3080               	movlw	128
 10895  1DB2  06F7               	xorwf	___flge@ff2+3,f
 10896  1DB3  0877               	movf	___flge@ff2+3,w
 10897  1DB4  0273               	subwf	___flge@ff1+3,w
 10898  1DB5  1D03               	skipz
 10899  1DB6  2DC1               	goto	u4865
 10900  1DB7  0876               	movf	___flge@ff2+2,w
 10901  1DB8  0272               	subwf	___flge@ff1+2,w
 10902  1DB9  1D03               	skipz
 10903  1DBA  2DC1               	goto	u4865
 10904  1DBB  0875               	movf	___flge@ff2+1,w
 10905  1DBC  0271               	subwf	___flge@ff1+1,w
 10906  1DBD  1D03               	skipz
 10907  1DBE  2DC1               	goto	u4865
 10908  1DBF  0874               	movf	___flge@ff2,w
 10909  1DC0  0270               	subwf	___flge@ff1,w
 10910  1DC1                     u4865:
 10911  1DC1  1803               	skipnc
 10912  1DC2  2DC4               	goto	u4861
 10913  1DC3  2DC5               	goto	u4860
 10914  1DC4                     u4861:
 10915  1DC4  2DC7               	goto	l3008
 10916  1DC5                     u4860:
 10917  1DC5                     l3006:
 10918  1DC5  1003               	clrc
 10919  1DC6  2DC8               	goto	l512
 10920  1DC7                     l3008:
 10921  1DC7  1403               	setc
 10922  1DC8                     l512:
 10923  1DC8  0008               	return
 10924  1DC9                     __end_of___flge:
 10925                           
 10926                           	psect	text33
 10927  1A8D                     __ptext33:	
 10928 ;; *************** function ___fleq *****************
 10929 ;; Defined at:
 10930 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
 10931 ;; Parameters:    Size  Location     Type
 10932 ;;  ff1             4    0[COMMON] unsigned char 
 10933 ;;  ff2             4    4[COMMON] unsigned char 
 10934 ;; Auto vars:     Size  Location     Type
 10935 ;;		None
 10936 ;; Return value:  Size  Location     Type
 10937 ;;		None               void
 10938 ;; Registers used:
 10939 ;;		wreg, status,2, status,0
 10940 ;; Tracked objects:
 10941 ;;		On entry : 0/0
 10942 ;;		On exit  : 0/0
 10943 ;;		Unchanged: 0/0
 10944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10945 ;;      Params:         8       0       0       0       0
 10946 ;;      Locals:         0       0       0       0       0
 10947 ;;      Temps:          4       0       0       0       0
 10948 ;;      Totals:        12       0       0       0       0
 10949 ;;Total ram usage:       12 bytes
 10950 ;; Hardware stack levels used:    1
 10951 ;; This function calls:
 10952 ;;		Nothing
 10953 ;; This function is called by:
 10954 ;;		_sprintf
 10955 ;; This function uses a non-reentrant model
 10956 ;;
 10957                           
 10958                           
 10959                           ;psect for function ___fleq
 10960  1A8D                     ___fleq:
 10961  1A8D                     l2980:	
 10962                           ;incstack = 0
 10963                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 10964                           
 10965  1A8D  3000               	movlw	0
 10966  1A8E  0570               	andwf	___fleq@ff1,w
 10967  1A8F  00F8               	movwf	??___fleq
 10968  1A90  3000               	movlw	0
 10969  1A91  0571               	andwf	___fleq@ff1+1,w
 10970  1A92  00F9               	movwf	??___fleq+1
 10971  1A93  3080               	movlw	128
 10972  1A94  0572               	andwf	___fleq@ff1+2,w
 10973  1A95  00FA               	movwf	??___fleq+2
 10974  1A96  307F               	movlw	127
 10975  1A97  0573               	andwf	___fleq@ff1+3,w
 10976  1A98  00FB               	movwf	??___fleq+3
 10977  1A99  087B               	movf	??___fleq+3,w
 10978  1A9A  047A               	iorwf	??___fleq+2,w
 10979  1A9B  0479               	iorwf	??___fleq+1,w
 10980  1A9C  0478               	iorwf	??___fleq,w
 10981  1A9D  1D03               	skipz
 10982  1A9E  2AA0               	goto	u4771
 10983  1A9F  2AA1               	goto	u4770
 10984  1AA0                     u4771:
 10985  1AA0  2AA9               	goto	l503
 10986  1AA1                     u4770:
 10987  1AA1                     l2982:
 10988  1AA1  3000               	movlw	0
 10989  1AA2  00F3               	movwf	___fleq@ff1+3
 10990  1AA3  3000               	movlw	0
 10991  1AA4  00F2               	movwf	___fleq@ff1+2
 10992  1AA5  3000               	movlw	0
 10993  1AA6  00F1               	movwf	___fleq@ff1+1
 10994  1AA7  3000               	movlw	0
 10995  1AA8  00F0               	movwf	___fleq@ff1
 10996  1AA9                     l503:
 10997  1AA9  3000               	movlw	0
 10998  1AAA  0574               	andwf	___fleq@ff2,w
 10999  1AAB  00F8               	movwf	??___fleq
 11000  1AAC  3000               	movlw	0
 11001  1AAD  0575               	andwf	___fleq@ff2+1,w
 11002  1AAE  00F9               	movwf	??___fleq+1
 11003  1AAF  3080               	movlw	128
 11004  1AB0  0576               	andwf	___fleq@ff2+2,w
 11005  1AB1  00FA               	movwf	??___fleq+2
 11006  1AB2  307F               	movlw	127
 11007  1AB3  0577               	andwf	___fleq@ff2+3,w
 11008  1AB4  00FB               	movwf	??___fleq+3
 11009  1AB5  087B               	movf	??___fleq+3,w
 11010  1AB6  047A               	iorwf	??___fleq+2,w
 11011  1AB7  0479               	iorwf	??___fleq+1,w
 11012  1AB8  0478               	iorwf	??___fleq,w
 11013  1AB9  1D03               	skipz
 11014  1ABA  2ABC               	goto	u4781
 11015  1ABB  2ABD               	goto	u4780
 11016  1ABC                     u4781:
 11017  1ABC  2AC5               	goto	l504
 11018  1ABD                     u4780:
 11019  1ABD                     l2984:
 11020  1ABD  3000               	movlw	0
 11021  1ABE  00F7               	movwf	___fleq@ff2+3
 11022  1ABF  3000               	movlw	0
 11023  1AC0  00F6               	movwf	___fleq@ff2+2
 11024  1AC1  3000               	movlw	0
 11025  1AC2  00F5               	movwf	___fleq@ff2+1
 11026  1AC3  3000               	movlw	0
 11027  1AC4  00F4               	movwf	___fleq@ff2
 11028  1AC5                     l504:
 11029  1AC5  0877               	movf	___fleq@ff2+3,w
 11030  1AC6  0673               	xorwf	___fleq@ff1+3,w
 11031  1AC7  1D03               	skipz
 11032  1AC8  2AD3               	goto	u4795
 11033  1AC9  0876               	movf	___fleq@ff2+2,w
 11034  1ACA  0672               	xorwf	___fleq@ff1+2,w
 11035  1ACB  1D03               	skipz
 11036  1ACC  2AD3               	goto	u4795
 11037  1ACD  0875               	movf	___fleq@ff2+1,w
 11038  1ACE  0671               	xorwf	___fleq@ff1+1,w
 11039  1ACF  1D03               	skipz
 11040  1AD0  2AD3               	goto	u4795
 11041  1AD1  0874               	movf	___fleq@ff2,w
 11042  1AD2  0670               	xorwf	___fleq@ff1,w
 11043  1AD3                     u4795:
 11044  1AD3  1903               	skipnz
 11045  1AD4  2AD6               	goto	u4791
 11046  1AD5  2AD7               	goto	u4790
 11047  1AD6                     u4791:
 11048  1AD6  2AD9               	goto	l2988
 11049  1AD7                     u4790:
 11050  1AD7                     l2986:
 11051  1AD7  1003               	clrc
 11052  1AD8  2ADA               	goto	l505
 11053  1AD9                     l2988:
 11054  1AD9  1403               	setc
 11055  1ADA                     l505:
 11056  1ADA  0008               	return
 11057  1ADB                     __end_of___fleq:
 11058                           
 11059                           	psect	text34
 11060  1A4B                     __ptext34:	
 11061 ;; *************** function _Lcd_Write_String *****************
 11062 ;; Defined at:
 11063 ;;		line 64 in file "./LCD.h"
 11064 ;; Parameters:    Size  Location     Type
 11065 ;;  a               2    2[COMMON] PTR unsigned char 
 11066 ;;		 -> buffer3(1), buffer2(1), buffer1(1), STR_5(5), 
 11067 ;;		 -> STR_4(4), STR_3(5), STR_2(13), STR_1(10), 
 11068 ;; Auto vars:     Size  Location     Type
 11069 ;;  i               2    7[COMMON] int 
 11070 ;; Return value:  Size  Location     Type
 11071 ;;                  1    wreg      void 
 11072 ;; Registers used:
 11073 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 11074 ;; Tracked objects:
 11075 ;;		On entry : 0/0
 11076 ;;		On exit  : 0/0
 11077 ;;		Unchanged: 0/0
 11078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11079 ;;      Params:         2       0       0       0       0
 11080 ;;      Locals:         2       0       0       0       0
 11081 ;;      Temps:          3       0       0       0       0
 11082 ;;      Totals:         7       0       0       0       0
 11083 ;;Total ram usage:        7 bytes
 11084 ;; Hardware stack levels used:    1
 11085 ;; Hardware stack levels required when called:    1
 11086 ;; This function calls:
 11087 ;;		_Lcd_Write_Char
 11088 ;; This function is called by:
 11089 ;;		_main
 11090 ;;		_Contador
 11091 ;;		_conversion
 11092 ;;		_temperaturac
 11093 ;; This function uses a non-reentrant model
 11094 ;;
 11095                           
 11096                           
 11097                           ;psect for function _Lcd_Write_String
 11098  1A4B                     _Lcd_Write_String:
 11099  1A4B                     l3138:	
 11100                           ;incstack = 0
 11101                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 11102                           
 11103                           
 11104                           ;./LCD.h: 64: void Lcd_Write_String(char *a);./LCD.h: 65: {;./LCD.h: 66:  int i;;./LCD.h
      +                          : 67:  for(i=0;a[i]!='\0';i++)
 11105  1A4B  01F7               	clrf	Lcd_Write_String@i
 11106  1A4C  01F8               	clrf	Lcd_Write_String@i+1
 11107  1A4D  2A70               	goto	l3144
 11108  1A4E                     l3140:
 11109                           
 11110                           ;./LCD.h: 68:      Lcd_Write_Char(a[i]);
 11111  1A4E  0877               	movf	Lcd_Write_String@i,w
 11112  1A4F  0772               	addwf	Lcd_Write_String@a,w
 11113  1A50  00F5               	movwf	??_Lcd_Write_String+1
 11114  1A51  0873               	movf	Lcd_Write_String@a+1,w
 11115  1A52  00F4               	movwf	??_Lcd_Write_String
 11116  1A53  1803               	skipnc
 11117  1A54  0AF4               	incf	??_Lcd_Write_String,f
 11118  1A55  1FF7               	btfss	Lcd_Write_String@i,7
 11119  1A56  2A58               	goto	u5200
 11120  1A57  03F4               	decf	??_Lcd_Write_String,f
 11121  1A58                     u5200:
 11122  1A58  0874               	movf	??_Lcd_Write_String,w
 11123  1A59  00F6               	movwf	??_Lcd_Write_String+2
 11124  1A5A  0876               	movf	??_Lcd_Write_String+2,w
 11125  1A5B  1283               	bcf	3,5	;RP0=0, select bank0
 11126  1A5C  1303               	bcf	3,6	;RP1=0, select bank0
 11127  1A5D  00FF               	movwf	btemp+1
 11128  1A5E  0875               	movf	??_Lcd_Write_String+1,w
 11129  1A5F  0084               	movwf	4
 11130  1A60  120A  158A  2000  160A  158A  	fcall	stringtab
 11131  1A65  160A  158A  20EE  160A  158A  	fcall	_Lcd_Write_Char
 11132  1A6A                     l3142:
 11133  1A6A  3001               	movlw	1
 11134  1A6B  07F7               	addwf	Lcd_Write_String@i,f
 11135  1A6C  1803               	skipnc
 11136  1A6D  0AF8               	incf	Lcd_Write_String@i+1,f
 11137  1A6E  3000               	movlw	0
 11138  1A6F  07F8               	addwf	Lcd_Write_String@i+1,f
 11139  1A70                     l3144:
 11140  1A70  0877               	movf	Lcd_Write_String@i,w
 11141  1A71  0772               	addwf	Lcd_Write_String@a,w
 11142  1A72  00F5               	movwf	??_Lcd_Write_String+1
 11143  1A73  0873               	movf	Lcd_Write_String@a+1,w
 11144  1A74  00F4               	movwf	??_Lcd_Write_String
 11145  1A75  1803               	skipnc
 11146  1A76  0AF4               	incf	??_Lcd_Write_String,f
 11147  1A77  1FF7               	btfss	Lcd_Write_String@i,7
 11148  1A78  2A7A               	goto	u5210
 11149  1A79  03F4               	decf	??_Lcd_Write_String,f
 11150  1A7A                     u5210:
 11151  1A7A  0874               	movf	??_Lcd_Write_String,w
 11152  1A7B  00F6               	movwf	??_Lcd_Write_String+2
 11153  1A7C  0876               	movf	??_Lcd_Write_String+2,w
 11154  1A7D  1283               	bcf	3,5	;RP0=0, select bank0
 11155  1A7E  1303               	bcf	3,6	;RP1=0, select bank0
 11156  1A7F  00FF               	movwf	btemp+1
 11157  1A80  0875               	movf	??_Lcd_Write_String+1,w
 11158  1A81  0084               	movwf	4
 11159  1A82  120A  158A  2000  160A  158A  	fcall	stringtab
 11160  1A87  3A00               	xorlw	0
 11161  1A88  1D03               	skipz
 11162  1A89  2A8B               	goto	u5221
 11163  1A8A  2A8C               	goto	u5220
 11164  1A8B                     u5221:
 11165  1A8B  2A4E               	goto	l3140
 11166  1A8C                     u5220:
 11167  1A8C                     l93:
 11168  1A8C  0008               	return
 11169  1A8D                     __end_of_Lcd_Write_String:
 11170                           
 11171                           	psect	text35
 11172  18EE                     __ptext35:	
 11173 ;; *************** function _Lcd_Write_Char *****************
 11174 ;; Defined at:
 11175 ;;		line 56 in file "./LCD.h"
 11176 ;; Parameters:    Size  Location     Type
 11177 ;;  a               1    wreg     unsigned char 
 11178 ;; Auto vars:     Size  Location     Type
 11179 ;;  a               1    1[COMMON] unsigned char 
 11180 ;; Return value:  Size  Location     Type
 11181 ;;                  1    wreg      void 
 11182 ;; Registers used:
 11183 ;;		wreg
 11184 ;; Tracked objects:
 11185 ;;		On entry : 0/0
 11186 ;;		On exit  : 0/0
 11187 ;;		Unchanged: 0/0
 11188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11189 ;;      Params:         0       0       0       0       0
 11190 ;;      Locals:         1       0       0       0       0
 11191 ;;      Temps:          1       0       0       0       0
 11192 ;;      Totals:         2       0       0       0       0
 11193 ;;Total ram usage:        2 bytes
 11194 ;; Hardware stack levels used:    1
 11195 ;; This function calls:
 11196 ;;		Nothing
 11197 ;; This function is called by:
 11198 ;;		_Lcd_Write_String
 11199 ;; This function uses a non-reentrant model
 11200 ;;
 11201                           
 11202                           
 11203                           ;psect for function _Lcd_Write_Char
 11204  18EE                     _Lcd_Write_Char:
 11205                           
 11206                           ;incstack = 0
 11207                           ; Regs used in _Lcd_Write_Char: [wreg]
 11208                           ;Lcd_Write_Char@a stored from wreg
 11209  18EE  00F1               	movwf	Lcd_Write_Char@a
 11210  18EF                     l2760:
 11211                           
 11212                           ;./LCD.h: 57:     PORTDbits.RD2 = 1;
 11213  18EF  1283               	bcf	3,5	;RP0=0, select bank0
 11214  18F0  1303               	bcf	3,6	;RP1=0, select bank0
 11215  18F1  1508               	bsf	8,2	;volatile
 11216  18F2                     l2762:
 11217                           
 11218                           ;./LCD.h: 58:     PORTB = a;
 11219  18F2  0871               	movf	Lcd_Write_Char@a,w
 11220  18F3  0086               	movwf	6	;volatile
 11221  18F4                     l2764:
 11222                           
 11223                           ;./LCD.h: 59:     PORTDbits.RD3=1;
 11224  18F4  1588               	bsf	8,3	;volatile
 11225                           
 11226                           ;./LCD.h: 60:     _delay((unsigned long)((40)*(9000000/4000000.0)));
 11227  18F5  301D               	movlw	29
 11228  18F6  00F0               	movwf	??_Lcd_Write_Char
 11229  18F7                     u5987:
 11230  18F7  0BF0               	decfsz	??_Lcd_Write_Char,f
 11231  18F8  28F7               	goto	u5987
 11232  18F9  28FA               	nop2
 11233  18FA                     l2766:
 11234                           
 11235                           ;./LCD.h: 61:     PORTDbits.RD3=0;
 11236  18FA  1283               	bcf	3,5	;RP0=0, select bank0
 11237  18FB  1303               	bcf	3,6	;RP1=0, select bank0
 11238  18FC  1188               	bcf	8,3	;volatile
 11239  18FD                     l87:
 11240  18FD  0008               	return
 11241  18FE                     __end_of_Lcd_Write_Char:
 11242                           
 11243                           	psect	text36
 11244  1945                     __ptext36:	
 11245 ;; *************** function _Lcd_Set_Cursor *****************
 11246 ;; Defined at:
 11247 ;;		line 35 in file "./LCD.h"
 11248 ;; Parameters:    Size  Location     Type
 11249 ;;  a               1    wreg     unsigned char 
 11250 ;;  b               1    3[COMMON] unsigned char 
 11251 ;; Auto vars:     Size  Location     Type
 11252 ;;  a               1    5[COMMON] unsigned char 
 11253 ;;  temp            1    6[COMMON] unsigned char 
 11254 ;;  y               1    0        unsigned char 
 11255 ;;  z               1    0        unsigned char 
 11256 ;; Return value:  Size  Location     Type
 11257 ;;                  1    wreg      void 
 11258 ;; Registers used:
 11259 ;;		wreg, status,2, status,0, pclath, cstack
 11260 ;; Tracked objects:
 11261 ;;		On entry : 0/0
 11262 ;;		On exit  : 0/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11265 ;;      Params:         1       0       0       0       0
 11266 ;;      Locals:         2       0       0       0       0
 11267 ;;      Temps:          1       0       0       0       0
 11268 ;;      Totals:         4       0       0       0       0
 11269 ;;Total ram usage:        4 bytes
 11270 ;; Hardware stack levels used:    1
 11271 ;; Hardware stack levels required when called:    1
 11272 ;; This function calls:
 11273 ;;		_Lcd_Cmd
 11274 ;; This function is called by:
 11275 ;;		_main
 11276 ;;		_Contador
 11277 ;;		_conversion
 11278 ;;		_temperaturac
 11279 ;; This function uses a non-reentrant model
 11280 ;;
 11281                           
 11282                           
 11283                           ;psect for function _Lcd_Set_Cursor
 11284  1945                     _Lcd_Set_Cursor:
 11285                           
 11286                           ;incstack = 0
 11287                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 11288                           ;Lcd_Set_Cursor@a stored from wreg
 11289  1945  00F5               	movwf	Lcd_Set_Cursor@a
 11290  1946                     l3126:
 11291                           
 11292                           ;./LCD.h: 35: void Lcd_Set_Cursor(char a, char b);./LCD.h: 36: {;./LCD.h: 37:  char temp
      +                          ,z,y;;./LCD.h: 38:  if(a == 1)
 11293  1946  0375               	decf	Lcd_Set_Cursor@a,w
 11294  1947  1D03               	btfss	3,2
 11295  1948  294A               	goto	u5181
 11296  1949  294B               	goto	u5180
 11297  194A                     u5181:
 11298  194A  2957               	goto	l3132
 11299  194B                     u5180:
 11300  194B                     l3128:
 11301                           
 11302                           ;./LCD.h: 39:  {;./LCD.h: 40:    temp = 0x80 + b - 1;
 11303  194B  0873               	movf	Lcd_Set_Cursor@b,w
 11304  194C  3E7F               	addlw	127
 11305  194D  00F4               	movwf	??_Lcd_Set_Cursor
 11306  194E  0874               	movf	??_Lcd_Set_Cursor,w
 11307  194F  00F6               	movwf	Lcd_Set_Cursor@temp
 11308  1950                     l3130:
 11309                           
 11310                           ;./LCD.h: 43:   Lcd_Cmd(temp);
 11311  1950  0876               	movf	Lcd_Set_Cursor@temp,w
 11312  1951  160A  158A  20FE  160A  158A  	fcall	_Lcd_Cmd
 11313                           
 11314                           ;./LCD.h: 45:  }
 11315  1956  2968               	goto	l84
 11316  1957                     l3132:
 11317  1957  3002               	movlw	2
 11318  1958  0675               	xorwf	Lcd_Set_Cursor@a,w
 11319  1959  1D03               	btfss	3,2
 11320  195A  295C               	goto	u5191
 11321  195B  295D               	goto	u5190
 11322  195C                     u5191:
 11323  195C  2968               	goto	l84
 11324  195D                     u5190:
 11325  195D                     l3134:
 11326                           
 11327                           ;./LCD.h: 47:  {;./LCD.h: 48:   temp = 0xC0 + b - 1;
 11328  195D  0873               	movf	Lcd_Set_Cursor@b,w
 11329  195E  3EBF               	addlw	191
 11330  195F  00F4               	movwf	??_Lcd_Set_Cursor
 11331  1960  0874               	movf	??_Lcd_Set_Cursor,w
 11332  1961  00F6               	movwf	Lcd_Set_Cursor@temp
 11333  1962                     l3136:
 11334                           
 11335                           ;./LCD.h: 51:   Lcd_Cmd(temp);
 11336  1962  0876               	movf	Lcd_Set_Cursor@temp,w
 11337  1963  160A  158A  20FE  160A  158A  	fcall	_Lcd_Cmd
 11338  1968                     l84:
 11339  1968  0008               	return
 11340  1969                     __end_of_Lcd_Set_Cursor:
 11341                           
 11342                           	psect	text37
 11343  18FE                     __ptext37:	
 11344 ;; *************** function _Lcd_Cmd *****************
 11345 ;; Defined at:
 11346 ;;		line 21 in file "./LCD.h"
 11347 ;; Parameters:    Size  Location     Type
 11348 ;;  a               1    wreg     unsigned char 
 11349 ;; Auto vars:     Size  Location     Type
 11350 ;;  a               1    2[COMMON] unsigned char 
 11351 ;; Return value:  Size  Location     Type
 11352 ;;                  1    wreg      void 
 11353 ;; Registers used:
 11354 ;;		wreg
 11355 ;; Tracked objects:
 11356 ;;		On entry : 0/0
 11357 ;;		On exit  : 0/0
 11358 ;;		Unchanged: 0/0
 11359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11360 ;;      Params:         0       0       0       0       0
 11361 ;;      Locals:         1       0       0       0       0
 11362 ;;      Temps:          2       0       0       0       0
 11363 ;;      Totals:         3       0       0       0       0
 11364 ;;Total ram usage:        3 bytes
 11365 ;; Hardware stack levels used:    1
 11366 ;; This function calls:
 11367 ;;		Nothing
 11368 ;; This function is called by:
 11369 ;;		_Lcd_Clear
 11370 ;;		_Lcd_Set_Cursor
 11371 ;;		_Lcd_Init
 11372 ;; This function uses a non-reentrant model
 11373 ;;
 11374                           
 11375                           
 11376                           ;psect for function _Lcd_Cmd
 11377  18FE                     _Lcd_Cmd:
 11378                           
 11379                           ;incstack = 0
 11380                           ; Regs used in _Lcd_Cmd: [wreg]
 11381                           ;Lcd_Cmd@a stored from wreg
 11382  18FE  00F2               	movwf	Lcd_Cmd@a
 11383  18FF                     l2752:
 11384                           
 11385                           ;./LCD.h: 22:  PORTDbits.RD2 =0;
 11386  18FF  1283               	bcf	3,5	;RP0=0, select bank0
 11387  1900  1303               	bcf	3,6	;RP1=0, select bank0
 11388  1901  1108               	bcf	8,2	;volatile
 11389  1902                     l2754:
 11390                           
 11391                           ;./LCD.h: 23:  PORTB=a;
 11392  1902  0872               	movf	Lcd_Cmd@a,w
 11393  1903  0086               	movwf	6	;volatile
 11394  1904                     l2756:
 11395                           
 11396                           ;./LCD.h: 24:     PORTDbits.RD3=1;
 11397  1904  1588               	bsf	8,3	;volatile
 11398                           
 11399                           ;./LCD.h: 25:     _delay((unsigned long)((4)*(9000000/4000.0)));
 11400  1905  300C               	movlw	12
 11401  1906  00F1               	movwf	??_Lcd_Cmd+1
 11402  1907  30AF               	movlw	175
 11403  1908  00F0               	movwf	??_Lcd_Cmd
 11404  1909                     u5997:
 11405  1909  0BF0               	decfsz	??_Lcd_Cmd,f
 11406  190A  2909               	goto	u5997
 11407  190B  0BF1               	decfsz	??_Lcd_Cmd+1,f
 11408  190C  2909               	goto	u5997
 11409  190D                     l2758:
 11410                           
 11411                           ;./LCD.h: 26:     PORTDbits.RD3=0;
 11412  190D  1283               	bcf	3,5	;RP0=0, select bank0
 11413  190E  1303               	bcf	3,6	;RP1=0, select bank0
 11414  190F  1188               	bcf	8,3	;volatile
 11415  1910                     l75:
 11416  1910  0008               	return
 11417  1911                     __end_of_Lcd_Cmd:
 11418  007E                     btemp	set	126	;btemp
 11419  007E                     wtemp0	set	126
 11420                           
 11421                           	psect	config
 11422                           
 11423                           ;Config register CONFIG1 @ 0x2007
 11424                           ;	Oscillator Selection bits
 11425                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11426                           ;	Watchdog Timer Enable bit
 11427                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11428                           ;	Power-up Timer Enable bit
 11429                           ;	PWRTE = OFF, PWRT disabled
 11430                           ;	RE3/MCLR pin function select bit
 11431                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11432                           ;	Code Protection bit
 11433                           ;	CP = OFF, Program memory code protection is disabled
 11434                           ;	Data Code Protection bit
 11435                           ;	CPD = OFF, Data memory code protection is disabled
 11436                           ;	Brown Out Reset Selection bits
 11437                           ;	BOREN = OFF, BOR disabled
 11438                           ;	Internal External Switchover bit
 11439                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11440                           ;	Fail-Safe Clock Monitor Enabled bit
 11441                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11442                           ;	Low Voltage Programming Enable bit
 11443                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11444                           ;	In-Circuit Debugger Mode bit
 11445                           ;	DEBUG = 0x1, unprogrammed default
 11446  2007                     	org	8199
 11447  2007  20D4               	dw	8404
 11448                           
 11449                           ;Config register CONFIG2 @ 0x2008
 11450                           ;	Brown-out Reset Selection bit
 11451                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 11452                           ;	Flash Program Memory Self Write Enable bits
 11453                           ;	WRT = OFF, Write protection off
 11454  2008                     	org	8200
 11455  2008  3FFF               	dw	16383

Data Sizes:
    Strings     52
    Constant    144
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     56      75
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> buffer3(BANK1[1]), buffer2(BANK1[1]), buffer1(BANK1[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 13
		 -> buffer3(BANK1[1]), buffer2(BANK1[1]), buffer1(BANK1[1]), STR_5(CODE[5]), 
		 -> STR_4(CODE[4]), STR_3(CODE[5]), STR_2(CODE[13]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _setup->_spiInit
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _sprintf->___lldiv
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___xxtofl->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd

Critical Paths under _main in BANK0

    ___fldiv->___flmul
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___xxtofl->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_temperaturac
    _temperaturac->_sprintf
    _conversion->_sprintf
    _Contador->_sprintf
    _sprintf->___flsub
    ___flsub->___fladd

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  113005
                                             52 BANK1      4     4      0
                           _Contador
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           ___xxtofl
                         _conversion
                              _setup
                            _spiRead
                           _spiWrite
                       _temperaturac
 ---------------------------------------------------------------------------------
 (1) _temperaturac                                         5     5      0   40339
                                             47 BANK1      5     5      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             44 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _conversion                                           1     1      0   36410
                                             47 BANK1      1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                             ___wmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      22
                                              3 COMMON     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      22
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Contador                                             1     1      0   33720
                                             47 BANK1      1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   32236
                                             12 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    7864
                                             44 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1516
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    6175
                                             44 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4697
                                             18 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     626
                                              4 BANK0     14    10      4
                            ___awdiv (ARG)
                             ___wmul (ARG)
                            _spiRead (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             63 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                              4 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             64 BANK0     16     8      8
                                              0 BANK1      4     4      0
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2     720
                                              2 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     764
                                              3 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Contador
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
     _sprintf
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _spiRead (ARG)
                 _spiReceiveWait
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _spiRead (ARG)
             _spiReceiveWait
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
                 _spiRead (ARG)
                   _spiReceiveWait
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _spiRead (ARG)
             _spiReceiveWait
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _spiRead (ARG)
               _spiReceiveWait
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _spiRead (ARG)
                 _spiReceiveWait
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _spiRead (ARG)
           _spiReceiveWait
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _spiRead (ARG)
               _spiReceiveWait
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _spiRead (ARG)
               _spiReceiveWait
   _Lcd_Clear
     _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
   ___xxtofl
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
     _spiRead (ARG)
       _spiReceiveWait
   _conversion
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _spiRead (ARG)
         _spiReceiveWait
     _sprintf
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _spiRead (ARG)
                 _spiReceiveWait
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _spiRead (ARG)
             _spiReceiveWait
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
                 _spiRead (ARG)
                   _spiReceiveWait
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _spiRead (ARG)
             _spiReceiveWait
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _spiRead (ARG)
               _spiReceiveWait
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _spiRead (ARG)
                 _spiReceiveWait
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _spiRead (ARG)
           _spiReceiveWait
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _spiRead (ARG)
               _spiReceiveWait
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _spiRead (ARG)
               _spiReceiveWait
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite
   _temperaturac
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _spiRead (ARG)
             _spiReceiveWait
       ___xxtofl (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _spiRead (ARG)
           _spiReceiveWait
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _spiRead (ARG)
           _spiReceiveWait
     ___xxtofl
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _spiRead (ARG)
         _spiReceiveWait
     _sprintf
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _spiRead (ARG)
                 _spiReceiveWait
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _spiRead (ARG)
             _spiReceiveWait
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
                 _spiRead (ARG)
                   _spiReceiveWait
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _spiRead (ARG)
             _spiReceiveWait
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _spiRead (ARG)
               _spiReceiveWait
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _spiRead (ARG)
                 _spiReceiveWait
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _spiRead (ARG)
           _spiReceiveWait
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _spiRead (ARG)
               _spiReceiveWait
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _spiRead (ARG)
               _spiReceiveWait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     38      4B       7       93.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A9      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 24 03:11:17 2021

             ___fldiv@aexp 0065               ___fldiv@bexp 0064                          _c 00E6  
                        pc 0002               ___fldiv@sign 005D                _SSPSTATbits 0094  
                       l75 1910                         l84 1968                         l93 1A8C  
                       l78 18ED                         l87 18FD                         l96 1A10  
             ___awdiv@sign 0021                         _cc 00E4                         fsr 0004  
      ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076                        l111 1921  
                      l112 1926                        l121 18C5                        l107 1944  
                      l115 18C6                        l132 19B3                        l118 18CC  
                      l135 1CAA                        l240 14BF                        l313 07F2  
                      l129 18D5                        l138 10D7                        l307 07AB  
                      l317 1975                        l503 1AA9                        l511 1DAF  
                      l319 198D                        l247 0C9E                        l504 1AC5  
                      l512 1DC8                        l520 1D26                        l505 1ADA  
                      l353 1C3D                        l530 1D26                        l266 020E  
                      l508 1D43                        l516 18E0                        l292 0600  
                      l700 1134                        l534 1F41                        l470 093F  
                      l702 12B4                        l527 1D11                        l535 1EB3  
                      l623 004E                        l545 1F34                        l633 1A4A  
                      l650 1609                        l538 1F04                        l722 1298  
                      l491 1FC2                        l483 1BD7                        l299 0644  
                      l644 1545                        l740 0FFF                        l804 1011  
                      l724 12A8                        l716 1226                        l573 1B7E  
                      l487 1FFF                        l648 163D                        l488 1F64  
                      l752 0FF3                        l665 171F                        l657 17FF  
                      l761 19DA                        l690 1B2A                        l498 1FF2  
                      l746 0F6B                        l675 1775                        l669 174C  
                      l686 17EB                        l678 17BF                        l790 1E32  
                      l687 17FF                        l759 19C8                        l784 1DED  
                      l786 1E84                        l797 1E4E                        l798 1E5A  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
             ___flmul@aexp 0044               ___flmul@bexp 0045               ___flmul@sign 003F  
             ___flmul@temp 004A               ___flmul@prod 0046               ___fltol@exp1 0069  
                     l3000 1D63                       l3002 1D87                       l3004 1D8B  
                     l3012 18D6                       l3020 1CAB                       l3100 1E17  
                     l2300 08EE                       l3006 1DC5                       l3014 18DE  
                     l3030 1CD7                       l3022 1CB8                       l3110 1E48  
                     l3102 1E1B                       l2310 0904                       l2302 08F2  
                     l3008 1DC7                       l3016 18E0                       l3032 1CDF  
                     l3120 1E7B                       l3112 1E52                       l3104 1E29  
                     l2400 1A1A                       l2320 0924                       l2312 0908  
                     l2304 08F4                       l3200 024E                       l3130 1950  
                     l3050 1D06                       l3042 1CED                       l3034 1CE1  
                     l3026 1CC1                       l3122 1E7C                       l3114 1E5C  
                     l3106 1E39                       l2410 1A39                       l2402 1A21  
                     l2322 092B                       l2314 090C                       l2306 08FA  
                     l3210 028C                       l3202 0252                       l3132 1957  
                     l3140 1A4E                       l2500 15E3                       l2420 14C9  
                     l3052 1D16                       l3036 1CE5                       l3044 1CFF  
                     l3028 1CD6                       l3060 1B36                       l3116 1E72  
                     l3108 1E44                       l2412 1A40                       l2404 1A25  
                     l2316 091D                       l2308 08FD                       l2324 0931  
                     l2340 1B8B                       l2332 1B7F                       l3300 0628  
                     l3220 02DC                       l3212 02A5                       l3204 026B  
                     l3134 195D                       l3126 1946                       l3142 1A6A  
                     l2510 1625                       l2502 160D                       l2430 14E8  
                     l2422 14D3                       l3054 1D1B                       l3070 1B70  
                     l3062 1B43                       l3118 1E77                       l2406 1A29  
                     l2414 1A46                       l2326 0936                       l2318 0923  
                     l2350 1BA4                       l2342 1B8F                       l2334 1B80  
                     l3310 0659                       l3302 0637                       l3230 0369  
                     l3222 02E0                       l3214 02B0                       l3206 0284  
                     l3150 191B                       l3136 1962                       l3128 194B  
                     l3144 1A70                       l2600 17DC                       l2512 162F  
                     l2504 161A                       l2440 1507                       l2432 14F2  
                     l2424 14D9                       l3064 1B47                       l3072 1B76  
                     l3056 1B2B                       l2280 19C2                       l2408 1A33  
                     l2328 093B                       l2360 1BC3                       l2352 1BA8  
                     l2344 1B94                       l2336 1B84                       l3320 0730  
                     l3312 065D                       l3304 063E                       l3240 03EB  
                     l3232 0372                       l3224 02E6                       l3216 02B6  
                     l3208 0288                       l3160 01A5                       l3152 191D  
                     l3400 112A                       l3138 1A4B                       l2610 17FC  
                     l2602 17DD                       l2530 1681                       l2522 1651  
                     l2506 161C                       l2514 1635                       l2450 1521  
                     l2442 150D                       l2434 14F4                       l2426 14DC  
                     l2418 14C0                       l3066 1B59                       l3058 1B33  
                     l3090 1DF5                       l3082 1DCC                       l2282 19D1  
                     l2274 19B5                       l2370 000B                       l2290 08DA  
                     l2354 1BAC                       l2346 1B9A                       l2362 1BC9  
                     l2338 1B89                       l3330 078A                       l3322 073C  
                     l3314 067B                       l3306 064D                       l3250 0466  
                     l3242 03FA                       l3234 038D                       l3226 0305  
                     l3218 02C9                       l3170 01C5                       l3162 01AB  
                     l3154 1920                       l3146 1912                       l3402 112C  
                     l2604 17E1                       l2532 1683                       l2524 166A  
                     l2516 1641                       l2540 169D                       l2508 1622  
                     l2452 1528                       l2460 153B                       l2444 150E  
                     l2428 14E3                       l2436 14F6                       l3076 1ADB  
                     l3068 1B67                       l3084 1DD1                       l2284 19D6  
                     l2276 19B7                       l2700 0F37                       l2620 0CB1  
                     l2612 0C9F                       l2380 0021                       l2372 000D  
                     l2292 08DE                       l2364 1BCE                       l2356 1BB6  
                     l2348 1B9D                       l3340 07B6                       l3332 0790  
                     l3316 06D6                       l3324 0777                       l3308 0652  
                     l3260 04B4                       l3252 046F                       l3244 0415  
                     l3228 0350                       l3236 0395                       l3180 01F5  
                     l3172 01C6                       l3164 01B2                       l3148 1919  
                     l3156 18C6                       l3500 12A4                       l3420 1175  
                     l3404 113C                       l3412 1155                       l2606 17E5  
                     l2542 16B5                       l2550 1711                       l2534 1689  
                     l2526 166E                       l2518 1646                       l2470 1569  
                     l2462 154D                       l2454 152D                       l2446 1518  
                     l2438 1500                       l3078 1ADF                       l3094 1DFE  
                     l3086 1DD5                       l2278 19BE                       l2710 0F4F  
                     l2702 0F3B                       l2630 0CCD                       l2622 0CB6  
                     l2614 0CA6                       l2390 0044                       l2382 0025  
                     l2374 0013                       l2294 08E3                       l2366 1BD3  
                     l2358 1BBC                       l3342 07B7                       l3326 077F  
                     l3318 0711                       l3254 0477                       l3246 043C  
                     l3262 04BD                       l3238 03A4                       l3334 0797  
                     l3190 0210                       l3182 01F9                       l3174 01CA  
                     l3166 01B7                       l3158 01A0                       l3510 19DE  
                     l3430 1194                       l3422 117D                       l3414 115A  
                     l3406 1148                       l2608 17F6                       l2560 1743  
                     l2552 1728                       l2544 16F3                       l2536 168C  
                     l2528 1674                       l2480 158D                       l2472 1571  
                     l2464 1551                       l2456 1537                       l2448 151E  
                     l3096 1E03                       l3088 1DE5                       l2720 0F70  
                     l2712 0F50                       l2704 0F3C                       l2640 0CE2  
                     l2632 0CD2                       l2624 0CBB                       l2616 0CAC  
                     l2384 0036                       l2376 0016                       l2392 004A  
                     l2296 08E5                       l2288 08D7                       l2800 0A3F  
                     l3344 07C6                       l3336 079D                       l3328 0786  
                     l3280 0582                       l3264 04F2                       l3256 0495  
                     l3248 044B                       l3192 022C                       l3176 01CD  
                     l3184 020A                       l3168 01B9                       l3352 07DC  
                     l3520 1A04                       l3512 19E4                       l3440 11C6  
                     l3432 11A6                       l3424 1185                       l3408 114C  
                     l3600 012E                       l2570 175C                       l2562 1749  
                     l2554 172F                       l2546 16FB                       l2538 1696  
                     l2490 15AF                       l2482 1593                       l2474 1579  
                     l2466 1559                       l2458 1539                       l3098 1E10  
                     l2722 0F75                       l2730 0FA6                       l2714 0F54  
                     l2706 0F45                       l2650 0CFE                       l2642 0CE7  
                     l2634 0CD8                       l2626 0CC3                       l2618 0CB0  
                     l2386 003C                       l2378 001D                       l2298 08E9  
                     l2810 0AFB                       l3346 07C6                       l3338 07A5  
                     l3290 05F4                       l3282 058E                       l3274 0541  
                     l3266 053D                       l3194 0238                       l3354 07EE  
                     l3186 020C                       l3178 01E2                       l3506 18E1  
                     l3522 1A0A                       l3514 19ED                       l3530 192F  
                     l3450 11E7                       l3442 11C7                       l3434 11AA  
                     l3426 118D                       l3418 1163                       l3370 10E9  
                     l3610 0152                       l3602 0131                       l2580 1770  
                     l2564 1752                       l2572 175E                       l2548 1700  
                     l2492 15B5                       l2484 159B                       l2476 157F  
                     l2468 1561                       l2740 0FD9                       l2732 0FB3  
                     l2724 0F83                       l2716 0F68                       l2708 0F4B  
                     l2660 0D29                       l2652 0D03                       l2644 0CEF  
                     l2636 0CDC                       l2628 0CC5                       l2388 003D  
                     l2396 1A11                       l2804 0AC7                       l3348 07D4  
                     l3292 0608                       l3284 0595                       l3268 053F  
                     l3196 023C                       l3516 19F8                       l3508 19DB  
                     l3532 1938                       l3524 1927                       l3540 18C1  
                     l3460 1200                       l3452 11E9                       l3444 11D5  
                     l3436 11AB                       l3428 118F                       l3380 10FD  
                     l3372 10EA                       l3364 10D8                       l3620 0186  
                     l3612 0162                       l3604 0132                       l2590 1797  
                     l2566 1755                       l2558 173A                       l2574 1763  
                     l2494 15BB                       l2486 15A1                       l2478 1587  
                     l2910 1F89                       l2902 1F65                       l2742 0FE7  
                     l2734 0FBE                       l2726 0F87                       l2670 0DC6  
                     l2662 0D46                       l2646 0CF1                       l2638 0CDD  
                     l2398 1A17                       l2830 1008                       l2822 0C72  
                     l3294 0611                       l3286 059A                       l3278 0578  
                     l3198 0240                       l3550 19A2                       l3518 19FE  
                     l3534 1939                       l3526 192B                       l3542 18CD  
                     l3470 1223                       l3454 11F2                       l3462 1206  
                     l3438 11B4                       l3446 11D9                       l3390 1116  
                     l3374 10EF                       l3382 10FF                       l3366 10DF  
                     l3622 018B                       l3614 0165                       l3606 013D  
                     l2752 18FF                       l2760 18EF                       l2592 17B7  
                     l2584 177C                       l2576 1766                       l2568 1757  
                     l2488 15A7                       l2496 15C3                       l2920 1FBC  
                     l2912 1F92                       l2904 1F6D                       l2840 1E98  
                     l2744 0FEB                       l2736 0FCD                       l2728 0FA0  
                     l2680 0E29                       l2672 0DCF                       l2664 0D62  
                     l2656 0D0C                       l2648 0CF9                       l2832 100E  
                     l2816 0BE3                       l2808 0AF4                       l3296 0615  
                     l3288 05D5                       l3552 19AA                       l3536 193A  
                     l3528 192E                       l3544 18D2                       l3480 1242  
                     l3464 120A                       l3456 11F6                       l3448 11DF  
                     l3392 1117                       l3384 1107                       l3376 10F4  
                     l3368 10E5                       l3560 1012                       l3624 0196  
                     l3616 0171                       l3608 0145                       l2754 1902  
                     l2762 18F2                       l2594 17C6                       l2586 1783  
                     l2578 176A                       l2498 15C6                       l2922 1FC6  
                     l2930 1FE0                       l2914 1FA4                       l2906 1F7E  
                     l2850 1EB4                       l2746 0FEC                       l2738 0FD7  
                     l2690 0EC9                       l2682 0E42                       l2674 0DDF  
                     l2666 0D8E                       l2658 0D1C                       l2770 12BE  
                     l2834 1010                       l2826 1001                       l2818 0BEA  
                     l3298 061B                       l3554 1C3E                       l3538 193B  
                     l3490 128B                       l3482 125B                       l3474 122B  
                     l3466 120B                       l3458 11F7                       l3394 111C  
                     l3386 110C                       l3378 10FC                       l3562 10B0  
                     l3618 0179                       l3570 0061                       l2756 1904  
                     l2764 18F4                       l2596 17CB                       l2588 1793  
                     l2916 1FB2                       l2908 1F80                       l2860 1EDD  
                     l2852 1EBA                       l2844 1EA1                       l2748 0FF7  
                     l2692 0EEF                       l2684 0E5F                       l2676 0DFC  
                     l2668 0DAA                       l2828 1002                       l3548 198E  
                     l3556 1C83                       l3492 128F                       l3476 1230  
                     l3484 1261                       l3468 120F                       l3396 1121  
                     l3388 1112                       l3564 10C2                       l3580 0096  
                     l3572 006A                       l2758 190D                       l2766 18FA  
                     l2598 17D5                       l2950 1983                       l2942 1969  
                     l2918 1FB3                       l2870 1F08                       l2862 1EEB  
                     l2854 1EC9                       l2838 1E85                       l2694 0F17  
                     l2686 0E8C                       l2678 0E0C                       l2782 147C  
                     l2790 0949                       l3558 1C95                       l3494 1297  
                     l3486 126E                       l3478 123E                       l3398 1129  
                     l3566 10CE                       l3590 00C9                       l3582 009F  
                     l3574 007B                       l2960 1BEB                       l2952 1989  
                     l2944 196B                       l2936 1FE7                       l2928 1FCE  
                     l2864 1EF5                       l2856 1ECB                       l2696 0F20  
                     l2688 0E9C                       l2776 13CB                       l2768 12B8  
                     l2792 0950                       l3656 0224                       l3496 129E  
                     l3488 127C                       l3592 00D7                       l3584 00AB  
                     l3576 0089                       l3568 004F                       l2970 1C25  
                     l2962 1BF8                       l2946 196F                       l2938 1FF7  
                     l2890 1F42                       l2866 1EF6                       l2858 1ED4  
                     l2698 0F2E                       l2778 13D1                       l2786 0943  
                     l3498 12A2                       l3594 00DF                       l3586 00B4  
                     l3578 008E                       l2980 1A8D                       l2972 1C26  
                     l2964 1BFC                       l2956 1BD8                       l2948 197C  
                     l2892 1F4F                       l2884 1F29                       l2876 1F10  
                     l2868 1EFE                       l2788 0947                       l3596 011E  
                     l3588 00C0                       l2982 1AA1                       l2974 1C2F  
                     l2966 1C05                       l2958 1BE8                       l2886 1F39  
                     l2878 1F22                       l2798 0A38                       l3598 0123  
                     l2984 1ABD                       l2992 1D27                       l2968 1C17  
                     l2976 1C35                       l2896 1F58                       l2986 1AD7  
                     l2994 1D3B                       l2988 1AD9                       l2996 1D57  
                     l2998 1D5F                       STR_1 08AD                       STR_2 08A0  
                     STR_3 08CB                       STR_4 08D0                       STR_5 08C6  
                     STR_6 08C1                       STR_7 08BC                       STR_8 08B7  
                     u3000 08FA                       u3001 08F9                       u3020 090C  
                     u3100 1B9A                       u3021 090B                       u3101 1B99  
                     u3015 08FE                       u3040 091D                       u3120 1BAC  
                     u3041 091C                       u3121 1BAB                       u4010 0F3B  
                     u3210 0036                       u3130 1BB6                       u4011 0F3A  
                     u3211 0035                       u3035 090D                       u3131 1BB5  
                     u3115 1B9E                       u3300 14D9                       u4100 0FB3  
                     u3060 0931                       u3301 14D8                       u4101 0FB2  
                     u4005 0F30                       u3205 0026                       u3061 0930  
                     u3045 0919                       u3310 14E3                       u4110 0FCD  
                     u4030 0F4F                       u3230 004A                       u3070 0936  
                     u3150 1BC9                       u3311 14E2                       u4111 0FCC  
                     u4031 0F4E                       u3231 0049                       u3215 0032  
                     u3071 0935                       u3055 0925                       u3151 1BC8  
                     u3135 1BB2                       u3400 15EE                       u3320 14E8  
                     u5000 1B47                       u4120 0FEB                       u4040 0F54  
                     u3240 1A17                       u3160 1BCE                       u3080 1B84  
                     u3401 15EC                       u3321 14E7                       u5001 1B46  
                     u4121 0FEA                       u4105 0FAF                       u4041 0F53  
                     u4025 0F3E                       u3225 003E                       u3241 1A16  
                     u3161 1BCD                       u3145 1BBD                       u3081 1B83  
                     u3410 15EF                       u3330 150D                       u5010 1B59  
                     u4050 0F68                       u3170 0013                       u4130 12BE  
                     u3090 1B8F                       u4210 0947                       u3331 150C  
                     u5011 1B58                       u4115 0FC9                       u4051 0F67  
                     u3171 0012                       u4131 12BD                       u3091 1B8E  
                     u4211 0946                       u3500 1674                       u3420 160D  
                     u3340 151E                       u5100 1E38                       u4060 0F6F  
                     u3260 1A29                       u4300 0AFB                       u4220 0950  
                     u3501 1673                       u3421 160C                       u3341 151D  
                     u5101 1E37                       u4061 0F6E                       u3261 1A28  
                     u4205 1487                       u4301 0AFA                       u4221 094F  
                     u3510 1689                       u3430 1622                       u3350 1528  
                     u5030 1B76                       u4070 0F75                       u3190 0025  
                     u3270 1A33                       u3511 1688                       u3431 1621  
                     u3351 1527                       u5031 1B75                       u5015 1B55  
                     u4071 0F74                       u3191 0024                       u3271 1A32  
                     u3255 1A1B                       u5200 1A58                       u3600 1749  
                     u3360 152D                       u5120 1E48                       u5040 1DD1  
                     u4400 1E98                       u4080 0F87                       u3601 1748  
                     u3361 152C                       u5025 1B68                       u5121 1E47  
                     u5041 1DD0                       u4401 1E97                       u4081 0F86  
                     u3185 0017                       u4145 12DB                       u5210 1A7A  
                     u3610 1752                       u3530 16B5                       u3450 163D  
                     u3370 154D                       u5130 1E4E                       u5050 1DD5  
                     u4410 1EB2                       u4090 0F96                       u3290 1A46  
                     u4170 13D1                       u3611 1751                       u3531 16B4  
                     u3451 163C                       u3371 154C                       u5131 1E4D  
                     u5115 1E3D                       u5051 1DD4                       u4411 1EB1  
                     u3291 1A45                       u3275 1A2F                       u4171 13D0  
                     u4155 1335                       u4315 0B1B                       u4235 0970  
                     u5220 1A8C                       u3700 17B7                       u3620 175C  
                     u3460 1641                       u3380 1551                       u5140 1E52  
                     u5060 1DF5                       u4500 1F28                       u4340 0BEA  
                     u4260 0A3F                       u5300 026B                       u5221 1A8B  
                     u3701 17B6                       u3621 175B                       u3541 16CC  
                     u3533 16B1                       u3525 168F                       u3461 1640  
                     u3445 1628                       u3381 1550                       u5141 1E51  
                     u5061 1DF4                       u4501 1F27                       u3285 1A3A  
                     u4165 138A                       u4341 0BE9                       u4325 0B57  
                     u4261 0A3E                       u4245 09AC                       u5301 026A  
                     u3710 17C6                       u3630 1763                       u3550 16E0  
                     u3542 16CD                       u3470 1646                       u3390 15E3  
                     u5150 1E67                       u4430 1EEB                       u5310 02A5  
                     u5230 1919                       u3711 17C5                       u3631 1762  
                     u3551 16E1                       u3543 16D2                       u3471 1645  
                     u3391 15E2                       u4431 1EEA                       u4095 0F91  
                     u4335 0BA2                       u4255 09F7                       u5311 02A4  
                     u5231 1918                       u3720 17CB                       u3640 176A  
                     u3560 1700                       u3552 16E6                       u3544 16D3  
                     u5160 1E77                       u5080 1E16                       u4600 1FCD  
                     u4520 1F39                       u3800 0CE2                       u5400 0466  
                     u5320 02E0                       u5240 18CC                       u3721 17CA  
                     u3641 1769                       u3561 16FF                       u3553 16E7  
                     u3545 16D8                       u3481 165C                       u5161 1E76  
                     u5081 1E15                       u4601 1FCC                       u4521 1F38  
                     u4425 1ED6                       u3801 0CE1                       u4185 13EE  
                     u5401 0465                       u5321 02DF                       u5241 18CB  
                     u3730 17DC                       u3650 1770                       u3570 1728  
                     u3546 16D9                       u3490 166E                       u3482 1663  
                     u5170 1E7B                       u4530 1F4F                       u4450 1F04  
                     u3810 0CE7                       u5330 0369                       u5250 01AB  
                     u3731 17DB                       u3651 176F                       u3571 1727  
                     u3491 166D                       u3483 166A                       u3395 15DF  
                     u5171 1E7A                       u5155 1E62                       u5075 1E08  
                     u4531 1F4E                       u4515 1F2B                       u4451 1F03  
                     u4435 1EE7                       u3811 0CE6                       u4195 143B  
                     u4355 0BFD                       u4275 0A52                       u5331 0368  
                     u5251 01AA                       u5180 194B                       u3740 17E1  
                     u3660 177B                       u3580 172F                       u4700 1BE8  
                     u4620 1FDF                       u4540 1F63                       u4460 1F08  
                     u3820 0CFE                       u4380 1008                       u5420 0577  
                     u5340 038D                       u5260 01C5                       u5181 194A  
                     u3741 17E0                       u3661 177A                       u3581 172E  
                     u4701 1BE7                       u4621 1FDE                       u4541 1F62  
                     u4461 1F07                       u4445 1EF7                       u3901 0E1B  
                     u3821 0CFD                       u4381 1007                       u4365 0C39  
                     u4285 0A8E                       u5421 0576                       u5341 038C  
                     u5261 01C4                       u5190 195D                       u3750 17FC  
                     u3670 1783                       u4630 1FE6                       u4470 1F0F  
                     u2950 19C2                       u3902 0E22                       u3830 0D03  
                     u4390 100E                       u5430 0582                       u5350 03A4  
                     u5270 0209                       u5191 195C                       u3751 17FB  
                     u3671 1782                       u5095 1E2A                       u4631 1FE5  
                     u4615 1FCF                       u4471 1F0E                       u2951 19C1  
                     u3903 0E29                       u3831 0D02                       u4391 100D  
                     u4375 0C75                       u4295 0ACA                       u5431 0581  
                     u5415 0544                       u5351 03A3                       u5271 0208  
                     u4800 1D3B                       u3680 1797                       u4720 1BFC  
                     u4560 1FA4                       u3760 0CB0                       u5520 077E  
                     u5440 058E                       u5360 03FA                       u5280 0238  
                     u5600 10E9                       u4801 1D3A                       u3681 1796  
                     u4721 1BFB                       u4561 1FA3                       u3921 0E51  
                     u3841 0D54                       u3761 0CAF                       u5521 077D  
                     u5505 06D9                       u5441 058D                       u5425 0573  
                     u5361 03F9                       u5281 0237                       u5601 10E8  
                     u4810 1D57                       u3690 17A6                       u4650 1FF7  
                     u4490 1F21                       u2970 19D6                       u3922 0E58  
                     u3842 0D5B                       u3770 0CB6                       u5530 0796  
                     u5370 0415                       u5290 023C                       u5610 10EF  
                     u4811 1D56                       u3595 173C                       u4715 1BED  
                     u4651 1FF6                       u4555 1F8B                       u4491 1F20  
                     u2971 19D5                       u3931 0E7E                       u3923 0E5F  
                     u3915 0E2B                       u3851 0D70                       u3843 0D62  
                     u3771 0CB5                       u5531 0795                       u5515 073F  
                     u5371 0414                       u5355 03A0                       u5291 023B  
                     u5611 10EE                       u4820 1D63                       u4900 1CE5  
                     u4740 1C17                       u4660 196F                       u4580 1FC2  
                     u3932 0E85                       u3852 0D77                       u3780 0CBB  
                     u2980 08DE                       u5540 079D                       u5460 0607  
                     u5380 043C                       u5620 10F4                       u4821 1D62  
                     u4901 1CE4                       u4741 1C16                       u4661 196E  
                     u4645 1FE9                       u4581 1FC1                       u4565 1FA0  
                     u4485 1F11                       u2965 19C9                       u3941 0EAB  
                     u3933 0E8C                       u3861 0D9C                       u3853 0D7E  
                     u3781 0CBA                       u2981 08DD                       u5541 079C  
                     u5461 0606                       u5381 043B                       u5365 03F6  
                     u5621 10F3                       u4910 1CEC                       u4590 1FC6  
                     u3950 0ED5                       u3942 0EB2                       u3862 0DA3  
                     u3790 0CDC                       u2990 08E9                       u5550 07A5  
                     u5470 0628                       u5390 044B                       u5710 11AA  
                     u5630 1116                       u4831 1D72                       u3695 17A1  
                     u4911 1CEB                       u4735 1BFE                       u4591 1FC5  
                     u4575 1FB5                       u3943 0EB9                       u3871 0DB8  
                     u3863 0DAA                       u3791 0CDB                       u2991 08E8  
                     u5551 07A4                       u5471 0627                       u5455 059D  
                     u5391 044A                       u5711 11A9                       u5631 1115  
                     u4840 1D8B                       u4832 1D73                       u4760 1C35  
                     u3872 0DBF                       u5560 07B6                       u5480 0637  
                     u5800 120F                       u5640 111C                       u4841 1D8A  
                     u4833 1D78                       u4761 1C34                       u4745 1C13  
                     u3961 0EE1                       u3873 0DC6                       u5561 07B5  
                     u5481 0636                       u5801 120E                       u5705 119F  
                     u5641 111B                       u4770 1AA1                       u4834 1D79  
                     u4930 1CFE                       u4690 1989                       u3970 0EFD  
                     u3962 0EE8                       u5570 07C6                       u5490 0652  
                     u5810 1223                       u5730 11C6                       u5650 1121  
                     u4771 1AA0                       u4851 1D9A                       u4835 1D7E  
                     u4931 1CFD                       u4755 1C27                       u4691 1988  
                     u4675 1976                       u3963 0EEF                       u3955 0ED0  
                     u3891 0DEE                       u5571 07C5                       u5491 0651  
                     u5475 0624                       u5395 0447                       u5811 1222  
                     u5731 11C5                       u5651 1120                       u4780 1ABD  
                     u4860 1DC5                       u4852 1D9B                       u4836 1D7F  
                     u4940 1D05                       u3892 0DF5                       u5580 07D4  
                     u5820 122A                       u5740 11DF                       u5660 113C  
                     u4781 1ABC                       u4861 1DC4                       u4853 1DA0  
                     u4941 1D04                       u4925 1CEE                       u4685 197D  
                     u3981 0F09                       u3893 0DFC                       u3885 0DC8  
                     u5581 07D3                       u5565 07B2                       u5485 0633  
                     u5821 1229                       u5741 11DE                       u5725 11AD  
                     u5661 113B                       u4790 1AD7                       u4854 1DA1  
                     u4870 18DE                       u3982 0F10                       u5590 07EE  
                     u5830 1230                       u5750 11E7                       u5670 115A  
                     u4791 1AD6                       u4855 1DA6                       u4871 18DD  
                     u3983 0F17                       u3975 0EF8                       u5591 07ED  
                     u5575 07C2                       u5831 122F                       u5751 11E6  
                     u5735 11C2                       u5671 1159                       u4856 1DA7  
                     u4960 1D16                       u4880 1CB8                       u5840 1242  
                     u5680 1194                       u4865 1DC1                       u4961 1D15  
                     u4881 1CB7                       u5841 1241                       u5681 1193  
                     u4970 1D1B                       u4890 1CCF                       u5850 1251  
                     u5770 11F6                       u4795 1AD3                       u4971 1D1A  
                     u4955 1D08                       u3995 0F19                       u5771 11F5  
                     u5907 00D2                       u4980 1B33                       u5860 126E  
                     u4981 1B32                       u5861 126D                       u5765 11EB  
                     u5917 0129                       u5870 128B                       u5790 120A  
                     u4895 1CCA                       u5871 128A                       u5855 124C  
                     u5791 1209                       u5695 1196                       u5927 0138  
                     u5880 12A2                       u5881 12A1                       u5865 126A  
                     u5785 11F9                       u5937 015D                       u4995 1B38  
                     u5875 1287                       u5947 016C                       u5957 0191  
                     u5967 19E8                       u5977 19F5                       u5897 0083  
                     u5987 18F7                       u5997 1909          ?_Lcd_Write_String 0072  
                     _main 004F                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0074            ___fldiv@new_exp 005E               _sprintf$1008 00B6  
          __end_of_Lcd_Cmd 1911              ___fltol@sign1 0068            __end_of___fladd 1800  
                    ?_main 0070            __end_of___fldiv 12B5            __end_of___awdiv 0940  
          __end_of___flneg 18E1            __end_of___awmod 1BD8            __end_of___flmul 1000  
          __end_of___flsub 1B2B            __end_of___fltol 1D27                      _ANSEL 0188  
          __end_of___lldiv 1C3E            ___awdiv@divisor 0077            __end_of___llmod 1B7F  
          __end_of___lwdiv 004F            __end_of___lwmod 1A4B            ___awdiv@counter 0020  
                    _PORTA 0005                      _PORTB 0006                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 0024                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088            __end_of_dpowers 08A0                      _contm 00D8  
                    _scale 0940            __end_of_isdigit 1012                      _tempt 00E0  
                    _setup 1927                      _vpot1 00DC                      pclath 000A  
          __end_of_spiInit 1927            __end_of_spiRead 18D6                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07F3           __end_of_Lcd_Init 1A11  
          __initialization 07F3           __end_of_Contador 19B4               __end_of_main 019D  
        _temperaturac$1004 00D0                     ??_main 00D4         __size_of_Lcd_Clear 000D  
     __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0074                     ?_scale 004C  
         ___awdiv@dividend 0079                     ?_setup 0070                     _ANSELH 0189  
                ??_Lcd_Cmd 0070    __size_of_Lcd_Write_Char 0010                     _TRISC0 0438  
                   _TRISC1 0439                     _TRISC2 043A                     _TRISC3 043B  
                   _TRISC5 043D                     _SSPCON 0014                     _SSPBUF 0013  
         __end_of___xxtofl 1E85           __end_of__powers_ 0844                     ___flge 1D27  
                   ___fleq 1A8D                  ??___fladd 0068                     ___wmul 1969  
                ??___fldiv 0054                  ??___awdiv 007B                  ??___flneg 0074  
                ??___awmod 0074                  ??___flmul 003A                  ??___flsub 007E  
                ??___fltol 0063                  ??___lldiv 0078                  ??___llmod 0078  
                ??___lwdiv 007A                  ??___lwmod 0074                     _fround 12B5  
         ___awdiv@quotient 0022            ___awmod@divisor 0070            ___awmod@counter 0075  
                ??_isdigit 0070         __size_of__Umul8_16 0027           __end_of_spiWrite 18C6  
                ??_spiInit 0073                  ??_spiRead 0070                  ??_sprintf 00B1  
          Lcd_Set_Cursor@a 0075            Lcd_Set_Cursor@b 0073                 ___flge@ff1 0070  
               ___flge@ff2 0074               ___xxtofl@arg 002E               ___xxtofl@exp 002D  
             ___xxtofl@val 0024                 ___fleq@ff1 0070                 ___fleq@ff2 0074  
  __end_of__initialization 07FC                 ___flneg@f1 0070          __end_of_Lcd_Clear 18EE  
               ___fltol@f1 005F             __pcstackCOMMON 0070              __end_of_scale 0C9F  
            __end_of_setup 1945             _Lcd_Set_Cursor 1945                 __div_to_l_ 1F42  
                ?_Lcd_Init 0070            __div_to_l_@exp1 0025            __div_to_l_@cntr 0024  
                  ??_scale 0050            __div_to_l_@quot 0020                    ??_setup 0074  
                ?_Contador 0070                 __pbssBANK1 00D8              __div_to_l_@f1 0070  
            __div_to_l_@f2 0074          __end_of__Umul8_16 19DB                 __pmaintext 004F  
                  ?___flge 0070                    ?___fleq 0070                    ?___wmul 0070  
  __size_of_spiReceiveWait 0007                    ?_fround 004C  __size_of_Lcd_Write_String 0042  
   __end_of_Lcd_Set_Cursor 1969                  ?___xxtofl 0024                 ??_Lcd_Init 0073  
                  _SSPSTAT 0094                 ??_Contador 00CF                 __stringtab 0800  
           _Lcd_Write_Char 18EE                    _Lcd_Cmd 18FE                 _conversion 1C3E  
        __end_of__npowers_ 0878                 _scale$1007 005A                  ?_spiWrite 0070  
          __size_of___flge 00A2            __size_of___fleq 004E                    ___fladd 14C0  
                  ___fldiv 10D8                    ___awdiv 08D7                    ___flneg 18D6  
                  ___awmod 1B7F                    ___flmul 0C9F                    ___flsub 1ADB  
                  ___fltol 1CAB                    ___lldiv 1BD8            __size_of___wmul 0025  
                  ___llmod 1B2B                    ___lwdiv 000B                    ___lwmod 1A11  
          __size_of_fround 020B            ?_Lcd_Set_Cursor 0073                    __ptext1 1012  
                  __ptext2 10D8                    __ptext3 18C0                    __ptext4 18CD  
                  __ptext5 18C6                    __ptext6 1927                    __ptext7 1911  
                  __ptext8 1C3E                    __ptext9 19DB                    _buffer1 00EA  
                  _buffer2 00E9                    _buffer3 00E8                ?__div_to_l_ 0070  
                  _dpowers 0878                    _isdigit 1000                 ??___xxtofl 0028  
         ___awmod@dividend 0072                    _spiInit 1911                    _spiRead 18CD  
                  _sprintf 019D                    clrloop0 0004     __end_of_Lcd_Write_Char 18FE  
            ?_temperaturac 0070       end_of_initialization 07FC            ___lldiv@divisor 0070  
          ___lldiv@counter 007D                 ??_spiWrite 0070             __tdiv_to_l_@f1 0070  
           __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078                  _PORTCbits 0007  
                _PORTDbits 0008                ___fladd@grs 00A3              ___xxtofl@sign 002C  
              ___fldiv@grs 0060                ___fldiv@rem 0059             ??_temperaturac 00CF  
              spiWrite@dat 0070            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0072  
        Lcd_Write_String@i 0077                ___flmul@grs 0040                ?_conversion 0070  
      __size_of__div_to_l_ 00BE                  _Lcd_Clear 18E1             _spiReceiveWait 18C6  
           __end_of___flge 1DC9             __end_of___fleq 1ADB             __end_of___wmul 198E  
         _Lcd_Write_String 1A4B             __end_of_fround 14C0        start_initialization 07F3  
      __end_of__tdiv_to_l_ 1F42          __size_of_Lcd_Init 0036          __size_of_Contador 0026  
          ___llmod@divisor 0070            ___llmod@counter 0079     __end_of_spiReceiveWait 18CD  
               ?_Lcd_Clear 0070                   ??___flge 0078                   ??___fleq 0078  
                 ??___wmul 0074                  __Umul8_16 19B4            Lcd_Write_Char@a 0071  
                 ??_fround 0050              sprintf@tmpval 00C3                  ___fladd@a 0064  
                ___fladd@b 0060        __size_of_conversion 006D                 fround@prec 005F  
                ___fldiv@a 004C                  ___fldiv@b 0050                  ___flmul@a 0036  
                ___flmul@b 0032                  ___flsub@a 00A4                  ___flsub@b 00A8  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070                sprintf@flag 00BB  
              sprintf@eexp 00C1                sprintf@fval 00CA                sprintf@prec 00C7  
         ___lwdiv@dividend 0078            ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0074  
                 ?___fladd 0060                   ?___fldiv 004C                   ?___awdiv 0077  
                 ?___flneg 0070                   ?___awmod 0070                   ?___flmul 0032  
                 ?___flsub 00A4                   ?___fltol 005F                   ?___lldiv 0070  
                 ?___llmod 0070                  __npowers_ 0844                 ?__Umul8_16 0070  
     __end_of_temperaturac 10D8                   ?___lwdiv 0076                   ?___lwmod 0070  
        __size_of_spiWrite 0006                  __pstrings 0800                __tdiv_to_l_ 1E85  
             ??__div_to_l_ 0078                   ?_isdigit 0070                   ?_spiInit 0070  
                 ?_spiRead 0070           ___lwdiv@quotient 007B                   ?_sprintf 00AC  
           __size_of_scale 035F             __size_of_setup 001E       spiInit@sTransmitEdge 0072  
           ___wmul@product 0074                  clear_ram0 0003         spiInit@sDataSample 0070  
                 Lcd_Cmd@a 0072         __end_of__div_to_l_ 2000                ??_Lcd_Clear 0073  
              __stringbase 080F          ___wmul@multiplier 0070           ??_Lcd_Write_Char 0070  
                 _Lcd_Init 19DB                   _Contador 198E   __end_of_Lcd_Write_String 1A8D  
             ??_conversion 00CF           __size_of_Lcd_Cmd 0013                ??__Umul8_16 0072  
         __size_of___fladd 0340           __size_of___fldiv 01DD           __size_of___awdiv 0069  
         __size_of___flneg 000B           __size_of___awmod 0059           __size_of___flmul 0361  
         __size_of___flsub 0050           __size_of___fltol 007C           __size_of___lldiv 0066  
         __size_of___llmod 0054           __size_of___lwdiv 0044           __size_of___lwmod 003A  
              _fround$1005 005B                _fround$1006 0057         __end_of__stringtab 0810  
              _isdigit$821 0070                 sprintf@val 00BD         __end_of_conversion 1CAB  
                 ___xxtofl 1DC9           __size_of_isdigit 0012            ___lwdiv@divisor 0076  
          ___lwdiv@counter 007D                   __ptext10 18E1                   __ptext11 198E  
                 __ptext20 0C9F                   __ptext12 019D                   __ptext21 19B4  
                 __ptext13 0940                   __ptext30 14C0                   __ptext22 1E85  
                 __ptext14 1B7F                   __ptext31 18D6                   __ptext23 1F42  
                 __ptext15 08D7                   __ptext32 1D27                   __ptext24 1DC9  
                 __ptext16 1000                   __ptext33 1A8D                   __ptext25 1969  
                 __ptext17 12B5                   __ptext34 1A4B                   __ptext26 1B2B  
                 __ptext18 1A11                   __ptext35 18EE                   __ptext27 1BD8  
                 __ptext19 000B                   __ptext36 1945                   __ptext28 1CAB  
                 __ptext37 18FE                   __ptext29 1ADB           __size_of_spiInit 0016  
         __size_of_spiRead 0009                   __powers_ 0810           __size_of_sprintf 0656  
            __size_of_main 014E      __size_of_temperaturac 00C6                   _spiWrite 18C0  
             spiInit@sType 0073          spiInit@sClockIdle 0071                   isdigit@c 0071  
                 scale@scl 005E               _temperaturac 1012                  sprintf@ap 00BA  
         __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024                  sprintf@sp 00C9  
         __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
         ??_spiReceiveWait 0070                  stringcode 080A         Lcd_Set_Cursor@temp 0076  
             ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070                   sprintf@c 00CE  
                 sprintf@f 00AC           ___lldiv@quotient 0079            ___lwmod@divisor 0070  
          ___lwmod@counter 0075                   stringdir 080A                   stringtab 0800  
            ___fladd@signs 00A0               ___fladd@aexp 00A1               ___fladd@bexp 00A2  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
