

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Feb 07 23:29:14 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292                           
   293                           	psect	idataBANK0
   294  01DB                     __pidataBANK0:
   295                           
   296                           ;initializer for _DISPLAY2
   297  01DB  343F               	retlw	63
   298  01DC  3406               	retlw	6
   299  01DD  345B               	retlw	91
   300  01DE  344F               	retlw	79
   301  01DF  3466               	retlw	102
   302  01E0  346D               	retlw	109
   303  01E1  347D               	retlw	125
   304  01E2  3407               	retlw	7
   305  01E3  347F               	retlw	127
   306  01E4  346F               	retlw	111
   307  01E5  3477               	retlw	119
   308  01E6  347C               	retlw	124
   309  01E7  3439               	retlw	57
   310  01E8  345E               	retlw	94
   311  01E9  3479               	retlw	121
   312  01EA  3471               	retlw	113
   313                           
   314                           ;initializer for _DISPLAY1
   315  01EB  343F               	retlw	63
   316  01EC  3406               	retlw	6
   317  01ED  345B               	retlw	91
   318  01EE  344F               	retlw	79
   319  01EF  3466               	retlw	102
   320  01F0  346D               	retlw	109
   321  01F1  347D               	retlw	125
   322  01F2  3407               	retlw	7
   323  01F3  347F               	retlw	127
   324  01F4  346F               	retlw	111
   325  01F5  3477               	retlw	119
   326  01F6  347C               	retlw	124
   327  01F7  3439               	retlw	57
   328  01F8  345E               	retlw	94
   329  01F9  3479               	retlw	121
   330  01FA  3471               	retlw	113
   331  0009                     _PORTE	set	9
   332  0008                     _PORTD	set	8
   333  0007                     _PORTC	set	7
   334  0006                     _PORTB	set	6
   335  001F                     _ADCON0bits	set	31
   336  000C                     _PIR1bits	set	12
   337  000B                     _INTCONbits	set	11
   338  0005                     _PORTA	set	5
   339  0001                     _TMR0	set	1
   340  0031                     _RB1	set	49
   341  0030                     _RB0	set	48
   342  0041                     _RD1	set	65
   343  0040                     _RD0	set	64
   344  0042                     _RD2	set	66
   345  005A                     _TMR0IF	set	90
   346  0096                     _IOCBbits	set	150
   347  008C                     _PIE1bits	set	140
   348  0081                     _OPTION_REGbits	set	129
   349  009F                     _ADCON1bits	set	159
   350  0089                     _TRISE	set	137
   351  0088                     _TRISD	set	136
   352  0087                     _TRISC	set	135
   353  0086                     _TRISB	set	134
   354  0085                     _TRISA	set	133
   355  008F                     _OSCCONbits	set	143
   356  009E                     _ADRESL	set	158
   357  0189                     _ANSELH	set	393
   358  0188                     _ANSEL	set	392
   359                           
   360                           	psect	cinit
   361  0013                     start_initialization:	
   362                           ; #config settings
   363                           
   364  0013                     __initialization:
   365                           
   366                           ; Initialize objects allocated to BANK0
   367  0013  1383               	bcf	3,7	;select IRP bank0
   368  0014  3040               	movlw	low (__pdataBANK0+32)
   369  0015  00FD               	movwf	btemp+-1
   370  0016  3001               	movlw	high __pidataBANK0
   371  0017  00FE               	movwf	btemp
   372  0018  30DB               	movlw	low __pidataBANK0
   373  0019  00FF               	movwf	btemp+1
   374  001A  3020               	movlw	low __pdataBANK0
   375  001B  0084               	movwf	4
   376  001C  120A  118A  21FF  120A  118A  	fcall	init_ram0
   377                           
   378                           ; Clear objects allocated to BANK0
   379  0021  01C0               	clrf	__pbssBANK0& (0+127)
   380  0022  01C1               	clrf	(__pbssBANK0+1)& (0+127)
   381  0023  01C2               	clrf	(__pbssBANK0+2)& (0+127)
   382  0024  01C3               	clrf	(__pbssBANK0+3)& (0+127)
   383  0025  01C4               	clrf	(__pbssBANK0+4)& (0+127)
   384  0026  01C5               	clrf	(__pbssBANK0+5)& (0+127)
   385  0027  01C6               	clrf	(__pbssBANK0+6)& (0+127)
   386  0028  01C7               	clrf	(__pbssBANK0+7)& (0+127)
   387  0029                     end_of_initialization:	
   388                           ;End of C runtime variable initialization code
   389                           
   390  0029                     __end_of__initialization:
   391  0029  0183               	clrf	3
   392  002A  120A  118A  2A0E   	ljmp	_main	;jump to C main() function
   393                           
   394                           	psect	bssBANK0
   395  0040                     __pbssBANK0:
   396  0040                     _ANTIREBOTEB:
   397  0040                     	ds	1
   398  0041                     _ANTIREBOTEA:
   399  0041                     	ds	1
   400  0042                     _ADC:
   401  0042                     	ds	1
   402  0043                     _y:
   403  0043                     	ds	1
   404  0044                     _x:
   405  0044                     	ds	1
   406  0045                     _i:
   407  0045                     	ds	1
   408  0046                     _z:
   409  0046                     	ds	1
   410  0047                     _BANDERA:
   411  0047                     	ds	1
   412                           
   413                           	psect	dataBANK0
   414  0020                     __pdataBANK0:
   415  0020                     _DISPLAY2:
   416  0020                     	ds	16
   417  0030                     _DISPLAY1:
   418  0030                     	ds	16
   419                           
   420                           	psect	inittext
   421  01FB                     init_fetch0:	
   422                           ;	Called with low address in FSR and high address in W
   423                           
   424  01FB  087E               	movf	btemp,w
   425  01FC  008A               	movwf	10
   426  01FD  087F               	movf	btemp+1,w
   427  01FE  0082               	movwf	2
   428  01FF                     init_ram0:	
   429                           ;Called with:
   430                           ;	high address of idata address in btemp 
   431                           ;	low address of idata address in btemp+1 
   432                           ;	low address of data in FSR
   433                           ;	high address + 1 of data in btemp-1
   434                           
   435  01FF  120A  118A  21FB  120A  118A  	fcall	init_fetch0
   436  0204  0080               	movwf	0
   437  0205  0A84               	incf	4,f
   438  0206  0804               	movf	4,w
   439  0207  067D               	xorwf	btemp+-1,w
   440  0208  1903               	btfsc	3,2
   441  0209  3400               	retlw	0
   442  020A  0AFF               	incf	btemp+1,f
   443  020B  1903               	btfsc	3,2
   444  020C  0AFE               	incf	btemp,f
   445  020D  29FF               	goto	init_ram0
   446                           
   447                           	psect	cstackCOMMON
   448  0070                     __pcstackCOMMON:
   449  0070                     ?_desplegar:
   450  0070                     ?_operacion:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ??_operacion:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_setup:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_analogico:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_ISR:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_main:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?_TOGGLE:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ??_TOGGLE:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ?_NIBBLES:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?___awdiv:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ___awdiv@divisor:	
   481                           ; 2 bytes @ 0x0
   482                           
   483                           
   484                           ; 2 bytes @ 0x0
   485  0070                     	ds	2
   486  0072                     ___awdiv@dividend:
   487                           
   488                           ; 2 bytes @ 0x2
   489  0072                     	ds	2
   490  0074                     ??___awdiv:
   491                           
   492                           ; 1 bytes @ 0x4
   493  0074                     	ds	1
   494  0075                     ___awdiv@counter:
   495                           
   496                           ; 1 bytes @ 0x5
   497  0075                     	ds	1
   498  0076                     ___awdiv@sign:
   499                           
   500                           ; 1 bytes @ 0x6
   501  0076                     	ds	1
   502  0077                     ___awdiv@quotient:
   503                           
   504                           ; 2 bytes @ 0x7
   505  0077                     	ds	2
   506  0079                     ??_NIBBLES:
   507                           
   508                           ; 1 bytes @ 0x9
   509  0079                     	ds	3
   510  007C                     ??_desplegar:
   511                           
   512                           ; 1 bytes @ 0xC
   513  007C                     	ds	1
   514  007D                     desplegar@mostrar:
   515                           
   516                           ; 1 bytes @ 0xD
   517  007D                     	ds	1
   518                           
   519                           	psect	cstackBANK0
   520  0048                     __pcstackBANK0:
   521  0048                     ??_ISR:
   522                           
   523                           ; 1 bytes @ 0x0
   524  0048                     	ds	3
   525  004B                     ??_setup:
   526  004B                     ??_analogico:	
   527                           ; 1 bytes @ 0x3
   528                           
   529                           
   530                           ; 1 bytes @ 0x3
   531  004B                     	ds	2
   532  004D                     ??_main:
   533                           
   534                           	psect	maintext
   535  020E                     __pmaintext:	
   536                           ; 1 bytes @ 0x5
   537 ;;
   538 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   539 ;;
   540 ;; *************** function _main *****************
   541 ;; Defined at:
   542 ;;		line 69 in file "newmain.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;		None
   545 ;; Auto vars:     Size  Location     Type
   546 ;;		None
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      void 
   549 ;; Registers used:
   550 ;;		wreg, status,2, status,0, pclath, cstack
   551 ;; Tracked objects:
   552 ;;		On entry : B00/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   556 ;;      Params:         0       0       0       0       0
   557 ;;      Locals:         0       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0
   559 ;;      Totals:         0       0       0       0       0
   560 ;;Total ram usage:        0 bytes
   561 ;; Hardware stack levels required when called:    5
   562 ;; This function calls:
   563 ;;		_analogico
   564 ;;		_setup
   565 ;; This function is called by:
   566 ;;		Startup code after reset
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           
   571                           ;psect for function _main
   572  020E                     _main:
   573  020E                     l1273:	
   574                           ;incstack = 0
   575                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   576                           
   577                           
   578                           ;newmain.c: 71:     setup();
   579  020E  120A  118A  2094  120A  118A  	fcall	_setup
   580                           
   581                           ;newmain.c: 72:     analogico();
   582  0213  120A  118A  20EB  120A  118A  	fcall	_analogico
   583  0218                     l59:
   584  0218  120A  118A  2810   	ljmp	start
   585  021B                     __end_of_main:
   586                           
   587                           	psect	text1
   588  0094                     __ptext1:	
   589 ;; *************** function _setup *****************
   590 ;; Defined at:
   591 ;;		line 7 in file "ADC.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;		None
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		wreg, status,2, status,0
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   605 ;;      Params:         0       0       0       0       0
   606 ;;      Locals:         0       0       0       0       0
   607 ;;      Temps:          0       0       0       0       0
   608 ;;      Totals:         0       0       0       0       0
   609 ;;Total ram usage:        0 bytes
   610 ;; Hardware stack levels used:    1
   611 ;; Hardware stack levels required when called:    4
   612 ;; This function calls:
   613 ;;		Nothing
   614 ;; This function is called by:
   615 ;;		_main
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           
   620                           ;psect for function _setup
   621  0094                     _setup:
   622  0094                     l1135:	
   623                           ;incstack = 0
   624                           ; Regs used in _setup: [wreg+status,2+status,0]
   625                           
   626                           
   627                           ;ADC.c: 10:     OSCCONbits.IRCF = 0b110;
   628  0094  1683               	bsf	3,5	;RP0=1, select bank1
   629  0095  1303               	bcf	3,6	;RP1=0, select bank1
   630  0096  080F               	movf	15,w	;volatile
   631  0097  398F               	andlw	-113
   632  0098  3860               	iorlw	96
   633  0099  008F               	movwf	15	;volatile
   634  009A                     l1137:
   635                           
   636                           ;ADC.c: 11:     OSCCONbits.OSTS= 0;
   637  009A  118F               	bcf	15,3	;volatile
   638  009B                     l1139:
   639                           
   640                           ;ADC.c: 12:     OSCCONbits.HTS = 0;
   641  009B  110F               	bcf	15,2	;volatile
   642  009C                     l1141:
   643                           
   644                           ;ADC.c: 13:     OSCCONbits.LTS = 0;
   645  009C  108F               	bcf	15,1	;volatile
   646  009D                     l1143:
   647                           
   648                           ;ADC.c: 14:     OSCCONbits.SCS = 0;
   649  009D  100F               	bcf	15,0	;volatile
   650  009E                     l1145:
   651                           
   652                           ;ADC.c: 18:     ANSEL = 0b00000000;
   653  009E  1683               	bsf	3,5	;RP0=1, select bank3
   654  009F  1703               	bsf	3,6	;RP1=1, select bank3
   655  00A0  0188               	clrf	8	;volatile
   656  00A1                     l1147:
   657                           
   658                           ;ADC.c: 19:     ANSELH = 0b00100000;
   659  00A1  3020               	movlw	32
   660  00A2  0089               	movwf	9	;volatile
   661  00A3                     l1149:
   662                           
   663                           ;ADC.c: 20:     TRISA = 0b00000000;
   664  00A3  1683               	bsf	3,5	;RP0=1, select bank1
   665  00A4  1303               	bcf	3,6	;RP1=0, select bank1
   666  00A5  0185               	clrf	5	;volatile
   667  00A6                     l1151:
   668                           
   669                           ;ADC.c: 21:     TRISB = 0b00100011;
   670  00A6  3023               	movlw	35
   671  00A7  0086               	movwf	6	;volatile
   672  00A8                     l1153:
   673                           
   674                           ;ADC.c: 23:     TRISC = 0b00000000;
   675  00A8  0187               	clrf	7	;volatile
   676  00A9                     l1155:
   677                           
   678                           ;ADC.c: 24:     TRISD = 0b00000000;
   679  00A9  0188               	clrf	8	;volatile
   680  00AA                     l1157:
   681                           
   682                           ;ADC.c: 25:     TRISE = 0;
   683  00AA  0189               	clrf	9	;volatile
   684  00AB                     l1159:
   685                           
   686                           ;ADC.c: 26:     PORTA = 0;
   687  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   688  00AC  1303               	bcf	3,6	;RP1=0, select bank0
   689  00AD  0185               	clrf	5	;volatile
   690  00AE                     l1161:
   691                           
   692                           ;ADC.c: 27:     PORTB = 0;
   693  00AE  0186               	clrf	6	;volatile
   694  00AF                     l1163:
   695                           
   696                           ;ADC.c: 28:     PORTC = 0;
   697  00AF  0187               	clrf	7	;volatile
   698  00B0                     l1165:
   699                           
   700                           ;ADC.c: 29:     PORTD = 0;
   701  00B0  0188               	clrf	8	;volatile
   702  00B1                     l1167:
   703                           
   704                           ;ADC.c: 30:     PORTE = 0;
   705  00B1  0189               	clrf	9	;volatile
   706  00B2                     l1169:
   707                           
   708                           ;ADC.c: 33:     ADCON0bits.ADCS0 = 1;
   709  00B2  171F               	bsf	31,6	;volatile
   710  00B3                     l1171:
   711                           
   712                           ;ADC.c: 34:     ADCON0bits.ADCS1 = 0;
   713  00B3  139F               	bcf	31,7	;volatile
   714  00B4                     l1173:
   715                           
   716                           ;ADC.c: 35:     ADCON0bits.CHS0 = 1;
   717  00B4  151F               	bsf	31,2	;volatile
   718  00B5                     l1175:
   719                           
   720                           ;ADC.c: 36:     ADCON0bits.CHS1 = 0;
   721  00B5  119F               	bcf	31,3	;volatile
   722  00B6                     l1177:
   723                           
   724                           ;ADC.c: 37:     ADCON0bits.CHS2 = 1;
   725  00B6  161F               	bsf	31,4	;volatile
   726  00B7                     l1179:
   727                           
   728                           ;ADC.c: 38:     ADCON0bits.CHS3 = 1;
   729  00B7  169F               	bsf	31,5	;volatile
   730  00B8                     l1181:
   731                           
   732                           ;ADC.c: 39:     ADCON0bits.ADON = 1;
   733  00B8  141F               	bsf	31,0	;volatile
   734  00B9                     l1183:
   735                           
   736                           ;ADC.c: 40:     ADCON1bits.ADFM = 1;
   737  00B9  1683               	bsf	3,5	;RP0=1, select bank1
   738  00BA  1303               	bcf	3,6	;RP1=0, select bank1
   739  00BB  179F               	bsf	31,7	;volatile
   740  00BC                     l1185:
   741                           
   742                           ;ADC.c: 41:     ADCON1bits.VCFG0 = 0;
   743  00BC  121F               	bcf	31,4	;volatile
   744  00BD                     l1187:
   745                           
   746                           ;ADC.c: 42:     ADCON1bits.VCFG1 = 0;
   747  00BD  129F               	bcf	31,5	;volatile
   748  00BE                     l1189:
   749                           
   750                           ;ADC.c: 43:     ADCON0bits.GO_DONE = 0;
   751  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   752  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   753  00C0  109F               	bcf	31,1	;volatile
   754  00C1                     l1191:
   755                           
   756                           ;ADC.c: 46:     OPTION_REGbits.nRBPU = 1;
   757  00C1  1683               	bsf	3,5	;RP0=1, select bank1
   758  00C2  1303               	bcf	3,6	;RP1=0, select bank1
   759  00C3  1781               	bsf	1,7	;volatile
   760  00C4                     l1193:
   761                           
   762                           ;ADC.c: 47:     OPTION_REGbits.INTEDG = 0;
   763  00C4  1301               	bcf	1,6	;volatile
   764  00C5                     l1195:
   765                           
   766                           ;ADC.c: 48:     OPTION_REGbits.T0CS = 0;
   767  00C5  1281               	bcf	1,5	;volatile
   768  00C6                     l1197:
   769                           
   770                           ;ADC.c: 49:     OPTION_REGbits.T0SE = 0;
   771  00C6  1201               	bcf	1,4	;volatile
   772  00C7                     l1199:
   773                           
   774                           ;ADC.c: 50:     OPTION_REGbits.PSA = 0;
   775  00C7  1181               	bcf	1,3	;volatile
   776                           
   777                           ;ADC.c: 51:     OPTION_REGbits.PS = 0b010;
   778  00C8  0801               	movf	1,w	;volatile
   779  00C9  39F8               	andlw	-8
   780  00CA  3802               	iorlw	2
   781  00CB  0081               	movwf	1	;volatile
   782  00CC                     l1201:
   783                           
   784                           ;ADC.c: 52:     TMR0 = 2;
   785  00CC  3002               	movlw	2
   786  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   787  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   788  00CF  0081               	movwf	1	;volatile
   789  00D0                     l1203:
   790                           
   791                           ;ADC.c: 55:     INTCONbits.GIE = 1;
   792  00D0  178B               	bsf	11,7	;volatile
   793  00D1                     l1205:
   794                           
   795                           ;ADC.c: 57:     INTCONbits.T0IE= 1;
   796  00D1  168B               	bsf	11,5	;volatile
   797  00D2                     l1207:
   798                           
   799                           ;ADC.c: 60:     INTCONbits.T0IF= 0;
   800  00D2  110B               	bcf	11,2	;volatile
   801  00D3                     l1209:
   802                           
   803                           ;ADC.c: 67:     PIE1bits.ADIE = 1;
   804  00D3  1683               	bsf	3,5	;RP0=1, select bank1
   805  00D4  1303               	bcf	3,6	;RP1=0, select bank1
   806  00D5  170C               	bsf	12,6	;volatile
   807  00D6                     l1211:
   808                           
   809                           ;ADC.c: 68:     PIR1bits.ADIF = 0;
   810  00D6  1283               	bcf	3,5	;RP0=0, select bank0
   811  00D7  1303               	bcf	3,6	;RP1=0, select bank0
   812  00D8  130C               	bcf	12,6	;volatile
   813  00D9                     l1213:
   814                           
   815                           ;ADC.c: 70:     INTCONbits.PEIE = 1;
   816  00D9  170B               	bsf	11,6	;volatile
   817  00DA                     l1215:
   818                           
   819                           ;ADC.c: 73:     INTCONbits.RBIF= 0;
   820  00DA  100B               	bcf	11,0	;volatile
   821  00DB                     l1217:
   822                           
   823                           ;ADC.c: 74:     INTCONbits.RBIE= 1;
   824  00DB  158B               	bsf	11,3	;volatile
   825  00DC                     l1219:
   826                           
   827                           ;ADC.c: 75:     IOCBbits.IOCB0 = 1;
   828  00DC  1683               	bsf	3,5	;RP0=1, select bank1
   829  00DD  1303               	bcf	3,6	;RP1=0, select bank1
   830  00DE  1416               	bsf	22,0	;volatile
   831  00DF                     l1221:
   832                           
   833                           ;ADC.c: 76:     IOCBbits.IOCB1 = 1;
   834  00DF  1496               	bsf	22,1	;volatile
   835  00E0                     l1223:
   836                           
   837                           ;ADC.c: 79:     i = 0;
   838  00E0  1283               	bcf	3,5	;RP0=0, select bank0
   839  00E1  1303               	bcf	3,6	;RP1=0, select bank0
   840  00E2  01C5               	clrf	_i
   841  00E3                     l1225:
   842                           
   843                           ;ADC.c: 80:     z = 0;
   844  00E3  01C6               	clrf	_z
   845  00E4                     l1227:
   846                           
   847                           ;ADC.c: 81:     RD2 = 0;
   848  00E4  1108               	bcf	8,2	;volatile
   849  00E5                     l1229:
   850                           
   851                           ;ADC.c: 82:     RD0 = 0;
   852  00E5  1008               	bcf	8,0	;volatile
   853  00E6                     l1231:
   854                           
   855                           ;ADC.c: 83:     RD1 = 0;
   856  00E6  1088               	bcf	8,1	;volatile
   857  00E7                     l1233:
   858                           
   859                           ;ADC.c: 84:     y=0;
   860  00E7  01C3               	clrf	_y
   861  00E8                     l1235:
   862                           
   863                           ;ADC.c: 85:     x=0;
   864  00E8  01C4               	clrf	_x
   865  00E9                     l1237:
   866                           
   867                           ;ADC.c: 86:     BANDERA = 0;
   868  00E9  01C7               	clrf	_BANDERA
   869  00EA                     l145:
   870  00EA  0008               	return
   871  00EB                     __end_of_setup:
   872                           
   873                           	psect	text2
   874  00EB                     __ptext2:	
   875 ;; *************** function _analogico *****************
   876 ;; Defined at:
   877 ;;		line 76 in file "newmain.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   891 ;;      Params:         0       0       0       0       0
   892 ;;      Locals:         0       0       0       0       0
   893 ;;      Temps:          0       2       0       0       0
   894 ;;      Totals:         0       2       0       0       0
   895 ;;Total ram usage:        2 bytes
   896 ;; Hardware stack levels used:    1
   897 ;; Hardware stack levels required when called:    4
   898 ;; This function calls:
   899 ;;		Nothing
   900 ;; This function is called by:
   901 ;;		_main
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905                           
   906                           ;psect for function _analogico
   907  00EB                     _analogico:
   908  00EB                     l62:	
   909                           ;incstack = 0
   910                           ; Regs used in _analogico: [wreg]
   911                           ;newmain.c: 77:         while(1){
   912                           
   913  00EB                     l1239:
   914                           
   915                           ;newmain.c: 80:             if (ADRESL >i){
   916  00EB  1683               	bsf	3,5	;RP0=1, select bank1
   917  00EC  1303               	bcf	3,6	;RP1=0, select bank1
   918  00ED  081E               	movf	30,w	;volatile
   919  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   920  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   921  00F0  0245               	subwf	_i,w
   922  00F1  1803               	skipnc
   923  00F2  28F4               	goto	u451
   924  00F3  28F5               	goto	u450
   925  00F4                     u451:
   926  00F4  28F6               	goto	l1243
   927  00F5                     u450:
   928  00F5                     l1241:
   929                           
   930                           ;newmain.c: 81:                 RD2 = 1;
   931  00F5  1508               	bsf	8,2	;volatile
   932  00F6                     l1243:
   933                           
   934                           ;newmain.c: 83:             if (ADRESL <=i){
   935  00F6  1683               	bsf	3,5	;RP0=1, select bank1
   936  00F7  1303               	bcf	3,6	;RP1=0, select bank1
   937  00F8  081E               	movf	30,w	;volatile
   938  00F9  1283               	bcf	3,5	;RP0=0, select bank0
   939  00FA  1303               	bcf	3,6	;RP1=0, select bank0
   940  00FB  0245               	subwf	_i,w
   941  00FC  1C03               	skipc
   942  00FD  28FF               	goto	u461
   943  00FE  2900               	goto	u460
   944  00FF                     u461:
   945  00FF  2901               	goto	l64
   946  0100                     u460:
   947  0100                     l1245:
   948                           
   949                           ;newmain.c: 84:                 RD2 = 0;
   950  0100  1108               	bcf	8,2	;volatile
   951  0101                     l64:	
   952                           ;newmain.c: 85:             }
   953                           
   954                           
   955                           ;newmain.c: 86:             ADCON0bits.GO_DONE = 1;
   956  0101  149F               	bsf	31,1	;volatile
   957  0102                     l1247:
   958                           
   959                           ;newmain.c: 87:         _delay((unsigned long)((10)*(8000000/4000.0)));
   960  0102  301A               	movlw	26
   961  0103  1283               	bcf	3,5	;RP0=0, select bank0
   962  0104  1303               	bcf	3,6	;RP1=0, select bank0
   963  0105  00CC               	movwf	??_analogico+1
   964  0106  30F7               	movlw	247
   965  0107  00CB               	movwf	??_analogico
   966  0108                     u517:
   967  0108  0BCB               	decfsz	??_analogico,f
   968  0109  2908               	goto	u517
   969  010A  0BCC               	decfsz	??_analogico+1,f
   970  010B  2908               	goto	u517
   971  010C  290D               	nop2
   972  010D                     l1249:
   973                           
   974                           ;newmain.c: 88:         if(ADCON0bits.GO_DONE == 0){
   975  010D  1283               	bcf	3,5	;RP0=0, select bank0
   976  010E  1303               	bcf	3,6	;RP1=0, select bank0
   977  010F  189F               	btfsc	31,1	;volatile
   978  0110  2912               	goto	u471
   979  0111  2913               	goto	u470
   980  0112                     u471:
   981  0112  28EB               	goto	l62
   982  0113                     u470:
   983  0113                     l1251:
   984                           
   985                           ;newmain.c: 90:             x = ADRESL;
   986  0113  1683               	bsf	3,5	;RP0=1, select bank1
   987  0114  1303               	bcf	3,6	;RP1=0, select bank1
   988  0115  081E               	movf	30,w	;volatile
   989  0116  1283               	bcf	3,5	;RP0=0, select bank0
   990  0117  1303               	bcf	3,6	;RP1=0, select bank0
   991  0118  00CB               	movwf	??_analogico
   992  0119  084B               	movf	??_analogico,w
   993  011A  00C4               	movwf	_x
   994                           
   995                           ;newmain.c: 91:             y = ADRESL;
   996  011B  1683               	bsf	3,5	;RP0=1, select bank1
   997  011C  1303               	bcf	3,6	;RP1=0, select bank1
   998  011D  081E               	movf	30,w	;volatile
   999  011E  1283               	bcf	3,5	;RP0=0, select bank0
  1000  011F  1303               	bcf	3,6	;RP1=0, select bank0
  1001  0120  00CB               	movwf	??_analogico
  1002  0121  084B               	movf	??_analogico,w
  1003  0122  00C3               	movwf	_y
  1004  0123  28EB               	goto	l62
  1005  0124  0008               	return
  1006  0125                     __end_of_analogico:
  1007                           
  1008                           	psect	text3
  1009  018C                     __ptext3:	
  1010 ;; *************** function _ISR *****************
  1011 ;; Defined at:
  1012 ;;		line 36 in file "newmain.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  1    wreg      void 
  1019 ;; Registers used:
  1020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         0       0       0       0       0
  1027 ;;      Locals:         0       0       0       0       0
  1028 ;;      Temps:          0       3       0       0       0
  1029 ;;      Totals:         0       3       0       0       0
  1030 ;;Total ram usage:        3 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    3
  1033 ;; This function calls:
  1034 ;;		_desplegar
  1035 ;;		_operacion
  1036 ;; This function is called by:
  1037 ;;		Interrupt level 1
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           
  1042                           ;psect for function _ISR
  1043  018C                     _ISR:
  1044  018C                     i1l1253:
  1045                           
  1046                           ;newmain.c: 38:     if (TMR0IF == 1 ){
  1047  018C  1D0B               	btfss	11,2	;volatile
  1048  018D  298F               	goto	u48_21
  1049  018E  2990               	goto	u48_20
  1050  018F                     u48_21:
  1051  018F  299D               	goto	i1l51
  1052  0190                     u48_20:
  1053  0190                     i1l1255:
  1054                           
  1055                           ;newmain.c: 39:         desplegar();
  1056  0190  120A  118A  215B  120A  118A  	fcall	_desplegar
  1057  0195                     i1l1257:
  1058                           
  1059                           ;newmain.c: 41:         TMR0IF=0;
  1060  0195  110B               	bcf	11,2	;volatile
  1061  0196                     i1l1259:
  1062                           
  1063                           ;newmain.c: 42:         TMR0= 2;
  1064  0196  3002               	movlw	2
  1065  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1066  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1067  0199  0081               	movwf	1	;volatile
  1068  019A                     i1l1261:
  1069                           
  1070                           ;newmain.c: 43:         PORTA = i;
  1071  019A  0845               	movf	_i,w
  1072  019B  0085               	movwf	5	;volatile
  1073  019C  29AE               	goto	i1l52
  1074  019D                     i1l51:	
  1075                           ;newmain.c: 45:     }
  1076                           
  1077                           
  1078                           ;newmain.c: 46:     if (INTCONbits.RBIF ==1 ){
  1079  019D  1C0B               	btfss	11,0	;volatile
  1080  019E  29A0               	goto	u49_21
  1081  019F  29A1               	goto	u49_20
  1082  01A0                     u49_21:
  1083  01A0  29A9               	goto	i1l53
  1084  01A1                     u49_20:
  1085  01A1                     i1l1265:
  1086                           
  1087                           ;newmain.c: 47:         INTCONbits.RBIF = 0;
  1088  01A1  100B               	bcf	11,0	;volatile
  1089                           
  1090                           ;newmain.c: 48:         (INTCONbits.GIE = 0);
  1091  01A2  138B               	bcf	11,7	;volatile
  1092  01A3                     i1l1267:
  1093                           
  1094                           ;newmain.c: 50:         operacion();
  1095  01A3  120A  118A  2125  120A  118A  	fcall	_operacion
  1096  01A8  29AE               	goto	i1l52
  1097  01A9                     i1l53:	
  1098                           ;newmain.c: 53:     }
  1099                           
  1100                           
  1101                           ;newmain.c: 54:     if (PIR1bits.ADIF ==1){
  1102  01A9  1F0C               	btfss	12,6	;volatile
  1103  01AA  29AC               	goto	u50_21
  1104  01AB  29AD               	goto	u50_20
  1105  01AC                     u50_21:
  1106  01AC  29AE               	goto	i1l52
  1107  01AD                     u50_20:
  1108  01AD                     i1l1271:
  1109                           
  1110                           ;newmain.c: 56:         PIR1bits.ADIF = 0;
  1111  01AD  130C               	bcf	12,6	;volatile
  1112  01AE                     i1l52:	
  1113                           ;newmain.c: 63:         return;
  1114                           
  1115  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1116  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1117  01B0  084A               	movf	??_ISR+2,w
  1118  01B1  008A               	movwf	10
  1119  01B2  0849               	movf	??_ISR+1,w
  1120  01B3  0084               	movwf	4
  1121  01B4  0E48               	swapf	??_ISR,w
  1122  01B5  0083               	movwf	3
  1123  01B6  0EFE               	swapf	btemp,f
  1124  01B7  0E7E               	swapf	btemp,w
  1125  01B8  0009               	retfie
  1126  01B9                     __end_of_ISR:
  1127                           
  1128                           	psect	intentry
  1129  0004                     __pintentry:	
  1130                           ;incstack = 0
  1131                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1132                           
  1133  0004                     interrupt_function:
  1134  007E                     saved_w	set	btemp
  1135  0004  00FE               	movwf	btemp
  1136  0005  0E03               	swapf	3,w
  1137  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1138  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1139  0008  00C8               	movwf	??_ISR
  1140  0009  0804               	movf	4,w
  1141  000A  00C9               	movwf	??_ISR+1
  1142  000B  080A               	movf	10,w
  1143  000C  00CA               	movwf	??_ISR+2
  1144  000D  120A  118A  298C   	ljmp	_ISR
  1145                           
  1146                           	psect	text4
  1147  0125                     __ptext4:	
  1148 ;; *************** function _operacion *****************
  1149 ;; Defined at:
  1150 ;;		line 133 in file "ADC.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg, status,2, status,0
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1164 ;;      Params:         0       0       0       0       0
  1165 ;;      Locals:         0       0       0       0       0
  1166 ;;      Temps:          1       0       0       0       0
  1167 ;;      Totals:         1       0       0       0       0
  1168 ;;Total ram usage:        1 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_ISR
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           
  1178                           ;psect for function _operacion
  1179  0125                     _operacion:
  1180  0125                     i1l1105:	
  1181                           ;incstack = 0
  1182                           ; Regs used in _operacion: [wreg+status,2+status,0]
  1183                           
  1184                           
  1185                           ;ADC.c: 134:       if (RB0 == 1){
  1186  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1187  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1188  0127  1C06               	btfss	6,0	;volatile
  1189  0128  292A               	goto	u39_21
  1190  0129  292B               	goto	u39_20
  1191  012A                     u39_21:
  1192  012A  292E               	goto	i1l161
  1193  012B                     u39_20:
  1194  012B                     i1l1107:
  1195                           
  1196                           ;ADC.c: 135:            ANTIREBOTEA = 1;
  1197  012B  01C1               	clrf	_ANTIREBOTEA
  1198  012C  0AC1               	incf	_ANTIREBOTEA,f
  1199                           
  1200                           ;ADC.c: 136:            (INTCONbits.GIE = 0);
  1201  012D  138B               	bcf	11,7	;volatile
  1202  012E                     i1l161:	
  1203                           ;ADC.c: 137:        }
  1204                           
  1205                           
  1206                           ;ADC.c: 138:         if(RB0 == 0 && ANTIREBOTEA ==1 ){
  1207  012E  1806               	btfsc	6,0	;volatile
  1208  012F  2931               	goto	u40_21
  1209  0130  2932               	goto	u40_20
  1210  0131                     u40_21:
  1211  0131  2942               	goto	i1l162
  1212  0132                     u40_20:
  1213  0132                     i1l1109:
  1214  0132  0341               	decf	_ANTIREBOTEA,w
  1215  0133  1D03               	btfss	3,2
  1216  0134  2936               	goto	u41_21
  1217  0135  2937               	goto	u41_20
  1218  0136                     u41_21:
  1219  0136  2942               	goto	i1l162
  1220  0137                     u41_20:
  1221  0137                     i1l1111:
  1222                           
  1223                           ;ADC.c: 139:             ANTIREBOTEA = 0;
  1224  0137  01C1               	clrf	_ANTIREBOTEA
  1225  0138                     i1l1113:
  1226                           
  1227                           ;ADC.c: 141:             ADC++;
  1228  0138  3001               	movlw	1
  1229  0139  00F0               	movwf	??_operacion
  1230  013A  0870               	movf	??_operacion,w
  1231  013B  07C2               	addwf	_ADC,f
  1232  013C                     i1l1115:
  1233                           
  1234                           ;ADC.c: 143:             i = ADC;
  1235  013C  0842               	movf	_ADC,w
  1236  013D  00F0               	movwf	??_operacion
  1237  013E  0870               	movf	??_operacion,w
  1238  013F  00C5               	movwf	_i
  1239  0140                     i1l1117:
  1240                           
  1241                           ;ADC.c: 144:             (INTCONbits.GIE = 1);
  1242  0140  178B               	bsf	11,7	;volatile
  1243  0141  295A               	goto	i1l163
  1244  0142                     i1l162:	
  1245                           ;ADC.c: 147:         }
  1246                           
  1247                           
  1248                           ;ADC.c: 149:        if(RB1 == 1 ){
  1249  0142  1C86               	btfss	6,1	;volatile
  1250  0143  2945               	goto	u42_21
  1251  0144  2946               	goto	u42_20
  1252  0145                     u42_21:
  1253  0145  2949               	goto	i1l164
  1254  0146                     u42_20:
  1255  0146                     i1l1121:
  1256                           
  1257                           ;ADC.c: 150:             ANTIREBOTEB= 1;
  1258  0146  01C0               	clrf	_ANTIREBOTEB
  1259  0147  0AC0               	incf	_ANTIREBOTEB,f
  1260                           
  1261                           ;ADC.c: 151:             (INTCONbits.GIE = 0);
  1262  0148  138B               	bcf	11,7	;volatile
  1263  0149                     i1l164:	
  1264                           ;ADC.c: 153:         }
  1265                           
  1266                           
  1267                           ;ADC.c: 154:        if(RB1 == 0 && ANTIREBOTEB ==1){
  1268  0149  1886               	btfsc	6,1	;volatile
  1269  014A  294C               	goto	u43_21
  1270  014B  294D               	goto	u43_20
  1271  014C                     u43_21:
  1272  014C  295A               	goto	i1l163
  1273  014D                     u43_20:
  1274  014D                     i1l1123:
  1275  014D  0340               	decf	_ANTIREBOTEB,w
  1276  014E  1D03               	btfss	3,2
  1277  014F  2951               	goto	u44_21
  1278  0150  2952               	goto	u44_20
  1279  0151                     u44_21:
  1280  0151  295A               	goto	i1l163
  1281  0152                     u44_20:
  1282  0152                     i1l1125:
  1283                           
  1284                           ;ADC.c: 155:             ANTIREBOTEB= 0;
  1285  0152  01C0               	clrf	_ANTIREBOTEB
  1286  0153                     i1l1127:
  1287                           
  1288                           ;ADC.c: 156:             ADC--;
  1289  0153  3001               	movlw	1
  1290  0154  02C2               	subwf	_ADC,f
  1291  0155                     i1l1129:
  1292                           
  1293                           ;ADC.c: 158:             i = ADC;
  1294  0155  0842               	movf	_ADC,w
  1295  0156  00F0               	movwf	??_operacion
  1296  0157  0870               	movf	??_operacion,w
  1297  0158  00C5               	movwf	_i
  1298  0159                     i1l1131:
  1299                           
  1300                           ;ADC.c: 159:             (INTCONbits.GIE = 1);
  1301  0159  178B               	bsf	11,7	;volatile
  1302  015A                     i1l163:
  1303  015A  0008               	return
  1304  015B                     __end_of_operacion:
  1305                           
  1306                           	psect	text5
  1307  015B                     __ptext5:	
  1308 ;; *************** function _desplegar *****************
  1309 ;; Defined at:
  1310 ;;		line 106 in file "ADC.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  mostrar         1   13[COMMON] unsigned char 
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1324 ;;      Params:         0       0       0       0       0
  1325 ;;      Locals:         1       0       0       0       0
  1326 ;;      Temps:          1       0       0       0       0
  1327 ;;      Totals:         2       0       0       0       0
  1328 ;;Total ram usage:        2 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; Hardware stack levels required when called:    2
  1331 ;; This function calls:
  1332 ;;		_NIBBLES
  1333 ;;		_TOGGLE
  1334 ;; This function is called by:
  1335 ;;		_ISR
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           
  1340                           ;psect for function _desplegar
  1341  015B                     _desplegar:
  1342  015B                     i1l1075:	
  1343                           ;incstack = 0
  1344                           ; Regs used in _desplegar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1345                           
  1346                           
  1347                           ;ADC.c: 107:        NIBBLES();
  1348  015B  120A  118A  21B9  120A  118A  	fcall	_NIBBLES
  1349  0160                     i1l1077:
  1350  0160                     i1l1079:
  1351                           
  1352                           ;ADC.c: 110:         RD0 = 0;
  1353  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1354  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1355  0162  1008               	bcf	8,0	;volatile
  1356  0163                     i1l1081:
  1357                           
  1358                           ;ADC.c: 111:         RD1 = 0;
  1359  0163  1088               	bcf	8,1	;volatile
  1360  0164                     i1l1083:
  1361                           
  1362                           ;ADC.c: 112:         if(BANDERA ==1){
  1363  0164  0347               	decf	_BANDERA,w
  1364  0165  1D03               	btfss	3,2
  1365  0166  2968               	goto	u37_21
  1366  0167  2969               	goto	u37_20
  1367  0168                     u37_21:
  1368  0168  2975               	goto	i1l1093
  1369  0169                     u37_20:
  1370  0169                     i1l1085:
  1371                           
  1372                           ;ADC.c: 113:             mostrar = x;
  1373  0169  0844               	movf	_x,w
  1374  016A  00FC               	movwf	??_desplegar
  1375  016B  087C               	movf	??_desplegar,w
  1376  016C  00FD               	movwf	desplegar@mostrar
  1377  016D                     i1l1087:
  1378                           
  1379                           ;ADC.c: 114:             PORTC = DISPLAY1[mostrar];
  1380  016D  087D               	movf	desplegar@mostrar,w
  1381  016E  3E30               	addlw	(low (_DISPLAY1| 0))& (0+255)
  1382  016F  0084               	movwf	4
  1383  0170  1383               	bcf	3,7	;select IRP bank0
  1384  0171  0800               	movf	0,w
  1385  0172  0087               	movwf	7	;volatile
  1386  0173                     i1l1089:
  1387                           
  1388                           ;ADC.c: 115:             RD0 = 1;
  1389  0173  1408               	bsf	8,0	;volatile
  1390  0174                     i1l1091:
  1391                           
  1392                           ;ADC.c: 116:             RD1 = 0;
  1393  0174  1088               	bcf	8,1	;volatile
  1394  0175                     i1l1093:
  1395                           
  1396                           ;ADC.c: 120:         if(BANDERA == 0){
  1397  0175  0847               	movf	_BANDERA,w
  1398  0176  1D03               	btfss	3,2
  1399  0177  2979               	goto	u38_21
  1400  0178  297A               	goto	u38_20
  1401  0179                     u38_21:
  1402  0179  2986               	goto	i1l1103
  1403  017A                     u38_20:
  1404  017A                     i1l1095:
  1405                           
  1406                           ;ADC.c: 121:             mostrar = y;
  1407  017A  0843               	movf	_y,w
  1408  017B  00FC               	movwf	??_desplegar
  1409  017C  087C               	movf	??_desplegar,w
  1410  017D  00FD               	movwf	desplegar@mostrar
  1411  017E                     i1l1097:
  1412                           
  1413                           ;ADC.c: 122:             PORTC = DISPLAY2[mostrar];
  1414  017E  087D               	movf	desplegar@mostrar,w
  1415  017F  3E20               	addlw	(low (_DISPLAY2| 0))& (0+255)
  1416  0180  0084               	movwf	4
  1417  0181  1383               	bcf	3,7	;select IRP bank0
  1418  0182  0800               	movf	0,w
  1419  0183  0087               	movwf	7	;volatile
  1420  0184                     i1l1099:
  1421                           
  1422                           ;ADC.c: 123:             RD1 = 1;
  1423  0184  1488               	bsf	8,1	;volatile
  1424  0185                     i1l1101:
  1425                           
  1426                           ;ADC.c: 124:             RD0 = 0;
  1427  0185  1008               	bcf	8,0	;volatile
  1428  0186                     i1l1103:
  1429                           
  1430                           ;ADC.c: 128:          TOGGLE();
  1431  0186  120A  118A  221B  120A  118A  	fcall	_TOGGLE
  1432  018B                     i1l158:
  1433  018B  0008               	return
  1434  018C                     __end_of_desplegar:
  1435                           
  1436                           	psect	text6
  1437  021B                     __ptext6:	
  1438 ;; *************** function _TOGGLE *****************
  1439 ;; Defined at:
  1440 ;;		line 88 in file "ADC.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1454 ;;      Params:         0       0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0
  1456 ;;      Temps:          0       0       0       0       0
  1457 ;;      Totals:         0       0       0       0       0
  1458 ;;Total ram usage:        0 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; This function calls:
  1461 ;;		Nothing
  1462 ;; This function is called by:
  1463 ;;		_desplegar
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           
  1468                           ;psect for function _TOGGLE
  1469  021B                     _TOGGLE:
  1470  021B                     i1l1061:	
  1471                           ;incstack = 0
  1472                           ; Regs used in _TOGGLE: [wreg+status,2+status,0]
  1473                           
  1474                           
  1475                           ;ADC.c: 89:         if(BANDERA==1){
  1476  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1477  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1478  021D  0347               	decf	_BANDERA,w
  1479  021E  1D03               	btfss	3,2
  1480  021F  2A21               	goto	u36_21
  1481  0220  2A22               	goto	u36_20
  1482  0221                     u36_21:
  1483  0221  2A24               	goto	i1l148
  1484  0222                     u36_20:
  1485  0222                     i1l1063:
  1486                           
  1487                           ;ADC.c: 90:             BANDERA =0;
  1488  0222  01C7               	clrf	_BANDERA
  1489  0223  2A26               	goto	i1l149
  1490  0224                     i1l148:	
  1491                           ;ADC.c: 93:         else{
  1492                           
  1493                           
  1494                           ;ADC.c: 94:             BANDERA = 1;
  1495  0224  01C7               	clrf	_BANDERA
  1496  0225  0AC7               	incf	_BANDERA,f
  1497  0226                     i1l149:	
  1498                           ;ADC.c: 95:             return;
  1499                           
  1500  0226  0008               	return
  1501  0227                     __end_of_TOGGLE:
  1502                           
  1503                           	psect	text7
  1504  01B9                     __ptext7:	
  1505 ;; *************** function _NIBBLES *****************
  1506 ;; Defined at:
  1507 ;;		line 99 in file "ADC.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;		None
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;		None
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, status,2, status,0, pclath, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1521 ;;      Params:         0       0       0       0       0
  1522 ;;      Locals:         0       0       0       0       0
  1523 ;;      Temps:          3       0       0       0       0
  1524 ;;      Totals:         3       0       0       0       0
  1525 ;;Total ram usage:        3 bytes
  1526 ;; Hardware stack levels used:    1
  1527 ;; Hardware stack levels required when called:    1
  1528 ;; This function calls:
  1529 ;;		___awdiv
  1530 ;; This function is called by:
  1531 ;;		_desplegar
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           
  1536                           ;psect for function _NIBBLES
  1537  01B9                     _NIBBLES:
  1538  01B9                     i1l1069:	
  1539                           ;incstack = 0
  1540                           ; Regs used in _NIBBLES: [wreg+status,2+status,0+pclath+cstack]
  1541                           
  1542                           
  1543                           ;ADC.c: 100:         x = ADRESL/16 ;
  1544  01B9  3010               	movlw	16
  1545  01BA  00F0               	movwf	___awdiv@divisor
  1546  01BB  3000               	movlw	0
  1547  01BC  00F1               	movwf	___awdiv@divisor+1
  1548  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  1549  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  1550  01BF  081E               	movf	30,w	;volatile
  1551  01C0  00F9               	movwf	??_NIBBLES
  1552  01C1  01FA               	clrf	??_NIBBLES+1
  1553  01C2  0879               	movf	??_NIBBLES,w
  1554  01C3  00F2               	movwf	___awdiv@dividend
  1555  01C4  087A               	movf	??_NIBBLES+1,w
  1556  01C5  00F3               	movwf	___awdiv@dividend+1
  1557  01C6  120A  118A  202D  120A  118A  	fcall	___awdiv
  1558  01CB  0870               	movf	?___awdiv,w
  1559  01CC  00FB               	movwf	??_NIBBLES+2
  1560  01CD  087B               	movf	??_NIBBLES+2,w
  1561  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1562  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1563  01D0  00C4               	movwf	_x
  1564  01D1                     i1l1071:
  1565                           
  1566                           ;ADC.c: 101:         y = ADRESL%16 ;
  1567  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  1568  01D2  1303               	bcf	3,6	;RP1=0, select bank1
  1569  01D3  081E               	movf	30,w	;volatile
  1570  01D4  390F               	andlw	15
  1571  01D5  00F9               	movwf	??_NIBBLES
  1572  01D6  0879               	movf	??_NIBBLES,w
  1573  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1574  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  1575  01D9  00C3               	movwf	_y
  1576  01DA                     i1l153:
  1577  01DA  0008               	return
  1578  01DB                     __end_of_NIBBLES:
  1579                           
  1580                           	psect	text8
  1581  002D                     __ptext8:	
  1582 ;; *************** function ___awdiv *****************
  1583 ;; Defined at:
  1584 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  divisor         2    0[COMMON] int 
  1587 ;;  dividend        2    2[COMMON] int 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  quotient        2    7[COMMON] int 
  1590 ;;  sign            1    6[COMMON] unsigned char 
  1591 ;;  counter         1    5[COMMON] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  2    0[COMMON] int 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1601 ;;      Params:         4       0       0       0       0
  1602 ;;      Locals:         4       0       0       0       0
  1603 ;;      Temps:          1       0       0       0       0
  1604 ;;      Totals:         9       0       0       0       0
  1605 ;;Total ram usage:        9 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; This function calls:
  1608 ;;		Nothing
  1609 ;; This function is called by:
  1610 ;;		_NIBBLES
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function ___awdiv
  1616  002D                     ___awdiv:
  1617  002D                     i1l1017:	
  1618                           ;incstack = 0
  1619                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1620                           
  1621  002D  01F6               	clrf	___awdiv@sign
  1622  002E                     i1l1019:
  1623  002E  1FF1               	btfss	___awdiv@divisor+1,7
  1624  002F  2831               	goto	u26_21
  1625  0030  2832               	goto	u26_20
  1626  0031                     u26_21:
  1627  0031  2839               	goto	i1l1025
  1628  0032                     u26_20:
  1629  0032                     i1l1021:
  1630  0032  09F0               	comf	___awdiv@divisor,f
  1631  0033  09F1               	comf	___awdiv@divisor+1,f
  1632  0034  0AF0               	incf	___awdiv@divisor,f
  1633  0035  1903               	skipnz
  1634  0036  0AF1               	incf	___awdiv@divisor+1,f
  1635  0037                     i1l1023:
  1636  0037  01F6               	clrf	___awdiv@sign
  1637  0038  0AF6               	incf	___awdiv@sign,f
  1638  0039                     i1l1025:
  1639  0039  1FF3               	btfss	___awdiv@dividend+1,7
  1640  003A  283C               	goto	u27_21
  1641  003B  283D               	goto	u27_20
  1642  003C                     u27_21:
  1643  003C  2846               	goto	i1l1031
  1644  003D                     u27_20:
  1645  003D                     i1l1027:
  1646  003D  09F2               	comf	___awdiv@dividend,f
  1647  003E  09F3               	comf	___awdiv@dividend+1,f
  1648  003F  0AF2               	incf	___awdiv@dividend,f
  1649  0040  1903               	skipnz
  1650  0041  0AF3               	incf	___awdiv@dividend+1,f
  1651  0042                     i1l1029:
  1652  0042  3001               	movlw	1
  1653  0043  00F4               	movwf	??___awdiv
  1654  0044  0874               	movf	??___awdiv,w
  1655  0045  06F6               	xorwf	___awdiv@sign,f
  1656  0046                     i1l1031:
  1657  0046  01F7               	clrf	___awdiv@quotient
  1658  0047  01F8               	clrf	___awdiv@quotient+1
  1659  0048                     i1l1033:
  1660  0048  0870               	movf	___awdiv@divisor,w
  1661  0049  0471               	iorwf	___awdiv@divisor+1,w
  1662  004A  1903               	btfsc	3,2
  1663  004B  284D               	goto	u28_21
  1664  004C  284E               	goto	u28_20
  1665  004D                     u28_21:
  1666  004D  2885               	goto	i1l1053
  1667  004E                     u28_20:
  1668  004E                     i1l1035:
  1669  004E  01F5               	clrf	___awdiv@counter
  1670  004F  0AF5               	incf	___awdiv@counter,f
  1671  0050  285C               	goto	i1l1041
  1672  0051                     i1l1037:
  1673  0051  3001               	movlw	1
  1674  0052                     u29_25:
  1675  0052  1003               	clrc
  1676  0053  0DF0               	rlf	___awdiv@divisor,f
  1677  0054  0DF1               	rlf	___awdiv@divisor+1,f
  1678  0055  3EFF               	addlw	-1
  1679  0056  1D03               	skipz
  1680  0057  2852               	goto	u29_25
  1681  0058                     i1l1039:
  1682  0058  3001               	movlw	1
  1683  0059  00F4               	movwf	??___awdiv
  1684  005A  0874               	movf	??___awdiv,w
  1685  005B  07F5               	addwf	___awdiv@counter,f
  1686  005C                     i1l1041:
  1687  005C  1FF1               	btfss	___awdiv@divisor+1,7
  1688  005D  285F               	goto	u30_21
  1689  005E  2860               	goto	u30_20
  1690  005F                     u30_21:
  1691  005F  2851               	goto	i1l1037
  1692  0060                     u30_20:
  1693  0060                     i1l1043:
  1694  0060  3001               	movlw	1
  1695  0061                     u31_25:
  1696  0061  1003               	clrc
  1697  0062  0DF7               	rlf	___awdiv@quotient,f
  1698  0063  0DF8               	rlf	___awdiv@quotient+1,f
  1699  0064  3EFF               	addlw	-1
  1700  0065  1D03               	skipz
  1701  0066  2861               	goto	u31_25
  1702  0067  0871               	movf	___awdiv@divisor+1,w
  1703  0068  0273               	subwf	___awdiv@dividend+1,w
  1704  0069  1D03               	skipz
  1705  006A  286D               	goto	u32_25
  1706  006B  0870               	movf	___awdiv@divisor,w
  1707  006C  0272               	subwf	___awdiv@dividend,w
  1708  006D                     u32_25:
  1709  006D  1C03               	skipc
  1710  006E  2870               	goto	u32_21
  1711  006F  2871               	goto	u32_20
  1712  0070                     u32_21:
  1713  0070  2878               	goto	i1l1049
  1714  0071                     u32_20:
  1715  0071                     i1l1045:
  1716  0071  0870               	movf	___awdiv@divisor,w
  1717  0072  02F2               	subwf	___awdiv@dividend,f
  1718  0073  0871               	movf	___awdiv@divisor+1,w
  1719  0074  1C03               	skipc
  1720  0075  03F3               	decf	___awdiv@dividend+1,f
  1721  0076  02F3               	subwf	___awdiv@dividend+1,f
  1722  0077                     i1l1047:
  1723  0077  1477               	bsf	___awdiv@quotient,0
  1724  0078                     i1l1049:
  1725  0078  3001               	movlw	1
  1726  0079                     u33_25:
  1727  0079  1003               	clrc
  1728  007A  0CF1               	rrf	___awdiv@divisor+1,f
  1729  007B  0CF0               	rrf	___awdiv@divisor,f
  1730  007C  3EFF               	addlw	-1
  1731  007D  1D03               	skipz
  1732  007E  2879               	goto	u33_25
  1733  007F                     i1l1051:
  1734  007F  3001               	movlw	1
  1735  0080  02F5               	subwf	___awdiv@counter,f
  1736  0081  1D03               	btfss	3,2
  1737  0082  2884               	goto	u34_21
  1738  0083  2885               	goto	u34_20
  1739  0084                     u34_21:
  1740  0084  2860               	goto	i1l1043
  1741  0085                     u34_20:
  1742  0085                     i1l1053:
  1743  0085  0876               	movf	___awdiv@sign,w
  1744  0086  1903               	btfsc	3,2
  1745  0087  2889               	goto	u35_21
  1746  0088  288A               	goto	u35_20
  1747  0089                     u35_21:
  1748  0089  288F               	goto	i1l1057
  1749  008A                     u35_20:
  1750  008A                     i1l1055:
  1751  008A  09F7               	comf	___awdiv@quotient,f
  1752  008B  09F8               	comf	___awdiv@quotient+1,f
  1753  008C  0AF7               	incf	___awdiv@quotient,f
  1754  008D  1903               	skipnz
  1755  008E  0AF8               	incf	___awdiv@quotient+1,f
  1756  008F                     i1l1057:
  1757  008F  0878               	movf	___awdiv@quotient+1,w
  1758  0090  00F1               	movwf	?___awdiv+1
  1759  0091  0877               	movf	___awdiv@quotient,w
  1760  0092  00F0               	movwf	?___awdiv
  1761  0093                     i1l404:
  1762  0093  0008               	return
  1763  0094                     __end_of___awdiv:
  1764  007E                     btemp	set	126	;btemp
  1765  007E                     wtemp0	set	126
  1766                           
  1767                           	psect	config
  1768                           
  1769                           ;Config register CONFIG1 @ 0x2007
  1770                           ;	Oscillator Selection bits
  1771                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1772                           ;	Watchdog Timer Enable bit
  1773                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1774                           ;	Power-up Timer Enable bit
  1775                           ;	PWRTE = OFF, PWRT disabled
  1776                           ;	RE3/MCLR pin function select bit
  1777                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1778                           ;	Code Protection bit
  1779                           ;	CP = OFF, Program memory code protection is disabled
  1780                           ;	Data Code Protection bit
  1781                           ;	CPD = OFF, Data memory code protection is disabled
  1782                           ;	Brown Out Reset Selection bits
  1783                           ;	BOREN = OFF, BOR disabled
  1784                           ;	Internal External Switchover bit
  1785                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1786                           ;	Fail-Safe Clock Monitor Enabled bit
  1787                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1788                           ;	Low Voltage Programming Enable bit
  1789                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1790                           ;	In-Circuit Debugger Mode bit
  1791                           ;	DEBUG = 0x1, unprogrammed default
  1792  2007                     	org	8199
  1793  2007  20D4               	dw	8404
  1794                           
  1795                           ;Config register CONFIG2 @ 0x2008
  1796                           ;	Brown-out Reset Selection bit
  1797                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1798                           ;	Flash Program Memory Self Write Enable bits
  1799                           ;	WRT = OFF, Write protection off
  1800  2008                     	org	8200
  1801  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        32
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      5      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_desplegar
    _desplegar->_NIBBLES
    _NIBBLES->___awdiv

Critical Paths under _main in BANK0

    _main->_analogico

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _analogico
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _analogico                                            2     2      0       0
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0     499
                                              0 BANK0      3     3      0
                          _desplegar
                          _operacion
 ---------------------------------------------------------------------------------
 (3) _operacion                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _desplegar                                            2     2      0     499
                                             12 COMMON     2     2      0
                            _NIBBLES
                             _TOGGLE
 ---------------------------------------------------------------------------------
 (4) _TOGGLE                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _NIBBLES                                              3     3      0     452
                                              9 COMMON     3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _analogico
   _setup

 _ISR (ROOT)
   _desplegar
     _NIBBLES
       ___awdiv
     _TOGGLE
   _operacion

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      5      2D       5       56.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3B      12        0.0%
ABS                  0      0      3B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Feb 07 23:29:14 2021

                      _i 0045                        _x 0044                        _y 0043  
                      _z 0046                        pc 0002                       l62 00EB  
                     l64 0101                       l59 0218             ___awdiv@sign 0076  
                     fsr 0004                      l145 00EA                      _ADC 0042  
                    _RB0 0030                      _RB1 0031                      _RD0 0040  
                    _RD1 0041                      _RD2 0042                      u450 00F5  
                    u451 00F4                      u460 0100                      _ISR 018C  
                    u517 0108                      u461 00FF                      u470 0113  
                    u471 0112                      fsr0 0004                      indf 0000  
        __end_of_NIBBLES 01DB                     ?_ISR 0070                     l1201 00CC  
                   l1211 00D6                     l1203 00D0                     l1221 00DF  
                   l1213 00D9                     l1205 00D1                     l1141 009C  
                   l1231 00E6                     l1223 00E0                     l1215 00DA  
                   l1207 00D2                     l1151 00A6                     l1143 009D  
                   l1135 0094                     l1241 00F5                     l1233 00E7  
                   l1225 00E3                     l1217 00DB                     l1209 00D3  
                   l1161 00AE                     l1153 00A8                     l1145 009E  
                   l1137 009A                     l1251 0113                     l1243 00F6  
                   l1235 00E8                     l1227 00E4                     l1219 00DC  
                   l1171 00B3                     l1163 00AF                     l1155 00A9  
                   l1147 00A1                     l1139 009B                     l1245 0100  
                   l1237 00E9                     l1229 00E5                     l1181 00B8  
                   l1173 00B4                     l1165 00B0                     l1157 00AA  
                   l1149 00A3                     l1247 0102                     l1239 00EB  
                   l1191 00C1                     l1183 00B9                     l1175 00B5  
                   l1167 00B1                     l1159 00AB                     l1249 010D  
                   l1193 00C4                     l1185 00BC                     l1177 00B6  
                   l1169 00B2                     l1273 020E                     l1195 00C5  
                   l1187 00BD                     l1179 00B7                     l1197 00C6  
                   l1189 00BE                     l1199 00C7                     i1l51 019D  
                   i1l52 01AE                     i1l53 01A9                     _TMR0 0001  
                   _main 020E                     btemp 007E                     start 0010  
                  ??_ISR 0048                    ?_main 0070          __end_of___awdiv 0094  
                  _ANSEL 0188          ___awdiv@divisor 0070                    i1l153 01DA  
                  i1l161 012E                    i1l162 0142                    i1l163 015A  
                  i1l404 0093                    i1l148 0224                    i1l164 0149  
                  i1l149 0226                    i1l158 018B          ___awdiv@counter 0075  
                  u30_20 0060                    u30_21 005F                    u31_25 0061  
                  u32_20 0071                    u40_20 0132                    u32_21 0070  
                  u40_21 0131                    u32_25 006D                    u41_20 0137  
                  u41_21 0136                    u33_25 0079                    u34_20 0085  
                  u26_20 0032                    u42_20 0146                    u50_20 01AD  
                  u34_21 0084                    u26_21 0031                    u42_21 0145  
                  u50_21 01AC                    u35_20 008A                    u27_20 003D  
                  u43_20 014D                    u35_21 0089                    u27_21 003C  
                  u43_21 014C                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u28_20 004E                    u36_20 0222                    u44_20 0152  
                  u28_21 004D                    u36_21 0221                    u44_21 0151  
                  u37_20 0169                    u37_21 0168                    u29_25 0052  
                  u38_20 017A                    u38_21 0179                    u39_20 012B  
                  u39_21 012A                    u48_20 0190                    u48_21 018F  
                  u49_20 01A1                    u49_21 01A0                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089                    _setup 0094                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0013  
           __end_of_main 021B                   ??_main 004D                ??_NIBBLES 0079  
                 _ADRESL 009E         ___awdiv@dividend 0072                   ?_setup 0070  
                 _ANSELH 0189                   i1l1021 0032                   i1l1101 0185  
                 i1l1031 0046                   i1l1023 0037                   i1l1103 0186  
                 i1l1111 0137                   i1l1041 005C                   i1l1033 0048  
                 i1l1025 0039                   i1l1017 002D                   i1l1121 0146  
                 i1l1113 0138                   i1l1105 0125                   i1l1051 007F  
                 i1l1043 0060                   i1l1035 004E                   i1l1027 003D  
                 i1l1019 002E                   i1l1131 0159                   i1l1123 014D  
                 i1l1115 013C                   i1l1107 012B                   i1l1045 0071  
                 i1l1037 0051                   i1l1053 0085                   i1l1029 0042  
                 i1l1061 021B                   i1l1125 0152                   i1l1117 0140  
                 i1l1109 0132                   i1l1055 008A                   i1l1047 0077  
                 i1l1039 0058                   i1l1071 01D1                   i1l1063 0222  
                 i1l1127 0153                   i1l1057 008F                   i1l1049 0078  
                 i1l1081 0163                   i1l1129 0155                   i1l1091 0174  
                 i1l1083 0164                   i1l1075 015B                   i1l1069 01B9  
                 i1l1085 0169                   i1l1093 0175                   i1l1077 0160  
                 i1l1261 019A                   i1l1253 018C                   i1l1095 017A  
                 i1l1087 016D                   i1l1079 0160                   i1l1271 01AD  
                 i1l1255 0190                   i1l1097 017E                   i1l1089 0173  
                 i1l1265 01A1                   i1l1257 0195                   i1l1099 0184  
                 i1l1267 01A3                   i1l1259 0196                   _TMR0IF 005A  
                 _TOGGLE 021B                ??___awdiv 0074         ___awdiv@quotient 0077  
                 saved_w 007E  __end_of__initialization 0029           __pcstackCOMMON 0070  
           __pidataBANK0 01DB            __end_of_setup 00EB       __size_of_analogico 003A  
         _OPTION_REGbits 0081       __size_of_desplegar 0031                  ??_setup 004B  
             __pbssBANK0 0040                  ?_TOGGLE 0070               __pmaintext 020E  
             __pintentry 0004                  _BANDERA 0047       __size_of_operacion 0036  
                _NIBBLES 01B9        __end_of_analogico 0125          __size_of_TOGGLE 000C  
      __end_of_desplegar 018C                  ___awdiv 002D                  __ptext1 0094  
                __ptext2 00EB                  __ptext3 018C                  __ptext4 0125  
                __ptext5 015B                  __ptext6 021B                  __ptext7 01B9  
                __ptext8 002D             __size_of_ISR 002D     end_of_initialization 0029  
      __end_of_operacion 015B         desplegar@mostrar 007D           __end_of_TOGGLE 0227  
    start_initialization 0013              __end_of_ISR 01B9                 ??_TOGGLE 0070  
             init_fetch0 01FB              __pdataBANK0 0020                 ?_NIBBLES 0070  
              ___latbits 0002            __pcstackBANK0 0048              _ANTIREBOTEA 0041  
            _ANTIREBOTEB 0040                _analogico 00EB                 ?___awdiv 0070  
              _desplegar 015B                 _DISPLAY1 0030                 _DISPLAY2 0020  
         __size_of_setup 0057        interrupt_function 0004                 _IOCBbits 0096  
               _PIE1bits 008C               ?_analogico 0070                _operacion 0125  
               _PIR1bits 000C               ?_desplegar 0070               _ADCON0bits 001F  
             _ADCON1bits 009F         __size_of_NIBBLES 0022               ?_operacion 0070  
       __size_of___awdiv 0067            __size_of_main 000D              ??_analogico 004B  
            ??_desplegar 007C               _INTCONbits 000B                 init_ram0 01FF  
               intlevel1 0000              ??_operacion 0070               _OSCCONbits 008F  
